Created by PLY version 3.10 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> START EDJO VAR_ID crea_primer_cuadruplo crea_funcion_global SEMICOLON Vars funciones Main
Rule 2     crea_primer_cuadruplo -> <empty>
Rule 3     crea_funcion_global -> <empty>
Rule 4     Vars -> Tipo VAR_ID mas_vars agrega_var_funcion SEMICOLON Vars
Rule 5     Vars -> Tipo VAR_ID SLBRACKET VAR_INT push_int_PilaOperandos SRBRACKET agrega_limites_arreglo agrega_arr_funcion SEMICOLON Vars
Rule 6     Vars -> <empty>
Rule 7     agrega_limites_arreglo -> <empty>
Rule 8     agrega_arr_funcion -> <empty>
Rule 9     Tipo -> INT
Rule 10    Tipo -> DECIMAL
Rule 11    Tipo -> STRING
Rule 12    Tipo -> CHAR
Rule 13    Tipo -> BOOL
Rule 14    mas_vars -> COMMA VAR_ID mas_vars
Rule 15    mas_vars -> <empty>
Rule 16    agrega_var_funcion -> <empty>
Rule 17    Asignacion -> VAR_ID push_var_PilaOperandos pos_arreglo ASSIGN push_operador_PilaOperadores ExpI SEMICOLON resuelve_asignacion
Rule 18    Asignacion -> VAR_ID push_var_PilaOperandos pos_arreglo ASSIGN push_operador_PilaOperadores READ LPAREN ExpI RPAREN crea_cuadruplo_read SEMICOLON resuelve_asignacion
Rule 19    crea_cuadruplo_read -> <empty>
Rule 20    push_var_PilaOperandos -> <empty>
Rule 21    push_operador_PilaOperadores -> <empty>
Rule 22    resuelve_asignacion -> <empty>
Rule 23    ExpI -> ExpK resuelve_operadores_relacionales
Rule 24    ExpI -> ExpK Operandos push_operador_PilaOperadores ExpK resuelve_operadores_relacionales
Rule 25    Operandos -> LT
Rule 26    Operandos -> GT
Rule 27    Operandos -> NE
Rule 28    Operandos -> LE
Rule 29    Operandos -> GE
Rule 30    Operandos -> EQ
Rule 31    resuelve_operadores_relacionales -> <empty>
Rule 32    ExpK -> ExpT resuelve_termino
Rule 33    ExpK -> ExpT resuelve_termino pos_SUMRES push_operador_PilaOperadores ExpK
Rule 34    resuelve_termino -> <empty>
Rule 35    pos_SUMRES -> PLUS
Rule 36    pos_SUMRES -> MINUS
Rule 37    ExpT -> ExpF resuelve_factor
Rule 38    ExpT -> ExpF resuelve_factor pos_MULTDIV push_operador_PilaOperadores ExpT
Rule 39    resuelve_factor -> <empty>
Rule 40    pos_MULTDIV -> MULT
Rule 41    pos_MULTDIV -> DIV
Rule 42    ExpF -> VAR_CTE
Rule 43    ExpF -> LPAREN agrega_falso ExpI RPAREN quita_falso
Rule 44    ExpF -> VAR_ID push_var_PilaOperandos pos_arreglo
Rule 45    ExpF -> llama_funcion
Rule 46    VAR_CTE -> VAR_INT push_int_PilaOperandos
Rule 47    VAR_CTE -> VAR_DECIMAL push_decimal_PilaOperandos
Rule 48    VAR_CTE -> VAR_STRING push_string_PilaOperandos
Rule 49    VAR_CTE -> VAR_BOOL push_bool_PilaOperandos
Rule 50    VAR_BOOL -> FALSE
Rule 51    VAR_BOOL -> TRUE
Rule 52    push_int_PilaOperandos -> <empty>
Rule 53    push_decimal_PilaOperandos -> <empty>
Rule 54    push_string_PilaOperandos -> <empty>
Rule 55    push_bool_PilaOperandos -> <empty>
Rule 56    agrega_falso -> <empty>
Rule 57    quita_falso -> <empty>
Rule 58    llama_funcion -> VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion guarda_resultado_funcion
Rule 59    checa_funcion_si_existe -> <empty>
Rule 60    argumentos -> ExpI resuelve_argumentos mas_argumentos
Rule 61    argumentos -> <empty>
Rule 62    mas_argumentos -> COMMA ExpI resuelve_argumentos mas_argumentos
Rule 63    mas_argumentos -> <empty>
Rule 64    resuelve_argumentos -> <empty>
Rule 65    resuelve_llamada_funcion -> <empty>
Rule 66    guarda_resultado_funcion -> <empty>
Rule 67    pos_arreglo -> SLBRACKET checa_var_arr agrega_falso ExpI crea_cuadruplo_ver quita_falso SRBRACKET
Rule 68    pos_arreglo -> <empty>
Rule 69    crea_cuadruplo_ver -> <empty>
Rule 70    checa_var_arr -> <empty>
Rule 71    funciones -> FUNC tipo_funcion VAR_ID LPAREN param RPAREN agrega_funcion LBRACKET Vars reg_brack RBRACKET fin_func_cuad funciones
Rule 72    funciones -> <empty>
Rule 73    tipo_funcion -> VOID
Rule 74    tipo_funcion -> Tipo
Rule 75    param -> Tipo VAR_ID pos_commaf
Rule 76    param -> <empty>
Rule 77    pos_commaf -> COMMA Tipo VAR_ID pos_commaf
Rule 78    pos_commaf -> <empty>
Rule 79    agrega_funcion -> <empty>
Rule 80    fin_func_cuad -> <empty>
Rule 81    reg_brack -> Estatutos reg_brack
Rule 82    reg_brack -> <empty>
Rule 83    Estatutos -> Condicion
Rule 84    Estatutos -> Ciclo
Rule 85    Estatutos -> Return
Rule 86    Estatutos -> Asignacion
Rule 87    Estatutos -> Print
Rule 88    Estatutos -> Llamada_Func
Rule 89    Estatutos -> Turtle
Rule 90    Condicion -> IF LPAREN ExpI RPAREN crea_GOTOF LBRACKET reg_brack RBRACKET pos_else llena_cuadruplo_if
Rule 91    crea_GOTOF -> <empty>
Rule 92    llena_cuadruplo_if -> <empty>
Rule 93    pos_else -> ELSE crea_else_cuadruplo LBRACKET reg_brack RBRACKET
Rule 94    pos_else -> <empty>
Rule 95    crea_else_cuadruplo -> <empty>
Rule 96    Return -> RETURN ExpI SEMICOLON resuelve_return
Rule 97    resuelve_return -> <empty>
Rule 98    Print -> PRINT LPAREN ExpI RPAREN SEMICOLON crea_print
Rule 99    crea_print -> <empty>
Rule 100   Llamada_Func -> VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion SEMICOLON checa_void
Rule 101   checa_void -> <empty>
Rule 102   Ciclo -> For
Rule 103   Ciclo -> While
Rule 104   Ciclo -> DoWhile
Rule 105   While -> WHILE guarda_numero_cuadruplo LPAREN ExpI RPAREN crea_GOTOF LBRACKET reg_brack RBRACKET regresa_inicio_while
Rule 106   guarda_numero_cuadruplo -> <empty>
Rule 107   regresa_inicio_while -> <empty>
Rule 108   DoWhile -> DO guarda_numero_cuadruplo LBRACKET reg_brack RBRACKET WHILE LPAREN ExpI RPAREN SEMICOLON crea_GOTOV
Rule 109   crea_GOTOV -> <empty>
Rule 110   For -> FOR LPAREN VAR_ID ASSIGN ExpI SEMICOLON ExpI SEMICOLON VAR_ID Exp_ciclo RPAREN LBRACKET reg_brack RBRACKET
Rule 111   Exp_ciclo -> PLUS VAR_INT
Rule 112   Exp_ciclo -> MINUS VAR_INT
Rule 113   Exp_ciclo -> MULT VAR_INT
Rule 114   Exp_ciclo -> DIV VAR_INT
Rule 115   Exp_ciclo -> PLUSPLUS
Rule 116   Exp_ciclo -> MINUSMINUS
Rule 117   Main -> MAIN agrega_main_funcion LPAREN RPAREN LBRACKET Vars reg_brack RET ZERO SEMICOLON RBRACKET
Rule 118   agrega_main_funcion -> <empty>
Rule 119   Turtle -> Forward
Rule 120   Turtle -> Right
Rule 121   Turtle -> Left
Rule 122   Turtle -> Circle
Rule 123   Turtle -> Position
Rule 124   Turtle -> IniciaTurtle
Rule 125   Turtle -> TerminaTurtle
Rule 126   Turtle -> iniciaFill
Rule 127   Turtle -> Square
Rule 128   Turtle -> Rectangle
Rule 129   Turtle -> Triangle
Rule 130   Turtle -> terminaFill
Rule 131   Turtle -> colorFill
Rule 132   Turtle -> colorPen
Rule 133   Forward -> TUR POINT FORWARD LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_forward
Rule 134   crea_cuadruplo_forward -> <empty>
Rule 135   Right -> TUR POINT RIGHT LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_right
Rule 136   crea_cuadruplo_right -> <empty>
Rule 137   Left -> TUR POINT LEFT LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_left
Rule 138   crea_cuadruplo_left -> <empty>
Rule 139   Circle -> TUR POINT CIRCLE LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_circle
Rule 140   crea_cuadruplo_circle -> <empty>
Rule 141   Square -> TUR POINT SQUARE LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_square
Rule 142   crea_cuadruplo_square -> <empty>
Rule 143   Rectangle -> TUR POINT RECTANGLE LPAREN ExpI COMMA ExpI RPAREN SEMICOLON crea_cuadruplo_rectangle
Rule 144   crea_cuadruplo_rectangle -> <empty>
Rule 145   Triangle -> TUR POINT TRIANGLE LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_triangle
Rule 146   crea_cuadruplo_triangle -> <empty>
Rule 147   iniciaFill -> TUR POINT BEGIN_FILL LPAREN RPAREN SEMICOLON crea_cuadruplo_iniciafill
Rule 148   crea_cuadruplo_iniciafill -> <empty>
Rule 149   terminaFill -> TUR POINT END_FILL LPAREN RPAREN SEMICOLON crea_cuadruplo_terminafill
Rule 150   crea_cuadruplo_terminafill -> <empty>
Rule 151   colorFill -> TUR POINT COLOR LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_colorFill
Rule 152   crea_cuadruplo_colorFill -> <empty>
Rule 153   colorPen -> TUR POINT PENCOLOR LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_colorPen
Rule 154   crea_cuadruplo_colorPen -> <empty>
Rule 155   Position -> TUR POINT POS LPAREN ExpI COMMA ExpI RPAREN SEMICOLON crea_cuadruplo_pos
Rule 156   crea_cuadruplo_pos -> <empty>
Rule 157   IniciaTurtle -> TUR POINT TURTLE LPAREN RPAREN SEMICOLON crea_cuadruplo_inicia
Rule 158   crea_cuadruplo_inicia -> <empty>
Rule 159   TerminaTurtle -> TUR POINT FINISH LPAREN RPAREN SEMICOLON crea_cuadruplo_termina
Rule 160   crea_cuadruplo_termina -> <empty>

Terminals, with rules where they appear

ASSIGN               : 17 18 110
BEGIN_FILL           : 147
BOOL                 : 13
CHAR                 : 12
CIRCLE               : 139
COLOR                : 151
COMMA                : 14 62 77 143 155
DECIMAL              : 10
DIV                  : 41 114
DO                   : 108
EDJO                 : 1
ELSE                 : 93
END_FILL             : 149
EQ                   : 30
FALSE                : 50
FINISH               : 159
FOR                  : 110
FORWARD              : 133
FUNC                 : 71
GE                   : 29
GT                   : 26
IF                   : 90
INT                  : 9
LBRACKET             : 71 90 93 105 108 110 117
LE                   : 28
LEFT                 : 137
LPAREN               : 18 43 58 71 90 98 100 105 108 110 117 133 135 137 139 141 143 145 147 149 151 153 155 157 159
LT                   : 25
MAIN                 : 117
MINUS                : 36 112
MINUSMINUS           : 116
MULT                 : 40 113
NE                   : 27
PENCOLOR             : 153
PLUS                 : 35 111
PLUSPLUS             : 115
POINT                : 133 135 137 139 141 143 145 147 149 151 153 155 157 159
POS                  : 155
PRINT                : 98
RBRACKET             : 71 90 93 105 108 110 117
READ                 : 18
RECTANGLE            : 143
RET                  : 117
RETURN               : 96
RIGHT                : 135
RPAREN               : 18 43 58 71 90 98 100 105 108 110 117 133 135 137 139 141 143 145 147 149 151 153 155 157 159
SEMICOLON            : 1 4 5 17 18 96 98 100 108 110 110 117 133 135 137 139 141 143 145 147 149 151 153 155 157 159
SLBRACKET            : 5 67
SQUARE               : 141
SRBRACKET            : 5 67
START                : 1
STRING               : 11
TRIANGLE             : 145
TRUE                 : 51
TUR                  : 133 135 137 139 141 143 145 147 149 151 153 155 157 159
TURTLE               : 157
VAR_DECIMAL          : 47
VAR_ID               : 1 4 5 14 17 18 44 58 71 75 77 100 110 110
VAR_INT              : 5 46 111 112 113 114
VAR_STRING           : 48
VOID                 : 73
WHILE                : 105 108
ZERO                 : 117
error                : 

Nonterminals, with rules where they appear

Asignacion           : 86
Ciclo                : 84
Circle               : 122
Condicion            : 83
DoWhile              : 104
Estatutos            : 81
ExpF                 : 37 38
ExpI                 : 17 18 43 60 62 67 90 96 98 105 108 110 110 133 135 137 139 141 143 143 145 151 153 155 155
ExpK                 : 23 24 24 33
ExpT                 : 32 33 38
Exp_ciclo            : 110
For                  : 102
Forward              : 119
IniciaTurtle         : 124
Left                 : 121
Llamada_Func         : 88
Main                 : 1
Operandos            : 24
Position             : 123
Print                : 87
Rectangle            : 128
Return               : 85
Right                : 120
Square               : 127
TerminaTurtle        : 125
Tipo                 : 4 5 74 75 77
Triangle             : 129
Turtle               : 89
VAR_BOOL             : 49
VAR_CTE              : 42
Vars                 : 1 4 5 71 117
While                : 103
agrega_arr_funcion   : 5
agrega_falso         : 43 58 67 100
agrega_funcion       : 71
agrega_limites_arreglo : 5
agrega_main_funcion  : 117
agrega_var_funcion   : 4
argumentos           : 58 100
checa_funcion_si_existe : 58 100
checa_var_arr        : 67
checa_void           : 100
colorFill            : 131
colorPen             : 132
crea_GOTOF           : 90 105
crea_GOTOV           : 108
crea_cuadruplo_circle : 139
crea_cuadruplo_colorFill : 151
crea_cuadruplo_colorPen : 153
crea_cuadruplo_forward : 133
crea_cuadruplo_inicia : 157
crea_cuadruplo_iniciafill : 147
crea_cuadruplo_left  : 137
crea_cuadruplo_pos   : 155
crea_cuadruplo_read  : 18
crea_cuadruplo_rectangle : 143
crea_cuadruplo_right : 135
crea_cuadruplo_square : 141
crea_cuadruplo_termina : 159
crea_cuadruplo_terminafill : 149
crea_cuadruplo_triangle : 145
crea_cuadruplo_ver   : 67
crea_else_cuadruplo  : 93
crea_funcion_global  : 1
crea_primer_cuadruplo : 1
crea_print           : 98
fin_func_cuad        : 71
funciones            : 1 71
guarda_numero_cuadruplo : 105 108
guarda_resultado_funcion : 58
iniciaFill           : 126
llama_funcion        : 45
llena_cuadruplo_if   : 90
mas_argumentos       : 60 62
mas_vars             : 4 14
param                : 71
pos_MULTDIV          : 38
pos_SUMRES           : 33
pos_arreglo          : 17 18 44
pos_commaf           : 75 77
pos_else             : 90
program              : 0
push_bool_PilaOperandos : 49
push_decimal_PilaOperandos : 47
push_int_PilaOperandos : 5 46
push_operador_PilaOperadores : 17 18 24 33 38
push_string_PilaOperandos : 48
push_var_PilaOperandos : 17 18 44
quita_falso          : 43 58 67 100
reg_brack            : 71 81 90 93 105 108 110 117
regresa_inicio_while : 105
resuelve_argumentos  : 60 62
resuelve_asignacion  : 17 18
resuelve_factor      : 37 38
resuelve_llamada_funcion : 58 100
resuelve_operadores_relacionales : 23 24
resuelve_return      : 96
resuelve_termino     : 32 33
terminaFill          : 130
tipo_funcion         : 71

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . START EDJO VAR_ID crea_primer_cuadruplo crea_funcion_global SEMICOLON Vars funciones Main

    START           shift and go to state 2

    program                        shift and go to state 1

state 1

    (0) S' -> program .



state 2

    (1) program -> START . EDJO VAR_ID crea_primer_cuadruplo crea_funcion_global SEMICOLON Vars funciones Main

    EDJO            shift and go to state 3


state 3

    (1) program -> START EDJO . VAR_ID crea_primer_cuadruplo crea_funcion_global SEMICOLON Vars funciones Main

    VAR_ID          shift and go to state 4


state 4

    (1) program -> START EDJO VAR_ID . crea_primer_cuadruplo crea_funcion_global SEMICOLON Vars funciones Main
    (2) crea_primer_cuadruplo -> .

    SEMICOLON       reduce using rule 2 (crea_primer_cuadruplo -> .)

    crea_primer_cuadruplo          shift and go to state 5

state 5

    (1) program -> START EDJO VAR_ID crea_primer_cuadruplo . crea_funcion_global SEMICOLON Vars funciones Main
    (3) crea_funcion_global -> .

    SEMICOLON       reduce using rule 3 (crea_funcion_global -> .)

    crea_funcion_global            shift and go to state 6

state 6

    (1) program -> START EDJO VAR_ID crea_primer_cuadruplo crea_funcion_global . SEMICOLON Vars funciones Main

    SEMICOLON       shift and go to state 7


state 7

    (1) program -> START EDJO VAR_ID crea_primer_cuadruplo crea_funcion_global SEMICOLON . Vars funciones Main
    (4) Vars -> . Tipo VAR_ID mas_vars agrega_var_funcion SEMICOLON Vars
    (5) Vars -> . Tipo VAR_ID SLBRACKET VAR_INT push_int_PilaOperandos SRBRACKET agrega_limites_arreglo agrega_arr_funcion SEMICOLON Vars
    (6) Vars -> .
    (9) Tipo -> . INT
    (10) Tipo -> . DECIMAL
    (11) Tipo -> . STRING
    (12) Tipo -> . CHAR
    (13) Tipo -> . BOOL

    FUNC            reduce using rule 6 (Vars -> .)
    MAIN            reduce using rule 6 (Vars -> .)
    INT             shift and go to state 10
    DECIMAL         shift and go to state 11
    STRING          shift and go to state 12
    CHAR            shift and go to state 13
    BOOL            shift and go to state 14

    Vars                           shift and go to state 8
    Tipo                           shift and go to state 9

state 8

    (1) program -> START EDJO VAR_ID crea_primer_cuadruplo crea_funcion_global SEMICOLON Vars . funciones Main
    (71) funciones -> . FUNC tipo_funcion VAR_ID LPAREN param RPAREN agrega_funcion LBRACKET Vars reg_brack RBRACKET fin_func_cuad funciones
    (72) funciones -> .

    FUNC            shift and go to state 16
    MAIN            reduce using rule 72 (funciones -> .)

    funciones                      shift and go to state 15

state 9

    (4) Vars -> Tipo . VAR_ID mas_vars agrega_var_funcion SEMICOLON Vars
    (5) Vars -> Tipo . VAR_ID SLBRACKET VAR_INT push_int_PilaOperandos SRBRACKET agrega_limites_arreglo agrega_arr_funcion SEMICOLON Vars

    VAR_ID          shift and go to state 17


state 10

    (9) Tipo -> INT .

    VAR_ID          reduce using rule 9 (Tipo -> INT .)


state 11

    (10) Tipo -> DECIMAL .

    VAR_ID          reduce using rule 10 (Tipo -> DECIMAL .)


state 12

    (11) Tipo -> STRING .

    VAR_ID          reduce using rule 11 (Tipo -> STRING .)


state 13

    (12) Tipo -> CHAR .

    VAR_ID          reduce using rule 12 (Tipo -> CHAR .)


state 14

    (13) Tipo -> BOOL .

    VAR_ID          reduce using rule 13 (Tipo -> BOOL .)


state 15

    (1) program -> START EDJO VAR_ID crea_primer_cuadruplo crea_funcion_global SEMICOLON Vars funciones . Main
    (117) Main -> . MAIN agrega_main_funcion LPAREN RPAREN LBRACKET Vars reg_brack RET ZERO SEMICOLON RBRACKET

    MAIN            shift and go to state 19

    Main                           shift and go to state 18

state 16

    (71) funciones -> FUNC . tipo_funcion VAR_ID LPAREN param RPAREN agrega_funcion LBRACKET Vars reg_brack RBRACKET fin_func_cuad funciones
    (73) tipo_funcion -> . VOID
    (74) tipo_funcion -> . Tipo
    (9) Tipo -> . INT
    (10) Tipo -> . DECIMAL
    (11) Tipo -> . STRING
    (12) Tipo -> . CHAR
    (13) Tipo -> . BOOL

    VOID            shift and go to state 21
    INT             shift and go to state 10
    DECIMAL         shift and go to state 11
    STRING          shift and go to state 12
    CHAR            shift and go to state 13
    BOOL            shift and go to state 14

    tipo_funcion                   shift and go to state 20
    Tipo                           shift and go to state 22

state 17

    (4) Vars -> Tipo VAR_ID . mas_vars agrega_var_funcion SEMICOLON Vars
    (5) Vars -> Tipo VAR_ID . SLBRACKET VAR_INT push_int_PilaOperandos SRBRACKET agrega_limites_arreglo agrega_arr_funcion SEMICOLON Vars
    (14) mas_vars -> . COMMA VAR_ID mas_vars
    (15) mas_vars -> .

    SLBRACKET       shift and go to state 24
    COMMA           shift and go to state 25
    SEMICOLON       reduce using rule 15 (mas_vars -> .)

    mas_vars                       shift and go to state 23

state 18

    (1) program -> START EDJO VAR_ID crea_primer_cuadruplo crea_funcion_global SEMICOLON Vars funciones Main .

    $end            reduce using rule 1 (program -> START EDJO VAR_ID crea_primer_cuadruplo crea_funcion_global SEMICOLON Vars funciones Main .)


state 19

    (117) Main -> MAIN . agrega_main_funcion LPAREN RPAREN LBRACKET Vars reg_brack RET ZERO SEMICOLON RBRACKET
    (118) agrega_main_funcion -> .

    LPAREN          reduce using rule 118 (agrega_main_funcion -> .)

    agrega_main_funcion            shift and go to state 26

state 20

    (71) funciones -> FUNC tipo_funcion . VAR_ID LPAREN param RPAREN agrega_funcion LBRACKET Vars reg_brack RBRACKET fin_func_cuad funciones

    VAR_ID          shift and go to state 27


state 21

    (73) tipo_funcion -> VOID .

    VAR_ID          reduce using rule 73 (tipo_funcion -> VOID .)


state 22

    (74) tipo_funcion -> Tipo .

    VAR_ID          reduce using rule 74 (tipo_funcion -> Tipo .)


state 23

    (4) Vars -> Tipo VAR_ID mas_vars . agrega_var_funcion SEMICOLON Vars
    (16) agrega_var_funcion -> .

    SEMICOLON       reduce using rule 16 (agrega_var_funcion -> .)

    agrega_var_funcion             shift and go to state 28

state 24

    (5) Vars -> Tipo VAR_ID SLBRACKET . VAR_INT push_int_PilaOperandos SRBRACKET agrega_limites_arreglo agrega_arr_funcion SEMICOLON Vars

    VAR_INT         shift and go to state 29


state 25

    (14) mas_vars -> COMMA . VAR_ID mas_vars

    VAR_ID          shift and go to state 30


state 26

    (117) Main -> MAIN agrega_main_funcion . LPAREN RPAREN LBRACKET Vars reg_brack RET ZERO SEMICOLON RBRACKET

    LPAREN          shift and go to state 31


state 27

    (71) funciones -> FUNC tipo_funcion VAR_ID . LPAREN param RPAREN agrega_funcion LBRACKET Vars reg_brack RBRACKET fin_func_cuad funciones

    LPAREN          shift and go to state 32


state 28

    (4) Vars -> Tipo VAR_ID mas_vars agrega_var_funcion . SEMICOLON Vars

    SEMICOLON       shift and go to state 33


state 29

    (5) Vars -> Tipo VAR_ID SLBRACKET VAR_INT . push_int_PilaOperandos SRBRACKET agrega_limites_arreglo agrega_arr_funcion SEMICOLON Vars
    (52) push_int_PilaOperandos -> .

    SRBRACKET       reduce using rule 52 (push_int_PilaOperandos -> .)

    push_int_PilaOperandos         shift and go to state 34

state 30

    (14) mas_vars -> COMMA VAR_ID . mas_vars
    (14) mas_vars -> . COMMA VAR_ID mas_vars
    (15) mas_vars -> .

    COMMA           shift and go to state 25
    SEMICOLON       reduce using rule 15 (mas_vars -> .)

    mas_vars                       shift and go to state 35

state 31

    (117) Main -> MAIN agrega_main_funcion LPAREN . RPAREN LBRACKET Vars reg_brack RET ZERO SEMICOLON RBRACKET

    RPAREN          shift and go to state 36


state 32

    (71) funciones -> FUNC tipo_funcion VAR_ID LPAREN . param RPAREN agrega_funcion LBRACKET Vars reg_brack RBRACKET fin_func_cuad funciones
    (75) param -> . Tipo VAR_ID pos_commaf
    (76) param -> .
    (9) Tipo -> . INT
    (10) Tipo -> . DECIMAL
    (11) Tipo -> . STRING
    (12) Tipo -> . CHAR
    (13) Tipo -> . BOOL

    RPAREN          reduce using rule 76 (param -> .)
    INT             shift and go to state 10
    DECIMAL         shift and go to state 11
    STRING          shift and go to state 12
    CHAR            shift and go to state 13
    BOOL            shift and go to state 14

    param                          shift and go to state 37
    Tipo                           shift and go to state 38

state 33

    (4) Vars -> Tipo VAR_ID mas_vars agrega_var_funcion SEMICOLON . Vars
    (4) Vars -> . Tipo VAR_ID mas_vars agrega_var_funcion SEMICOLON Vars
    (5) Vars -> . Tipo VAR_ID SLBRACKET VAR_INT push_int_PilaOperandos SRBRACKET agrega_limites_arreglo agrega_arr_funcion SEMICOLON Vars
    (6) Vars -> .
    (9) Tipo -> . INT
    (10) Tipo -> . DECIMAL
    (11) Tipo -> . STRING
    (12) Tipo -> . CHAR
    (13) Tipo -> . BOOL

    FUNC            reduce using rule 6 (Vars -> .)
    MAIN            reduce using rule 6 (Vars -> .)
    IF              reduce using rule 6 (Vars -> .)
    RETURN          reduce using rule 6 (Vars -> .)
    VAR_ID          reduce using rule 6 (Vars -> .)
    PRINT           reduce using rule 6 (Vars -> .)
    FOR             reduce using rule 6 (Vars -> .)
    WHILE           reduce using rule 6 (Vars -> .)
    DO              reduce using rule 6 (Vars -> .)
    TUR             reduce using rule 6 (Vars -> .)
    RET             reduce using rule 6 (Vars -> .)
    RBRACKET        reduce using rule 6 (Vars -> .)
    INT             shift and go to state 10
    DECIMAL         shift and go to state 11
    STRING          shift and go to state 12
    CHAR            shift and go to state 13
    BOOL            shift and go to state 14

    Tipo                           shift and go to state 9
    Vars                           shift and go to state 39

state 34

    (5) Vars -> Tipo VAR_ID SLBRACKET VAR_INT push_int_PilaOperandos . SRBRACKET agrega_limites_arreglo agrega_arr_funcion SEMICOLON Vars

    SRBRACKET       shift and go to state 40


state 35

    (14) mas_vars -> COMMA VAR_ID mas_vars .

    SEMICOLON       reduce using rule 14 (mas_vars -> COMMA VAR_ID mas_vars .)


state 36

    (117) Main -> MAIN agrega_main_funcion LPAREN RPAREN . LBRACKET Vars reg_brack RET ZERO SEMICOLON RBRACKET

    LBRACKET        shift and go to state 41


state 37

    (71) funciones -> FUNC tipo_funcion VAR_ID LPAREN param . RPAREN agrega_funcion LBRACKET Vars reg_brack RBRACKET fin_func_cuad funciones

    RPAREN          shift and go to state 42


state 38

    (75) param -> Tipo . VAR_ID pos_commaf

    VAR_ID          shift and go to state 43


state 39

    (4) Vars -> Tipo VAR_ID mas_vars agrega_var_funcion SEMICOLON Vars .

    FUNC            reduce using rule 4 (Vars -> Tipo VAR_ID mas_vars agrega_var_funcion SEMICOLON Vars .)
    MAIN            reduce using rule 4 (Vars -> Tipo VAR_ID mas_vars agrega_var_funcion SEMICOLON Vars .)
    IF              reduce using rule 4 (Vars -> Tipo VAR_ID mas_vars agrega_var_funcion SEMICOLON Vars .)
    RETURN          reduce using rule 4 (Vars -> Tipo VAR_ID mas_vars agrega_var_funcion SEMICOLON Vars .)
    VAR_ID          reduce using rule 4 (Vars -> Tipo VAR_ID mas_vars agrega_var_funcion SEMICOLON Vars .)
    PRINT           reduce using rule 4 (Vars -> Tipo VAR_ID mas_vars agrega_var_funcion SEMICOLON Vars .)
    FOR             reduce using rule 4 (Vars -> Tipo VAR_ID mas_vars agrega_var_funcion SEMICOLON Vars .)
    WHILE           reduce using rule 4 (Vars -> Tipo VAR_ID mas_vars agrega_var_funcion SEMICOLON Vars .)
    DO              reduce using rule 4 (Vars -> Tipo VAR_ID mas_vars agrega_var_funcion SEMICOLON Vars .)
    TUR             reduce using rule 4 (Vars -> Tipo VAR_ID mas_vars agrega_var_funcion SEMICOLON Vars .)
    RET             reduce using rule 4 (Vars -> Tipo VAR_ID mas_vars agrega_var_funcion SEMICOLON Vars .)
    RBRACKET        reduce using rule 4 (Vars -> Tipo VAR_ID mas_vars agrega_var_funcion SEMICOLON Vars .)


state 40

    (5) Vars -> Tipo VAR_ID SLBRACKET VAR_INT push_int_PilaOperandos SRBRACKET . agrega_limites_arreglo agrega_arr_funcion SEMICOLON Vars
    (7) agrega_limites_arreglo -> .

    SEMICOLON       reduce using rule 7 (agrega_limites_arreglo -> .)

    agrega_limites_arreglo         shift and go to state 44

state 41

    (117) Main -> MAIN agrega_main_funcion LPAREN RPAREN LBRACKET . Vars reg_brack RET ZERO SEMICOLON RBRACKET
    (4) Vars -> . Tipo VAR_ID mas_vars agrega_var_funcion SEMICOLON Vars
    (5) Vars -> . Tipo VAR_ID SLBRACKET VAR_INT push_int_PilaOperandos SRBRACKET agrega_limites_arreglo agrega_arr_funcion SEMICOLON Vars
    (6) Vars -> .
    (9) Tipo -> . INT
    (10) Tipo -> . DECIMAL
    (11) Tipo -> . STRING
    (12) Tipo -> . CHAR
    (13) Tipo -> . BOOL

    IF              reduce using rule 6 (Vars -> .)
    RETURN          reduce using rule 6 (Vars -> .)
    VAR_ID          reduce using rule 6 (Vars -> .)
    PRINT           reduce using rule 6 (Vars -> .)
    FOR             reduce using rule 6 (Vars -> .)
    WHILE           reduce using rule 6 (Vars -> .)
    DO              reduce using rule 6 (Vars -> .)
    TUR             reduce using rule 6 (Vars -> .)
    RET             reduce using rule 6 (Vars -> .)
    INT             shift and go to state 10
    DECIMAL         shift and go to state 11
    STRING          shift and go to state 12
    CHAR            shift and go to state 13
    BOOL            shift and go to state 14

    Vars                           shift and go to state 45
    Tipo                           shift and go to state 9

state 42

    (71) funciones -> FUNC tipo_funcion VAR_ID LPAREN param RPAREN . agrega_funcion LBRACKET Vars reg_brack RBRACKET fin_func_cuad funciones
    (79) agrega_funcion -> .

    LBRACKET        reduce using rule 79 (agrega_funcion -> .)

    agrega_funcion                 shift and go to state 46

state 43

    (75) param -> Tipo VAR_ID . pos_commaf
    (77) pos_commaf -> . COMMA Tipo VAR_ID pos_commaf
    (78) pos_commaf -> .

    COMMA           shift and go to state 48
    RPAREN          reduce using rule 78 (pos_commaf -> .)

    pos_commaf                     shift and go to state 47

state 44

    (5) Vars -> Tipo VAR_ID SLBRACKET VAR_INT push_int_PilaOperandos SRBRACKET agrega_limites_arreglo . agrega_arr_funcion SEMICOLON Vars
    (8) agrega_arr_funcion -> .

    SEMICOLON       reduce using rule 8 (agrega_arr_funcion -> .)

    agrega_arr_funcion             shift and go to state 49

state 45

    (117) Main -> MAIN agrega_main_funcion LPAREN RPAREN LBRACKET Vars . reg_brack RET ZERO SEMICOLON RBRACKET
    (81) reg_brack -> . Estatutos reg_brack
    (82) reg_brack -> .
    (83) Estatutos -> . Condicion
    (84) Estatutos -> . Ciclo
    (85) Estatutos -> . Return
    (86) Estatutos -> . Asignacion
    (87) Estatutos -> . Print
    (88) Estatutos -> . Llamada_Func
    (89) Estatutos -> . Turtle
    (90) Condicion -> . IF LPAREN ExpI RPAREN crea_GOTOF LBRACKET reg_brack RBRACKET pos_else llena_cuadruplo_if
    (102) Ciclo -> . For
    (103) Ciclo -> . While
    (104) Ciclo -> . DoWhile
    (96) Return -> . RETURN ExpI SEMICOLON resuelve_return
    (17) Asignacion -> . VAR_ID push_var_PilaOperandos pos_arreglo ASSIGN push_operador_PilaOperadores ExpI SEMICOLON resuelve_asignacion
    (18) Asignacion -> . VAR_ID push_var_PilaOperandos pos_arreglo ASSIGN push_operador_PilaOperadores READ LPAREN ExpI RPAREN crea_cuadruplo_read SEMICOLON resuelve_asignacion
    (98) Print -> . PRINT LPAREN ExpI RPAREN SEMICOLON crea_print
    (100) Llamada_Func -> . VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion SEMICOLON checa_void
    (119) Turtle -> . Forward
    (120) Turtle -> . Right
    (121) Turtle -> . Left
    (122) Turtle -> . Circle
    (123) Turtle -> . Position
    (124) Turtle -> . IniciaTurtle
    (125) Turtle -> . TerminaTurtle
    (126) Turtle -> . iniciaFill
    (127) Turtle -> . Square
    (128) Turtle -> . Rectangle
    (129) Turtle -> . Triangle
    (130) Turtle -> . terminaFill
    (131) Turtle -> . colorFill
    (132) Turtle -> . colorPen
    (110) For -> . FOR LPAREN VAR_ID ASSIGN ExpI SEMICOLON ExpI SEMICOLON VAR_ID Exp_ciclo RPAREN LBRACKET reg_brack RBRACKET
    (105) While -> . WHILE guarda_numero_cuadruplo LPAREN ExpI RPAREN crea_GOTOF LBRACKET reg_brack RBRACKET regresa_inicio_while
    (108) DoWhile -> . DO guarda_numero_cuadruplo LBRACKET reg_brack RBRACKET WHILE LPAREN ExpI RPAREN SEMICOLON crea_GOTOV
    (133) Forward -> . TUR POINT FORWARD LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_forward
    (135) Right -> . TUR POINT RIGHT LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_right
    (137) Left -> . TUR POINT LEFT LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_left
    (139) Circle -> . TUR POINT CIRCLE LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_circle
    (155) Position -> . TUR POINT POS LPAREN ExpI COMMA ExpI RPAREN SEMICOLON crea_cuadruplo_pos
    (157) IniciaTurtle -> . TUR POINT TURTLE LPAREN RPAREN SEMICOLON crea_cuadruplo_inicia
    (159) TerminaTurtle -> . TUR POINT FINISH LPAREN RPAREN SEMICOLON crea_cuadruplo_termina
    (147) iniciaFill -> . TUR POINT BEGIN_FILL LPAREN RPAREN SEMICOLON crea_cuadruplo_iniciafill
    (141) Square -> . TUR POINT SQUARE LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_square
    (143) Rectangle -> . TUR POINT RECTANGLE LPAREN ExpI COMMA ExpI RPAREN SEMICOLON crea_cuadruplo_rectangle
    (145) Triangle -> . TUR POINT TRIANGLE LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_triangle
    (149) terminaFill -> . TUR POINT END_FILL LPAREN RPAREN SEMICOLON crea_cuadruplo_terminafill
    (151) colorFill -> . TUR POINT COLOR LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_colorFill
    (153) colorPen -> . TUR POINT PENCOLOR LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_colorPen

    RET             reduce using rule 82 (reg_brack -> .)
    IF              shift and go to state 59
    RETURN          shift and go to state 63
    VAR_ID          shift and go to state 64
    PRINT           shift and go to state 65
    FOR             shift and go to state 80
    WHILE           shift and go to state 81
    DO              shift and go to state 82
    TUR             shift and go to state 83

    reg_brack                      shift and go to state 50
    Estatutos                      shift and go to state 51
    Condicion                      shift and go to state 52
    Ciclo                          shift and go to state 53
    Return                         shift and go to state 54
    Asignacion                     shift and go to state 55
    Print                          shift and go to state 56
    Llamada_Func                   shift and go to state 57
    Turtle                         shift and go to state 58
    For                            shift and go to state 60
    While                          shift and go to state 61
    DoWhile                        shift and go to state 62
    Forward                        shift and go to state 66
    Right                          shift and go to state 67
    Left                           shift and go to state 68
    Circle                         shift and go to state 69
    Position                       shift and go to state 70
    IniciaTurtle                   shift and go to state 71
    TerminaTurtle                  shift and go to state 72
    iniciaFill                     shift and go to state 73
    Square                         shift and go to state 74
    Rectangle                      shift and go to state 75
    Triangle                       shift and go to state 76
    terminaFill                    shift and go to state 77
    colorFill                      shift and go to state 78
    colorPen                       shift and go to state 79

state 46

    (71) funciones -> FUNC tipo_funcion VAR_ID LPAREN param RPAREN agrega_funcion . LBRACKET Vars reg_brack RBRACKET fin_func_cuad funciones

    LBRACKET        shift and go to state 84


state 47

    (75) param -> Tipo VAR_ID pos_commaf .

    RPAREN          reduce using rule 75 (param -> Tipo VAR_ID pos_commaf .)


state 48

    (77) pos_commaf -> COMMA . Tipo VAR_ID pos_commaf
    (9) Tipo -> . INT
    (10) Tipo -> . DECIMAL
    (11) Tipo -> . STRING
    (12) Tipo -> . CHAR
    (13) Tipo -> . BOOL

    INT             shift and go to state 10
    DECIMAL         shift and go to state 11
    STRING          shift and go to state 12
    CHAR            shift and go to state 13
    BOOL            shift and go to state 14

    Tipo                           shift and go to state 85

state 49

    (5) Vars -> Tipo VAR_ID SLBRACKET VAR_INT push_int_PilaOperandos SRBRACKET agrega_limites_arreglo agrega_arr_funcion . SEMICOLON Vars

    SEMICOLON       shift and go to state 86


state 50

    (117) Main -> MAIN agrega_main_funcion LPAREN RPAREN LBRACKET Vars reg_brack . RET ZERO SEMICOLON RBRACKET

    RET             shift and go to state 87


state 51

    (81) reg_brack -> Estatutos . reg_brack
    (81) reg_brack -> . Estatutos reg_brack
    (82) reg_brack -> .
    (83) Estatutos -> . Condicion
    (84) Estatutos -> . Ciclo
    (85) Estatutos -> . Return
    (86) Estatutos -> . Asignacion
    (87) Estatutos -> . Print
    (88) Estatutos -> . Llamada_Func
    (89) Estatutos -> . Turtle
    (90) Condicion -> . IF LPAREN ExpI RPAREN crea_GOTOF LBRACKET reg_brack RBRACKET pos_else llena_cuadruplo_if
    (102) Ciclo -> . For
    (103) Ciclo -> . While
    (104) Ciclo -> . DoWhile
    (96) Return -> . RETURN ExpI SEMICOLON resuelve_return
    (17) Asignacion -> . VAR_ID push_var_PilaOperandos pos_arreglo ASSIGN push_operador_PilaOperadores ExpI SEMICOLON resuelve_asignacion
    (18) Asignacion -> . VAR_ID push_var_PilaOperandos pos_arreglo ASSIGN push_operador_PilaOperadores READ LPAREN ExpI RPAREN crea_cuadruplo_read SEMICOLON resuelve_asignacion
    (98) Print -> . PRINT LPAREN ExpI RPAREN SEMICOLON crea_print
    (100) Llamada_Func -> . VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion SEMICOLON checa_void
    (119) Turtle -> . Forward
    (120) Turtle -> . Right
    (121) Turtle -> . Left
    (122) Turtle -> . Circle
    (123) Turtle -> . Position
    (124) Turtle -> . IniciaTurtle
    (125) Turtle -> . TerminaTurtle
    (126) Turtle -> . iniciaFill
    (127) Turtle -> . Square
    (128) Turtle -> . Rectangle
    (129) Turtle -> . Triangle
    (130) Turtle -> . terminaFill
    (131) Turtle -> . colorFill
    (132) Turtle -> . colorPen
    (110) For -> . FOR LPAREN VAR_ID ASSIGN ExpI SEMICOLON ExpI SEMICOLON VAR_ID Exp_ciclo RPAREN LBRACKET reg_brack RBRACKET
    (105) While -> . WHILE guarda_numero_cuadruplo LPAREN ExpI RPAREN crea_GOTOF LBRACKET reg_brack RBRACKET regresa_inicio_while
    (108) DoWhile -> . DO guarda_numero_cuadruplo LBRACKET reg_brack RBRACKET WHILE LPAREN ExpI RPAREN SEMICOLON crea_GOTOV
    (133) Forward -> . TUR POINT FORWARD LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_forward
    (135) Right -> . TUR POINT RIGHT LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_right
    (137) Left -> . TUR POINT LEFT LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_left
    (139) Circle -> . TUR POINT CIRCLE LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_circle
    (155) Position -> . TUR POINT POS LPAREN ExpI COMMA ExpI RPAREN SEMICOLON crea_cuadruplo_pos
    (157) IniciaTurtle -> . TUR POINT TURTLE LPAREN RPAREN SEMICOLON crea_cuadruplo_inicia
    (159) TerminaTurtle -> . TUR POINT FINISH LPAREN RPAREN SEMICOLON crea_cuadruplo_termina
    (147) iniciaFill -> . TUR POINT BEGIN_FILL LPAREN RPAREN SEMICOLON crea_cuadruplo_iniciafill
    (141) Square -> . TUR POINT SQUARE LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_square
    (143) Rectangle -> . TUR POINT RECTANGLE LPAREN ExpI COMMA ExpI RPAREN SEMICOLON crea_cuadruplo_rectangle
    (145) Triangle -> . TUR POINT TRIANGLE LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_triangle
    (149) terminaFill -> . TUR POINT END_FILL LPAREN RPAREN SEMICOLON crea_cuadruplo_terminafill
    (151) colorFill -> . TUR POINT COLOR LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_colorFill
    (153) colorPen -> . TUR POINT PENCOLOR LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_colorPen

    RET             reduce using rule 82 (reg_brack -> .)
    RBRACKET        reduce using rule 82 (reg_brack -> .)
    IF              shift and go to state 59
    RETURN          shift and go to state 63
    VAR_ID          shift and go to state 64
    PRINT           shift and go to state 65
    FOR             shift and go to state 80
    WHILE           shift and go to state 81
    DO              shift and go to state 82
    TUR             shift and go to state 83

    Estatutos                      shift and go to state 51
    reg_brack                      shift and go to state 88
    Condicion                      shift and go to state 52
    Ciclo                          shift and go to state 53
    Return                         shift and go to state 54
    Asignacion                     shift and go to state 55
    Print                          shift and go to state 56
    Llamada_Func                   shift and go to state 57
    Turtle                         shift and go to state 58
    For                            shift and go to state 60
    While                          shift and go to state 61
    DoWhile                        shift and go to state 62
    Forward                        shift and go to state 66
    Right                          shift and go to state 67
    Left                           shift and go to state 68
    Circle                         shift and go to state 69
    Position                       shift and go to state 70
    IniciaTurtle                   shift and go to state 71
    TerminaTurtle                  shift and go to state 72
    iniciaFill                     shift and go to state 73
    Square                         shift and go to state 74
    Rectangle                      shift and go to state 75
    Triangle                       shift and go to state 76
    terminaFill                    shift and go to state 77
    colorFill                      shift and go to state 78
    colorPen                       shift and go to state 79

state 52

    (83) Estatutos -> Condicion .

    IF              reduce using rule 83 (Estatutos -> Condicion .)
    RETURN          reduce using rule 83 (Estatutos -> Condicion .)
    VAR_ID          reduce using rule 83 (Estatutos -> Condicion .)
    PRINT           reduce using rule 83 (Estatutos -> Condicion .)
    FOR             reduce using rule 83 (Estatutos -> Condicion .)
    WHILE           reduce using rule 83 (Estatutos -> Condicion .)
    DO              reduce using rule 83 (Estatutos -> Condicion .)
    TUR             reduce using rule 83 (Estatutos -> Condicion .)
    RET             reduce using rule 83 (Estatutos -> Condicion .)
    RBRACKET        reduce using rule 83 (Estatutos -> Condicion .)


state 53

    (84) Estatutos -> Ciclo .

    IF              reduce using rule 84 (Estatutos -> Ciclo .)
    RETURN          reduce using rule 84 (Estatutos -> Ciclo .)
    VAR_ID          reduce using rule 84 (Estatutos -> Ciclo .)
    PRINT           reduce using rule 84 (Estatutos -> Ciclo .)
    FOR             reduce using rule 84 (Estatutos -> Ciclo .)
    WHILE           reduce using rule 84 (Estatutos -> Ciclo .)
    DO              reduce using rule 84 (Estatutos -> Ciclo .)
    TUR             reduce using rule 84 (Estatutos -> Ciclo .)
    RET             reduce using rule 84 (Estatutos -> Ciclo .)
    RBRACKET        reduce using rule 84 (Estatutos -> Ciclo .)


state 54

    (85) Estatutos -> Return .

    IF              reduce using rule 85 (Estatutos -> Return .)
    RETURN          reduce using rule 85 (Estatutos -> Return .)
    VAR_ID          reduce using rule 85 (Estatutos -> Return .)
    PRINT           reduce using rule 85 (Estatutos -> Return .)
    FOR             reduce using rule 85 (Estatutos -> Return .)
    WHILE           reduce using rule 85 (Estatutos -> Return .)
    DO              reduce using rule 85 (Estatutos -> Return .)
    TUR             reduce using rule 85 (Estatutos -> Return .)
    RET             reduce using rule 85 (Estatutos -> Return .)
    RBRACKET        reduce using rule 85 (Estatutos -> Return .)


state 55

    (86) Estatutos -> Asignacion .

    IF              reduce using rule 86 (Estatutos -> Asignacion .)
    RETURN          reduce using rule 86 (Estatutos -> Asignacion .)
    VAR_ID          reduce using rule 86 (Estatutos -> Asignacion .)
    PRINT           reduce using rule 86 (Estatutos -> Asignacion .)
    FOR             reduce using rule 86 (Estatutos -> Asignacion .)
    WHILE           reduce using rule 86 (Estatutos -> Asignacion .)
    DO              reduce using rule 86 (Estatutos -> Asignacion .)
    TUR             reduce using rule 86 (Estatutos -> Asignacion .)
    RET             reduce using rule 86 (Estatutos -> Asignacion .)
    RBRACKET        reduce using rule 86 (Estatutos -> Asignacion .)


state 56

    (87) Estatutos -> Print .

    IF              reduce using rule 87 (Estatutos -> Print .)
    RETURN          reduce using rule 87 (Estatutos -> Print .)
    VAR_ID          reduce using rule 87 (Estatutos -> Print .)
    PRINT           reduce using rule 87 (Estatutos -> Print .)
    FOR             reduce using rule 87 (Estatutos -> Print .)
    WHILE           reduce using rule 87 (Estatutos -> Print .)
    DO              reduce using rule 87 (Estatutos -> Print .)
    TUR             reduce using rule 87 (Estatutos -> Print .)
    RET             reduce using rule 87 (Estatutos -> Print .)
    RBRACKET        reduce using rule 87 (Estatutos -> Print .)


state 57

    (88) Estatutos -> Llamada_Func .

    IF              reduce using rule 88 (Estatutos -> Llamada_Func .)
    RETURN          reduce using rule 88 (Estatutos -> Llamada_Func .)
    VAR_ID          reduce using rule 88 (Estatutos -> Llamada_Func .)
    PRINT           reduce using rule 88 (Estatutos -> Llamada_Func .)
    FOR             reduce using rule 88 (Estatutos -> Llamada_Func .)
    WHILE           reduce using rule 88 (Estatutos -> Llamada_Func .)
    DO              reduce using rule 88 (Estatutos -> Llamada_Func .)
    TUR             reduce using rule 88 (Estatutos -> Llamada_Func .)
    RET             reduce using rule 88 (Estatutos -> Llamada_Func .)
    RBRACKET        reduce using rule 88 (Estatutos -> Llamada_Func .)


state 58

    (89) Estatutos -> Turtle .

    IF              reduce using rule 89 (Estatutos -> Turtle .)
    RETURN          reduce using rule 89 (Estatutos -> Turtle .)
    VAR_ID          reduce using rule 89 (Estatutos -> Turtle .)
    PRINT           reduce using rule 89 (Estatutos -> Turtle .)
    FOR             reduce using rule 89 (Estatutos -> Turtle .)
    WHILE           reduce using rule 89 (Estatutos -> Turtle .)
    DO              reduce using rule 89 (Estatutos -> Turtle .)
    TUR             reduce using rule 89 (Estatutos -> Turtle .)
    RET             reduce using rule 89 (Estatutos -> Turtle .)
    RBRACKET        reduce using rule 89 (Estatutos -> Turtle .)


state 59

    (90) Condicion -> IF . LPAREN ExpI RPAREN crea_GOTOF LBRACKET reg_brack RBRACKET pos_else llena_cuadruplo_if

    LPAREN          shift and go to state 89


state 60

    (102) Ciclo -> For .

    IF              reduce using rule 102 (Ciclo -> For .)
    RETURN          reduce using rule 102 (Ciclo -> For .)
    VAR_ID          reduce using rule 102 (Ciclo -> For .)
    PRINT           reduce using rule 102 (Ciclo -> For .)
    FOR             reduce using rule 102 (Ciclo -> For .)
    WHILE           reduce using rule 102 (Ciclo -> For .)
    DO              reduce using rule 102 (Ciclo -> For .)
    TUR             reduce using rule 102 (Ciclo -> For .)
    RET             reduce using rule 102 (Ciclo -> For .)
    RBRACKET        reduce using rule 102 (Ciclo -> For .)


state 61

    (103) Ciclo -> While .

    IF              reduce using rule 103 (Ciclo -> While .)
    RETURN          reduce using rule 103 (Ciclo -> While .)
    VAR_ID          reduce using rule 103 (Ciclo -> While .)
    PRINT           reduce using rule 103 (Ciclo -> While .)
    FOR             reduce using rule 103 (Ciclo -> While .)
    WHILE           reduce using rule 103 (Ciclo -> While .)
    DO              reduce using rule 103 (Ciclo -> While .)
    TUR             reduce using rule 103 (Ciclo -> While .)
    RET             reduce using rule 103 (Ciclo -> While .)
    RBRACKET        reduce using rule 103 (Ciclo -> While .)


state 62

    (104) Ciclo -> DoWhile .

    IF              reduce using rule 104 (Ciclo -> DoWhile .)
    RETURN          reduce using rule 104 (Ciclo -> DoWhile .)
    VAR_ID          reduce using rule 104 (Ciclo -> DoWhile .)
    PRINT           reduce using rule 104 (Ciclo -> DoWhile .)
    FOR             reduce using rule 104 (Ciclo -> DoWhile .)
    WHILE           reduce using rule 104 (Ciclo -> DoWhile .)
    DO              reduce using rule 104 (Ciclo -> DoWhile .)
    TUR             reduce using rule 104 (Ciclo -> DoWhile .)
    RET             reduce using rule 104 (Ciclo -> DoWhile .)
    RBRACKET        reduce using rule 104 (Ciclo -> DoWhile .)


state 63

    (96) Return -> RETURN . ExpI SEMICOLON resuelve_return
    (23) ExpI -> . ExpK resuelve_operadores_relacionales
    (24) ExpI -> . ExpK Operandos push_operador_PilaOperadores ExpK resuelve_operadores_relacionales
    (32) ExpK -> . ExpT resuelve_termino
    (33) ExpK -> . ExpT resuelve_termino pos_SUMRES push_operador_PilaOperadores ExpK
    (37) ExpT -> . ExpF resuelve_factor
    (38) ExpT -> . ExpF resuelve_factor pos_MULTDIV push_operador_PilaOperadores ExpT
    (42) ExpF -> . VAR_CTE
    (43) ExpF -> . LPAREN agrega_falso ExpI RPAREN quita_falso
    (44) ExpF -> . VAR_ID push_var_PilaOperandos pos_arreglo
    (45) ExpF -> . llama_funcion
    (46) VAR_CTE -> . VAR_INT push_int_PilaOperandos
    (47) VAR_CTE -> . VAR_DECIMAL push_decimal_PilaOperandos
    (48) VAR_CTE -> . VAR_STRING push_string_PilaOperandos
    (49) VAR_CTE -> . VAR_BOOL push_bool_PilaOperandos
    (58) llama_funcion -> . VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion guarda_resultado_funcion
    (50) VAR_BOOL -> . FALSE
    (51) VAR_BOOL -> . TRUE

    LPAREN          shift and go to state 95
    VAR_ID          shift and go to state 96
    VAR_INT         shift and go to state 98
    VAR_DECIMAL     shift and go to state 99
    VAR_STRING      shift and go to state 100
    FALSE           shift and go to state 102
    TRUE            shift and go to state 103

    ExpI                           shift and go to state 90
    ExpK                           shift and go to state 91
    ExpT                           shift and go to state 92
    ExpF                           shift and go to state 93
    VAR_CTE                        shift and go to state 94
    llama_funcion                  shift and go to state 97
    VAR_BOOL                       shift and go to state 101

state 64

    (17) Asignacion -> VAR_ID . push_var_PilaOperandos pos_arreglo ASSIGN push_operador_PilaOperadores ExpI SEMICOLON resuelve_asignacion
    (18) Asignacion -> VAR_ID . push_var_PilaOperandos pos_arreglo ASSIGN push_operador_PilaOperadores READ LPAREN ExpI RPAREN crea_cuadruplo_read SEMICOLON resuelve_asignacion
    (100) Llamada_Func -> VAR_ID . LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion SEMICOLON checa_void
    (20) push_var_PilaOperandos -> .

    LPAREN          shift and go to state 105
    SLBRACKET       reduce using rule 20 (push_var_PilaOperandos -> .)
    ASSIGN          reduce using rule 20 (push_var_PilaOperandos -> .)

    push_var_PilaOperandos         shift and go to state 104

state 65

    (98) Print -> PRINT . LPAREN ExpI RPAREN SEMICOLON crea_print

    LPAREN          shift and go to state 106


state 66

    (119) Turtle -> Forward .

    IF              reduce using rule 119 (Turtle -> Forward .)
    RETURN          reduce using rule 119 (Turtle -> Forward .)
    VAR_ID          reduce using rule 119 (Turtle -> Forward .)
    PRINT           reduce using rule 119 (Turtle -> Forward .)
    FOR             reduce using rule 119 (Turtle -> Forward .)
    WHILE           reduce using rule 119 (Turtle -> Forward .)
    DO              reduce using rule 119 (Turtle -> Forward .)
    TUR             reduce using rule 119 (Turtle -> Forward .)
    RET             reduce using rule 119 (Turtle -> Forward .)
    RBRACKET        reduce using rule 119 (Turtle -> Forward .)


state 67

    (120) Turtle -> Right .

    IF              reduce using rule 120 (Turtle -> Right .)
    RETURN          reduce using rule 120 (Turtle -> Right .)
    VAR_ID          reduce using rule 120 (Turtle -> Right .)
    PRINT           reduce using rule 120 (Turtle -> Right .)
    FOR             reduce using rule 120 (Turtle -> Right .)
    WHILE           reduce using rule 120 (Turtle -> Right .)
    DO              reduce using rule 120 (Turtle -> Right .)
    TUR             reduce using rule 120 (Turtle -> Right .)
    RET             reduce using rule 120 (Turtle -> Right .)
    RBRACKET        reduce using rule 120 (Turtle -> Right .)


state 68

    (121) Turtle -> Left .

    IF              reduce using rule 121 (Turtle -> Left .)
    RETURN          reduce using rule 121 (Turtle -> Left .)
    VAR_ID          reduce using rule 121 (Turtle -> Left .)
    PRINT           reduce using rule 121 (Turtle -> Left .)
    FOR             reduce using rule 121 (Turtle -> Left .)
    WHILE           reduce using rule 121 (Turtle -> Left .)
    DO              reduce using rule 121 (Turtle -> Left .)
    TUR             reduce using rule 121 (Turtle -> Left .)
    RET             reduce using rule 121 (Turtle -> Left .)
    RBRACKET        reduce using rule 121 (Turtle -> Left .)


state 69

    (122) Turtle -> Circle .

    IF              reduce using rule 122 (Turtle -> Circle .)
    RETURN          reduce using rule 122 (Turtle -> Circle .)
    VAR_ID          reduce using rule 122 (Turtle -> Circle .)
    PRINT           reduce using rule 122 (Turtle -> Circle .)
    FOR             reduce using rule 122 (Turtle -> Circle .)
    WHILE           reduce using rule 122 (Turtle -> Circle .)
    DO              reduce using rule 122 (Turtle -> Circle .)
    TUR             reduce using rule 122 (Turtle -> Circle .)
    RET             reduce using rule 122 (Turtle -> Circle .)
    RBRACKET        reduce using rule 122 (Turtle -> Circle .)


state 70

    (123) Turtle -> Position .

    IF              reduce using rule 123 (Turtle -> Position .)
    RETURN          reduce using rule 123 (Turtle -> Position .)
    VAR_ID          reduce using rule 123 (Turtle -> Position .)
    PRINT           reduce using rule 123 (Turtle -> Position .)
    FOR             reduce using rule 123 (Turtle -> Position .)
    WHILE           reduce using rule 123 (Turtle -> Position .)
    DO              reduce using rule 123 (Turtle -> Position .)
    TUR             reduce using rule 123 (Turtle -> Position .)
    RET             reduce using rule 123 (Turtle -> Position .)
    RBRACKET        reduce using rule 123 (Turtle -> Position .)


state 71

    (124) Turtle -> IniciaTurtle .

    IF              reduce using rule 124 (Turtle -> IniciaTurtle .)
    RETURN          reduce using rule 124 (Turtle -> IniciaTurtle .)
    VAR_ID          reduce using rule 124 (Turtle -> IniciaTurtle .)
    PRINT           reduce using rule 124 (Turtle -> IniciaTurtle .)
    FOR             reduce using rule 124 (Turtle -> IniciaTurtle .)
    WHILE           reduce using rule 124 (Turtle -> IniciaTurtle .)
    DO              reduce using rule 124 (Turtle -> IniciaTurtle .)
    TUR             reduce using rule 124 (Turtle -> IniciaTurtle .)
    RET             reduce using rule 124 (Turtle -> IniciaTurtle .)
    RBRACKET        reduce using rule 124 (Turtle -> IniciaTurtle .)


state 72

    (125) Turtle -> TerminaTurtle .

    IF              reduce using rule 125 (Turtle -> TerminaTurtle .)
    RETURN          reduce using rule 125 (Turtle -> TerminaTurtle .)
    VAR_ID          reduce using rule 125 (Turtle -> TerminaTurtle .)
    PRINT           reduce using rule 125 (Turtle -> TerminaTurtle .)
    FOR             reduce using rule 125 (Turtle -> TerminaTurtle .)
    WHILE           reduce using rule 125 (Turtle -> TerminaTurtle .)
    DO              reduce using rule 125 (Turtle -> TerminaTurtle .)
    TUR             reduce using rule 125 (Turtle -> TerminaTurtle .)
    RET             reduce using rule 125 (Turtle -> TerminaTurtle .)
    RBRACKET        reduce using rule 125 (Turtle -> TerminaTurtle .)


state 73

    (126) Turtle -> iniciaFill .

    IF              reduce using rule 126 (Turtle -> iniciaFill .)
    RETURN          reduce using rule 126 (Turtle -> iniciaFill .)
    VAR_ID          reduce using rule 126 (Turtle -> iniciaFill .)
    PRINT           reduce using rule 126 (Turtle -> iniciaFill .)
    FOR             reduce using rule 126 (Turtle -> iniciaFill .)
    WHILE           reduce using rule 126 (Turtle -> iniciaFill .)
    DO              reduce using rule 126 (Turtle -> iniciaFill .)
    TUR             reduce using rule 126 (Turtle -> iniciaFill .)
    RET             reduce using rule 126 (Turtle -> iniciaFill .)
    RBRACKET        reduce using rule 126 (Turtle -> iniciaFill .)


state 74

    (127) Turtle -> Square .

    IF              reduce using rule 127 (Turtle -> Square .)
    RETURN          reduce using rule 127 (Turtle -> Square .)
    VAR_ID          reduce using rule 127 (Turtle -> Square .)
    PRINT           reduce using rule 127 (Turtle -> Square .)
    FOR             reduce using rule 127 (Turtle -> Square .)
    WHILE           reduce using rule 127 (Turtle -> Square .)
    DO              reduce using rule 127 (Turtle -> Square .)
    TUR             reduce using rule 127 (Turtle -> Square .)
    RET             reduce using rule 127 (Turtle -> Square .)
    RBRACKET        reduce using rule 127 (Turtle -> Square .)


state 75

    (128) Turtle -> Rectangle .

    IF              reduce using rule 128 (Turtle -> Rectangle .)
    RETURN          reduce using rule 128 (Turtle -> Rectangle .)
    VAR_ID          reduce using rule 128 (Turtle -> Rectangle .)
    PRINT           reduce using rule 128 (Turtle -> Rectangle .)
    FOR             reduce using rule 128 (Turtle -> Rectangle .)
    WHILE           reduce using rule 128 (Turtle -> Rectangle .)
    DO              reduce using rule 128 (Turtle -> Rectangle .)
    TUR             reduce using rule 128 (Turtle -> Rectangle .)
    RET             reduce using rule 128 (Turtle -> Rectangle .)
    RBRACKET        reduce using rule 128 (Turtle -> Rectangle .)


state 76

    (129) Turtle -> Triangle .

    IF              reduce using rule 129 (Turtle -> Triangle .)
    RETURN          reduce using rule 129 (Turtle -> Triangle .)
    VAR_ID          reduce using rule 129 (Turtle -> Triangle .)
    PRINT           reduce using rule 129 (Turtle -> Triangle .)
    FOR             reduce using rule 129 (Turtle -> Triangle .)
    WHILE           reduce using rule 129 (Turtle -> Triangle .)
    DO              reduce using rule 129 (Turtle -> Triangle .)
    TUR             reduce using rule 129 (Turtle -> Triangle .)
    RET             reduce using rule 129 (Turtle -> Triangle .)
    RBRACKET        reduce using rule 129 (Turtle -> Triangle .)


state 77

    (130) Turtle -> terminaFill .

    IF              reduce using rule 130 (Turtle -> terminaFill .)
    RETURN          reduce using rule 130 (Turtle -> terminaFill .)
    VAR_ID          reduce using rule 130 (Turtle -> terminaFill .)
    PRINT           reduce using rule 130 (Turtle -> terminaFill .)
    FOR             reduce using rule 130 (Turtle -> terminaFill .)
    WHILE           reduce using rule 130 (Turtle -> terminaFill .)
    DO              reduce using rule 130 (Turtle -> terminaFill .)
    TUR             reduce using rule 130 (Turtle -> terminaFill .)
    RET             reduce using rule 130 (Turtle -> terminaFill .)
    RBRACKET        reduce using rule 130 (Turtle -> terminaFill .)


state 78

    (131) Turtle -> colorFill .

    IF              reduce using rule 131 (Turtle -> colorFill .)
    RETURN          reduce using rule 131 (Turtle -> colorFill .)
    VAR_ID          reduce using rule 131 (Turtle -> colorFill .)
    PRINT           reduce using rule 131 (Turtle -> colorFill .)
    FOR             reduce using rule 131 (Turtle -> colorFill .)
    WHILE           reduce using rule 131 (Turtle -> colorFill .)
    DO              reduce using rule 131 (Turtle -> colorFill .)
    TUR             reduce using rule 131 (Turtle -> colorFill .)
    RET             reduce using rule 131 (Turtle -> colorFill .)
    RBRACKET        reduce using rule 131 (Turtle -> colorFill .)


state 79

    (132) Turtle -> colorPen .

    IF              reduce using rule 132 (Turtle -> colorPen .)
    RETURN          reduce using rule 132 (Turtle -> colorPen .)
    VAR_ID          reduce using rule 132 (Turtle -> colorPen .)
    PRINT           reduce using rule 132 (Turtle -> colorPen .)
    FOR             reduce using rule 132 (Turtle -> colorPen .)
    WHILE           reduce using rule 132 (Turtle -> colorPen .)
    DO              reduce using rule 132 (Turtle -> colorPen .)
    TUR             reduce using rule 132 (Turtle -> colorPen .)
    RET             reduce using rule 132 (Turtle -> colorPen .)
    RBRACKET        reduce using rule 132 (Turtle -> colorPen .)


state 80

    (110) For -> FOR . LPAREN VAR_ID ASSIGN ExpI SEMICOLON ExpI SEMICOLON VAR_ID Exp_ciclo RPAREN LBRACKET reg_brack RBRACKET

    LPAREN          shift and go to state 107


state 81

    (105) While -> WHILE . guarda_numero_cuadruplo LPAREN ExpI RPAREN crea_GOTOF LBRACKET reg_brack RBRACKET regresa_inicio_while
    (106) guarda_numero_cuadruplo -> .

    LPAREN          reduce using rule 106 (guarda_numero_cuadruplo -> .)

    guarda_numero_cuadruplo        shift and go to state 108

state 82

    (108) DoWhile -> DO . guarda_numero_cuadruplo LBRACKET reg_brack RBRACKET WHILE LPAREN ExpI RPAREN SEMICOLON crea_GOTOV
    (106) guarda_numero_cuadruplo -> .

    LBRACKET        reduce using rule 106 (guarda_numero_cuadruplo -> .)

    guarda_numero_cuadruplo        shift and go to state 109

state 83

    (133) Forward -> TUR . POINT FORWARD LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_forward
    (135) Right -> TUR . POINT RIGHT LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_right
    (137) Left -> TUR . POINT LEFT LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_left
    (139) Circle -> TUR . POINT CIRCLE LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_circle
    (155) Position -> TUR . POINT POS LPAREN ExpI COMMA ExpI RPAREN SEMICOLON crea_cuadruplo_pos
    (157) IniciaTurtle -> TUR . POINT TURTLE LPAREN RPAREN SEMICOLON crea_cuadruplo_inicia
    (159) TerminaTurtle -> TUR . POINT FINISH LPAREN RPAREN SEMICOLON crea_cuadruplo_termina
    (147) iniciaFill -> TUR . POINT BEGIN_FILL LPAREN RPAREN SEMICOLON crea_cuadruplo_iniciafill
    (141) Square -> TUR . POINT SQUARE LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_square
    (143) Rectangle -> TUR . POINT RECTANGLE LPAREN ExpI COMMA ExpI RPAREN SEMICOLON crea_cuadruplo_rectangle
    (145) Triangle -> TUR . POINT TRIANGLE LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_triangle
    (149) terminaFill -> TUR . POINT END_FILL LPAREN RPAREN SEMICOLON crea_cuadruplo_terminafill
    (151) colorFill -> TUR . POINT COLOR LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_colorFill
    (153) colorPen -> TUR . POINT PENCOLOR LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_colorPen

    POINT           shift and go to state 110


state 84

    (71) funciones -> FUNC tipo_funcion VAR_ID LPAREN param RPAREN agrega_funcion LBRACKET . Vars reg_brack RBRACKET fin_func_cuad funciones
    (4) Vars -> . Tipo VAR_ID mas_vars agrega_var_funcion SEMICOLON Vars
    (5) Vars -> . Tipo VAR_ID SLBRACKET VAR_INT push_int_PilaOperandos SRBRACKET agrega_limites_arreglo agrega_arr_funcion SEMICOLON Vars
    (6) Vars -> .
    (9) Tipo -> . INT
    (10) Tipo -> . DECIMAL
    (11) Tipo -> . STRING
    (12) Tipo -> . CHAR
    (13) Tipo -> . BOOL

    IF              reduce using rule 6 (Vars -> .)
    RETURN          reduce using rule 6 (Vars -> .)
    VAR_ID          reduce using rule 6 (Vars -> .)
    PRINT           reduce using rule 6 (Vars -> .)
    FOR             reduce using rule 6 (Vars -> .)
    WHILE           reduce using rule 6 (Vars -> .)
    DO              reduce using rule 6 (Vars -> .)
    TUR             reduce using rule 6 (Vars -> .)
    RBRACKET        reduce using rule 6 (Vars -> .)
    INT             shift and go to state 10
    DECIMAL         shift and go to state 11
    STRING          shift and go to state 12
    CHAR            shift and go to state 13
    BOOL            shift and go to state 14

    Vars                           shift and go to state 111
    Tipo                           shift and go to state 9

state 85

    (77) pos_commaf -> COMMA Tipo . VAR_ID pos_commaf

    VAR_ID          shift and go to state 112


state 86

    (5) Vars -> Tipo VAR_ID SLBRACKET VAR_INT push_int_PilaOperandos SRBRACKET agrega_limites_arreglo agrega_arr_funcion SEMICOLON . Vars
    (4) Vars -> . Tipo VAR_ID mas_vars agrega_var_funcion SEMICOLON Vars
    (5) Vars -> . Tipo VAR_ID SLBRACKET VAR_INT push_int_PilaOperandos SRBRACKET agrega_limites_arreglo agrega_arr_funcion SEMICOLON Vars
    (6) Vars -> .
    (9) Tipo -> . INT
    (10) Tipo -> . DECIMAL
    (11) Tipo -> . STRING
    (12) Tipo -> . CHAR
    (13) Tipo -> . BOOL

    FUNC            reduce using rule 6 (Vars -> .)
    MAIN            reduce using rule 6 (Vars -> .)
    IF              reduce using rule 6 (Vars -> .)
    RETURN          reduce using rule 6 (Vars -> .)
    VAR_ID          reduce using rule 6 (Vars -> .)
    PRINT           reduce using rule 6 (Vars -> .)
    FOR             reduce using rule 6 (Vars -> .)
    WHILE           reduce using rule 6 (Vars -> .)
    DO              reduce using rule 6 (Vars -> .)
    TUR             reduce using rule 6 (Vars -> .)
    RET             reduce using rule 6 (Vars -> .)
    RBRACKET        reduce using rule 6 (Vars -> .)
    INT             shift and go to state 10
    DECIMAL         shift and go to state 11
    STRING          shift and go to state 12
    CHAR            shift and go to state 13
    BOOL            shift and go to state 14

    Tipo                           shift and go to state 9
    Vars                           shift and go to state 113

state 87

    (117) Main -> MAIN agrega_main_funcion LPAREN RPAREN LBRACKET Vars reg_brack RET . ZERO SEMICOLON RBRACKET

    ZERO            shift and go to state 114


state 88

    (81) reg_brack -> Estatutos reg_brack .

    RET             reduce using rule 81 (reg_brack -> Estatutos reg_brack .)
    RBRACKET        reduce using rule 81 (reg_brack -> Estatutos reg_brack .)


state 89

    (90) Condicion -> IF LPAREN . ExpI RPAREN crea_GOTOF LBRACKET reg_brack RBRACKET pos_else llena_cuadruplo_if
    (23) ExpI -> . ExpK resuelve_operadores_relacionales
    (24) ExpI -> . ExpK Operandos push_operador_PilaOperadores ExpK resuelve_operadores_relacionales
    (32) ExpK -> . ExpT resuelve_termino
    (33) ExpK -> . ExpT resuelve_termino pos_SUMRES push_operador_PilaOperadores ExpK
    (37) ExpT -> . ExpF resuelve_factor
    (38) ExpT -> . ExpF resuelve_factor pos_MULTDIV push_operador_PilaOperadores ExpT
    (42) ExpF -> . VAR_CTE
    (43) ExpF -> . LPAREN agrega_falso ExpI RPAREN quita_falso
    (44) ExpF -> . VAR_ID push_var_PilaOperandos pos_arreglo
    (45) ExpF -> . llama_funcion
    (46) VAR_CTE -> . VAR_INT push_int_PilaOperandos
    (47) VAR_CTE -> . VAR_DECIMAL push_decimal_PilaOperandos
    (48) VAR_CTE -> . VAR_STRING push_string_PilaOperandos
    (49) VAR_CTE -> . VAR_BOOL push_bool_PilaOperandos
    (58) llama_funcion -> . VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion guarda_resultado_funcion
    (50) VAR_BOOL -> . FALSE
    (51) VAR_BOOL -> . TRUE

    LPAREN          shift and go to state 95
    VAR_ID          shift and go to state 96
    VAR_INT         shift and go to state 98
    VAR_DECIMAL     shift and go to state 99
    VAR_STRING      shift and go to state 100
    FALSE           shift and go to state 102
    TRUE            shift and go to state 103

    ExpI                           shift and go to state 115
    ExpK                           shift and go to state 91
    ExpT                           shift and go to state 92
    ExpF                           shift and go to state 93
    VAR_CTE                        shift and go to state 94
    llama_funcion                  shift and go to state 97
    VAR_BOOL                       shift and go to state 101

state 90

    (96) Return -> RETURN ExpI . SEMICOLON resuelve_return

    SEMICOLON       shift and go to state 116


state 91

    (23) ExpI -> ExpK . resuelve_operadores_relacionales
    (24) ExpI -> ExpK . Operandos push_operador_PilaOperadores ExpK resuelve_operadores_relacionales
    (31) resuelve_operadores_relacionales -> .
    (25) Operandos -> . LT
    (26) Operandos -> . GT
    (27) Operandos -> . NE
    (28) Operandos -> . LE
    (29) Operandos -> . GE
    (30) Operandos -> . EQ

    SEMICOLON       reduce using rule 31 (resuelve_operadores_relacionales -> .)
    RPAREN          reduce using rule 31 (resuelve_operadores_relacionales -> .)
    COMMA           reduce using rule 31 (resuelve_operadores_relacionales -> .)
    SRBRACKET       reduce using rule 31 (resuelve_operadores_relacionales -> .)
    LT              shift and go to state 119
    GT              shift and go to state 120
    NE              shift and go to state 121
    LE              shift and go to state 122
    GE              shift and go to state 123
    EQ              shift and go to state 124

    resuelve_operadores_relacionales shift and go to state 117
    Operandos                      shift and go to state 118

state 92

    (32) ExpK -> ExpT . resuelve_termino
    (33) ExpK -> ExpT . resuelve_termino pos_SUMRES push_operador_PilaOperadores ExpK
    (34) resuelve_termino -> .

    PLUS            reduce using rule 34 (resuelve_termino -> .)
    MINUS           reduce using rule 34 (resuelve_termino -> .)
    LT              reduce using rule 34 (resuelve_termino -> .)
    GT              reduce using rule 34 (resuelve_termino -> .)
    NE              reduce using rule 34 (resuelve_termino -> .)
    LE              reduce using rule 34 (resuelve_termino -> .)
    GE              reduce using rule 34 (resuelve_termino -> .)
    EQ              reduce using rule 34 (resuelve_termino -> .)
    SEMICOLON       reduce using rule 34 (resuelve_termino -> .)
    RPAREN          reduce using rule 34 (resuelve_termino -> .)
    COMMA           reduce using rule 34 (resuelve_termino -> .)
    SRBRACKET       reduce using rule 34 (resuelve_termino -> .)

    resuelve_termino               shift and go to state 125

state 93

    (37) ExpT -> ExpF . resuelve_factor
    (38) ExpT -> ExpF . resuelve_factor pos_MULTDIV push_operador_PilaOperadores ExpT
    (39) resuelve_factor -> .

    MULT            reduce using rule 39 (resuelve_factor -> .)
    DIV             reduce using rule 39 (resuelve_factor -> .)
    PLUS            reduce using rule 39 (resuelve_factor -> .)
    MINUS           reduce using rule 39 (resuelve_factor -> .)
    LT              reduce using rule 39 (resuelve_factor -> .)
    GT              reduce using rule 39 (resuelve_factor -> .)
    NE              reduce using rule 39 (resuelve_factor -> .)
    LE              reduce using rule 39 (resuelve_factor -> .)
    GE              reduce using rule 39 (resuelve_factor -> .)
    EQ              reduce using rule 39 (resuelve_factor -> .)
    SEMICOLON       reduce using rule 39 (resuelve_factor -> .)
    RPAREN          reduce using rule 39 (resuelve_factor -> .)
    COMMA           reduce using rule 39 (resuelve_factor -> .)
    SRBRACKET       reduce using rule 39 (resuelve_factor -> .)

    resuelve_factor                shift and go to state 126

state 94

    (42) ExpF -> VAR_CTE .

    MULT            reduce using rule 42 (ExpF -> VAR_CTE .)
    DIV             reduce using rule 42 (ExpF -> VAR_CTE .)
    PLUS            reduce using rule 42 (ExpF -> VAR_CTE .)
    MINUS           reduce using rule 42 (ExpF -> VAR_CTE .)
    LT              reduce using rule 42 (ExpF -> VAR_CTE .)
    GT              reduce using rule 42 (ExpF -> VAR_CTE .)
    NE              reduce using rule 42 (ExpF -> VAR_CTE .)
    LE              reduce using rule 42 (ExpF -> VAR_CTE .)
    GE              reduce using rule 42 (ExpF -> VAR_CTE .)
    EQ              reduce using rule 42 (ExpF -> VAR_CTE .)
    SEMICOLON       reduce using rule 42 (ExpF -> VAR_CTE .)
    RPAREN          reduce using rule 42 (ExpF -> VAR_CTE .)
    COMMA           reduce using rule 42 (ExpF -> VAR_CTE .)
    SRBRACKET       reduce using rule 42 (ExpF -> VAR_CTE .)


state 95

    (43) ExpF -> LPAREN . agrega_falso ExpI RPAREN quita_falso
    (56) agrega_falso -> .

    LPAREN          reduce using rule 56 (agrega_falso -> .)
    VAR_ID          reduce using rule 56 (agrega_falso -> .)
    VAR_INT         reduce using rule 56 (agrega_falso -> .)
    VAR_DECIMAL     reduce using rule 56 (agrega_falso -> .)
    VAR_STRING      reduce using rule 56 (agrega_falso -> .)
    FALSE           reduce using rule 56 (agrega_falso -> .)
    TRUE            reduce using rule 56 (agrega_falso -> .)

    agrega_falso                   shift and go to state 127

state 96

    (44) ExpF -> VAR_ID . push_var_PilaOperandos pos_arreglo
    (58) llama_funcion -> VAR_ID . LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion guarda_resultado_funcion
    (20) push_var_PilaOperandos -> .

    LPAREN          shift and go to state 129
    SLBRACKET       reduce using rule 20 (push_var_PilaOperandos -> .)
    MULT            reduce using rule 20 (push_var_PilaOperandos -> .)
    DIV             reduce using rule 20 (push_var_PilaOperandos -> .)
    PLUS            reduce using rule 20 (push_var_PilaOperandos -> .)
    MINUS           reduce using rule 20 (push_var_PilaOperandos -> .)
    LT              reduce using rule 20 (push_var_PilaOperandos -> .)
    GT              reduce using rule 20 (push_var_PilaOperandos -> .)
    NE              reduce using rule 20 (push_var_PilaOperandos -> .)
    LE              reduce using rule 20 (push_var_PilaOperandos -> .)
    GE              reduce using rule 20 (push_var_PilaOperandos -> .)
    EQ              reduce using rule 20 (push_var_PilaOperandos -> .)
    SEMICOLON       reduce using rule 20 (push_var_PilaOperandos -> .)
    RPAREN          reduce using rule 20 (push_var_PilaOperandos -> .)
    COMMA           reduce using rule 20 (push_var_PilaOperandos -> .)
    SRBRACKET       reduce using rule 20 (push_var_PilaOperandos -> .)

    push_var_PilaOperandos         shift and go to state 128

state 97

    (45) ExpF -> llama_funcion .

    MULT            reduce using rule 45 (ExpF -> llama_funcion .)
    DIV             reduce using rule 45 (ExpF -> llama_funcion .)
    PLUS            reduce using rule 45 (ExpF -> llama_funcion .)
    MINUS           reduce using rule 45 (ExpF -> llama_funcion .)
    LT              reduce using rule 45 (ExpF -> llama_funcion .)
    GT              reduce using rule 45 (ExpF -> llama_funcion .)
    NE              reduce using rule 45 (ExpF -> llama_funcion .)
    LE              reduce using rule 45 (ExpF -> llama_funcion .)
    GE              reduce using rule 45 (ExpF -> llama_funcion .)
    EQ              reduce using rule 45 (ExpF -> llama_funcion .)
    SEMICOLON       reduce using rule 45 (ExpF -> llama_funcion .)
    RPAREN          reduce using rule 45 (ExpF -> llama_funcion .)
    COMMA           reduce using rule 45 (ExpF -> llama_funcion .)
    SRBRACKET       reduce using rule 45 (ExpF -> llama_funcion .)


state 98

    (46) VAR_CTE -> VAR_INT . push_int_PilaOperandos
    (52) push_int_PilaOperandos -> .

    MULT            reduce using rule 52 (push_int_PilaOperandos -> .)
    DIV             reduce using rule 52 (push_int_PilaOperandos -> .)
    PLUS            reduce using rule 52 (push_int_PilaOperandos -> .)
    MINUS           reduce using rule 52 (push_int_PilaOperandos -> .)
    LT              reduce using rule 52 (push_int_PilaOperandos -> .)
    GT              reduce using rule 52 (push_int_PilaOperandos -> .)
    NE              reduce using rule 52 (push_int_PilaOperandos -> .)
    LE              reduce using rule 52 (push_int_PilaOperandos -> .)
    GE              reduce using rule 52 (push_int_PilaOperandos -> .)
    EQ              reduce using rule 52 (push_int_PilaOperandos -> .)
    SEMICOLON       reduce using rule 52 (push_int_PilaOperandos -> .)
    RPAREN          reduce using rule 52 (push_int_PilaOperandos -> .)
    COMMA           reduce using rule 52 (push_int_PilaOperandos -> .)
    SRBRACKET       reduce using rule 52 (push_int_PilaOperandos -> .)

    push_int_PilaOperandos         shift and go to state 130

state 99

    (47) VAR_CTE -> VAR_DECIMAL . push_decimal_PilaOperandos
    (53) push_decimal_PilaOperandos -> .

    MULT            reduce using rule 53 (push_decimal_PilaOperandos -> .)
    DIV             reduce using rule 53 (push_decimal_PilaOperandos -> .)
    PLUS            reduce using rule 53 (push_decimal_PilaOperandos -> .)
    MINUS           reduce using rule 53 (push_decimal_PilaOperandos -> .)
    LT              reduce using rule 53 (push_decimal_PilaOperandos -> .)
    GT              reduce using rule 53 (push_decimal_PilaOperandos -> .)
    NE              reduce using rule 53 (push_decimal_PilaOperandos -> .)
    LE              reduce using rule 53 (push_decimal_PilaOperandos -> .)
    GE              reduce using rule 53 (push_decimal_PilaOperandos -> .)
    EQ              reduce using rule 53 (push_decimal_PilaOperandos -> .)
    SEMICOLON       reduce using rule 53 (push_decimal_PilaOperandos -> .)
    RPAREN          reduce using rule 53 (push_decimal_PilaOperandos -> .)
    COMMA           reduce using rule 53 (push_decimal_PilaOperandos -> .)
    SRBRACKET       reduce using rule 53 (push_decimal_PilaOperandos -> .)

    push_decimal_PilaOperandos     shift and go to state 131

state 100

    (48) VAR_CTE -> VAR_STRING . push_string_PilaOperandos
    (54) push_string_PilaOperandos -> .

    MULT            reduce using rule 54 (push_string_PilaOperandos -> .)
    DIV             reduce using rule 54 (push_string_PilaOperandos -> .)
    PLUS            reduce using rule 54 (push_string_PilaOperandos -> .)
    MINUS           reduce using rule 54 (push_string_PilaOperandos -> .)
    LT              reduce using rule 54 (push_string_PilaOperandos -> .)
    GT              reduce using rule 54 (push_string_PilaOperandos -> .)
    NE              reduce using rule 54 (push_string_PilaOperandos -> .)
    LE              reduce using rule 54 (push_string_PilaOperandos -> .)
    GE              reduce using rule 54 (push_string_PilaOperandos -> .)
    EQ              reduce using rule 54 (push_string_PilaOperandos -> .)
    SEMICOLON       reduce using rule 54 (push_string_PilaOperandos -> .)
    RPAREN          reduce using rule 54 (push_string_PilaOperandos -> .)
    COMMA           reduce using rule 54 (push_string_PilaOperandos -> .)
    SRBRACKET       reduce using rule 54 (push_string_PilaOperandos -> .)

    push_string_PilaOperandos      shift and go to state 132

state 101

    (49) VAR_CTE -> VAR_BOOL . push_bool_PilaOperandos
    (55) push_bool_PilaOperandos -> .

    MULT            reduce using rule 55 (push_bool_PilaOperandos -> .)
    DIV             reduce using rule 55 (push_bool_PilaOperandos -> .)
    PLUS            reduce using rule 55 (push_bool_PilaOperandos -> .)
    MINUS           reduce using rule 55 (push_bool_PilaOperandos -> .)
    LT              reduce using rule 55 (push_bool_PilaOperandos -> .)
    GT              reduce using rule 55 (push_bool_PilaOperandos -> .)
    NE              reduce using rule 55 (push_bool_PilaOperandos -> .)
    LE              reduce using rule 55 (push_bool_PilaOperandos -> .)
    GE              reduce using rule 55 (push_bool_PilaOperandos -> .)
    EQ              reduce using rule 55 (push_bool_PilaOperandos -> .)
    SEMICOLON       reduce using rule 55 (push_bool_PilaOperandos -> .)
    RPAREN          reduce using rule 55 (push_bool_PilaOperandos -> .)
    COMMA           reduce using rule 55 (push_bool_PilaOperandos -> .)
    SRBRACKET       reduce using rule 55 (push_bool_PilaOperandos -> .)

    push_bool_PilaOperandos        shift and go to state 133

state 102

    (50) VAR_BOOL -> FALSE .

    MULT            reduce using rule 50 (VAR_BOOL -> FALSE .)
    DIV             reduce using rule 50 (VAR_BOOL -> FALSE .)
    PLUS            reduce using rule 50 (VAR_BOOL -> FALSE .)
    MINUS           reduce using rule 50 (VAR_BOOL -> FALSE .)
    LT              reduce using rule 50 (VAR_BOOL -> FALSE .)
    GT              reduce using rule 50 (VAR_BOOL -> FALSE .)
    NE              reduce using rule 50 (VAR_BOOL -> FALSE .)
    LE              reduce using rule 50 (VAR_BOOL -> FALSE .)
    GE              reduce using rule 50 (VAR_BOOL -> FALSE .)
    EQ              reduce using rule 50 (VAR_BOOL -> FALSE .)
    SEMICOLON       reduce using rule 50 (VAR_BOOL -> FALSE .)
    RPAREN          reduce using rule 50 (VAR_BOOL -> FALSE .)
    COMMA           reduce using rule 50 (VAR_BOOL -> FALSE .)
    SRBRACKET       reduce using rule 50 (VAR_BOOL -> FALSE .)


state 103

    (51) VAR_BOOL -> TRUE .

    MULT            reduce using rule 51 (VAR_BOOL -> TRUE .)
    DIV             reduce using rule 51 (VAR_BOOL -> TRUE .)
    PLUS            reduce using rule 51 (VAR_BOOL -> TRUE .)
    MINUS           reduce using rule 51 (VAR_BOOL -> TRUE .)
    LT              reduce using rule 51 (VAR_BOOL -> TRUE .)
    GT              reduce using rule 51 (VAR_BOOL -> TRUE .)
    NE              reduce using rule 51 (VAR_BOOL -> TRUE .)
    LE              reduce using rule 51 (VAR_BOOL -> TRUE .)
    GE              reduce using rule 51 (VAR_BOOL -> TRUE .)
    EQ              reduce using rule 51 (VAR_BOOL -> TRUE .)
    SEMICOLON       reduce using rule 51 (VAR_BOOL -> TRUE .)
    RPAREN          reduce using rule 51 (VAR_BOOL -> TRUE .)
    COMMA           reduce using rule 51 (VAR_BOOL -> TRUE .)
    SRBRACKET       reduce using rule 51 (VAR_BOOL -> TRUE .)


state 104

    (17) Asignacion -> VAR_ID push_var_PilaOperandos . pos_arreglo ASSIGN push_operador_PilaOperadores ExpI SEMICOLON resuelve_asignacion
    (18) Asignacion -> VAR_ID push_var_PilaOperandos . pos_arreglo ASSIGN push_operador_PilaOperadores READ LPAREN ExpI RPAREN crea_cuadruplo_read SEMICOLON resuelve_asignacion
    (67) pos_arreglo -> . SLBRACKET checa_var_arr agrega_falso ExpI crea_cuadruplo_ver quita_falso SRBRACKET
    (68) pos_arreglo -> .

    SLBRACKET       shift and go to state 135
    ASSIGN          reduce using rule 68 (pos_arreglo -> .)

    pos_arreglo                    shift and go to state 134

state 105

    (100) Llamada_Func -> VAR_ID LPAREN . agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion SEMICOLON checa_void
    (56) agrega_falso -> .

    LPAREN          reduce using rule 56 (agrega_falso -> .)
    VAR_ID          reduce using rule 56 (agrega_falso -> .)
    VAR_INT         reduce using rule 56 (agrega_falso -> .)
    VAR_DECIMAL     reduce using rule 56 (agrega_falso -> .)
    VAR_STRING      reduce using rule 56 (agrega_falso -> .)
    FALSE           reduce using rule 56 (agrega_falso -> .)
    TRUE            reduce using rule 56 (agrega_falso -> .)
    RPAREN          reduce using rule 56 (agrega_falso -> .)

    agrega_falso                   shift and go to state 136

state 106

    (98) Print -> PRINT LPAREN . ExpI RPAREN SEMICOLON crea_print
    (23) ExpI -> . ExpK resuelve_operadores_relacionales
    (24) ExpI -> . ExpK Operandos push_operador_PilaOperadores ExpK resuelve_operadores_relacionales
    (32) ExpK -> . ExpT resuelve_termino
    (33) ExpK -> . ExpT resuelve_termino pos_SUMRES push_operador_PilaOperadores ExpK
    (37) ExpT -> . ExpF resuelve_factor
    (38) ExpT -> . ExpF resuelve_factor pos_MULTDIV push_operador_PilaOperadores ExpT
    (42) ExpF -> . VAR_CTE
    (43) ExpF -> . LPAREN agrega_falso ExpI RPAREN quita_falso
    (44) ExpF -> . VAR_ID push_var_PilaOperandos pos_arreglo
    (45) ExpF -> . llama_funcion
    (46) VAR_CTE -> . VAR_INT push_int_PilaOperandos
    (47) VAR_CTE -> . VAR_DECIMAL push_decimal_PilaOperandos
    (48) VAR_CTE -> . VAR_STRING push_string_PilaOperandos
    (49) VAR_CTE -> . VAR_BOOL push_bool_PilaOperandos
    (58) llama_funcion -> . VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion guarda_resultado_funcion
    (50) VAR_BOOL -> . FALSE
    (51) VAR_BOOL -> . TRUE

    LPAREN          shift and go to state 95
    VAR_ID          shift and go to state 96
    VAR_INT         shift and go to state 98
    VAR_DECIMAL     shift and go to state 99
    VAR_STRING      shift and go to state 100
    FALSE           shift and go to state 102
    TRUE            shift and go to state 103

    ExpI                           shift and go to state 137
    ExpK                           shift and go to state 91
    ExpT                           shift and go to state 92
    ExpF                           shift and go to state 93
    VAR_CTE                        shift and go to state 94
    llama_funcion                  shift and go to state 97
    VAR_BOOL                       shift and go to state 101

state 107

    (110) For -> FOR LPAREN . VAR_ID ASSIGN ExpI SEMICOLON ExpI SEMICOLON VAR_ID Exp_ciclo RPAREN LBRACKET reg_brack RBRACKET

    VAR_ID          shift and go to state 138


state 108

    (105) While -> WHILE guarda_numero_cuadruplo . LPAREN ExpI RPAREN crea_GOTOF LBRACKET reg_brack RBRACKET regresa_inicio_while

    LPAREN          shift and go to state 139


state 109

    (108) DoWhile -> DO guarda_numero_cuadruplo . LBRACKET reg_brack RBRACKET WHILE LPAREN ExpI RPAREN SEMICOLON crea_GOTOV

    LBRACKET        shift and go to state 140


state 110

    (133) Forward -> TUR POINT . FORWARD LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_forward
    (135) Right -> TUR POINT . RIGHT LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_right
    (137) Left -> TUR POINT . LEFT LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_left
    (139) Circle -> TUR POINT . CIRCLE LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_circle
    (155) Position -> TUR POINT . POS LPAREN ExpI COMMA ExpI RPAREN SEMICOLON crea_cuadruplo_pos
    (157) IniciaTurtle -> TUR POINT . TURTLE LPAREN RPAREN SEMICOLON crea_cuadruplo_inicia
    (159) TerminaTurtle -> TUR POINT . FINISH LPAREN RPAREN SEMICOLON crea_cuadruplo_termina
    (147) iniciaFill -> TUR POINT . BEGIN_FILL LPAREN RPAREN SEMICOLON crea_cuadruplo_iniciafill
    (141) Square -> TUR POINT . SQUARE LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_square
    (143) Rectangle -> TUR POINT . RECTANGLE LPAREN ExpI COMMA ExpI RPAREN SEMICOLON crea_cuadruplo_rectangle
    (145) Triangle -> TUR POINT . TRIANGLE LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_triangle
    (149) terminaFill -> TUR POINT . END_FILL LPAREN RPAREN SEMICOLON crea_cuadruplo_terminafill
    (151) colorFill -> TUR POINT . COLOR LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_colorFill
    (153) colorPen -> TUR POINT . PENCOLOR LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_colorPen

    FORWARD         shift and go to state 141
    RIGHT           shift and go to state 142
    LEFT            shift and go to state 143
    CIRCLE          shift and go to state 144
    POS             shift and go to state 145
    TURTLE          shift and go to state 146
    FINISH          shift and go to state 147
    BEGIN_FILL      shift and go to state 148
    SQUARE          shift and go to state 149
    RECTANGLE       shift and go to state 150
    TRIANGLE        shift and go to state 151
    END_FILL        shift and go to state 152
    COLOR           shift and go to state 153
    PENCOLOR        shift and go to state 154


state 111

    (71) funciones -> FUNC tipo_funcion VAR_ID LPAREN param RPAREN agrega_funcion LBRACKET Vars . reg_brack RBRACKET fin_func_cuad funciones
    (81) reg_brack -> . Estatutos reg_brack
    (82) reg_brack -> .
    (83) Estatutos -> . Condicion
    (84) Estatutos -> . Ciclo
    (85) Estatutos -> . Return
    (86) Estatutos -> . Asignacion
    (87) Estatutos -> . Print
    (88) Estatutos -> . Llamada_Func
    (89) Estatutos -> . Turtle
    (90) Condicion -> . IF LPAREN ExpI RPAREN crea_GOTOF LBRACKET reg_brack RBRACKET pos_else llena_cuadruplo_if
    (102) Ciclo -> . For
    (103) Ciclo -> . While
    (104) Ciclo -> . DoWhile
    (96) Return -> . RETURN ExpI SEMICOLON resuelve_return
    (17) Asignacion -> . VAR_ID push_var_PilaOperandos pos_arreglo ASSIGN push_operador_PilaOperadores ExpI SEMICOLON resuelve_asignacion
    (18) Asignacion -> . VAR_ID push_var_PilaOperandos pos_arreglo ASSIGN push_operador_PilaOperadores READ LPAREN ExpI RPAREN crea_cuadruplo_read SEMICOLON resuelve_asignacion
    (98) Print -> . PRINT LPAREN ExpI RPAREN SEMICOLON crea_print
    (100) Llamada_Func -> . VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion SEMICOLON checa_void
    (119) Turtle -> . Forward
    (120) Turtle -> . Right
    (121) Turtle -> . Left
    (122) Turtle -> . Circle
    (123) Turtle -> . Position
    (124) Turtle -> . IniciaTurtle
    (125) Turtle -> . TerminaTurtle
    (126) Turtle -> . iniciaFill
    (127) Turtle -> . Square
    (128) Turtle -> . Rectangle
    (129) Turtle -> . Triangle
    (130) Turtle -> . terminaFill
    (131) Turtle -> . colorFill
    (132) Turtle -> . colorPen
    (110) For -> . FOR LPAREN VAR_ID ASSIGN ExpI SEMICOLON ExpI SEMICOLON VAR_ID Exp_ciclo RPAREN LBRACKET reg_brack RBRACKET
    (105) While -> . WHILE guarda_numero_cuadruplo LPAREN ExpI RPAREN crea_GOTOF LBRACKET reg_brack RBRACKET regresa_inicio_while
    (108) DoWhile -> . DO guarda_numero_cuadruplo LBRACKET reg_brack RBRACKET WHILE LPAREN ExpI RPAREN SEMICOLON crea_GOTOV
    (133) Forward -> . TUR POINT FORWARD LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_forward
    (135) Right -> . TUR POINT RIGHT LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_right
    (137) Left -> . TUR POINT LEFT LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_left
    (139) Circle -> . TUR POINT CIRCLE LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_circle
    (155) Position -> . TUR POINT POS LPAREN ExpI COMMA ExpI RPAREN SEMICOLON crea_cuadruplo_pos
    (157) IniciaTurtle -> . TUR POINT TURTLE LPAREN RPAREN SEMICOLON crea_cuadruplo_inicia
    (159) TerminaTurtle -> . TUR POINT FINISH LPAREN RPAREN SEMICOLON crea_cuadruplo_termina
    (147) iniciaFill -> . TUR POINT BEGIN_FILL LPAREN RPAREN SEMICOLON crea_cuadruplo_iniciafill
    (141) Square -> . TUR POINT SQUARE LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_square
    (143) Rectangle -> . TUR POINT RECTANGLE LPAREN ExpI COMMA ExpI RPAREN SEMICOLON crea_cuadruplo_rectangle
    (145) Triangle -> . TUR POINT TRIANGLE LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_triangle
    (149) terminaFill -> . TUR POINT END_FILL LPAREN RPAREN SEMICOLON crea_cuadruplo_terminafill
    (151) colorFill -> . TUR POINT COLOR LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_colorFill
    (153) colorPen -> . TUR POINT PENCOLOR LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_colorPen

    RBRACKET        reduce using rule 82 (reg_brack -> .)
    IF              shift and go to state 59
    RETURN          shift and go to state 63
    VAR_ID          shift and go to state 64
    PRINT           shift and go to state 65
    FOR             shift and go to state 80
    WHILE           shift and go to state 81
    DO              shift and go to state 82
    TUR             shift and go to state 83

    reg_brack                      shift and go to state 155
    Estatutos                      shift and go to state 51
    Condicion                      shift and go to state 52
    Ciclo                          shift and go to state 53
    Return                         shift and go to state 54
    Asignacion                     shift and go to state 55
    Print                          shift and go to state 56
    Llamada_Func                   shift and go to state 57
    Turtle                         shift and go to state 58
    For                            shift and go to state 60
    While                          shift and go to state 61
    DoWhile                        shift and go to state 62
    Forward                        shift and go to state 66
    Right                          shift and go to state 67
    Left                           shift and go to state 68
    Circle                         shift and go to state 69
    Position                       shift and go to state 70
    IniciaTurtle                   shift and go to state 71
    TerminaTurtle                  shift and go to state 72
    iniciaFill                     shift and go to state 73
    Square                         shift and go to state 74
    Rectangle                      shift and go to state 75
    Triangle                       shift and go to state 76
    terminaFill                    shift and go to state 77
    colorFill                      shift and go to state 78
    colorPen                       shift and go to state 79

state 112

    (77) pos_commaf -> COMMA Tipo VAR_ID . pos_commaf
    (77) pos_commaf -> . COMMA Tipo VAR_ID pos_commaf
    (78) pos_commaf -> .

    COMMA           shift and go to state 48
    RPAREN          reduce using rule 78 (pos_commaf -> .)

    pos_commaf                     shift and go to state 156

state 113

    (5) Vars -> Tipo VAR_ID SLBRACKET VAR_INT push_int_PilaOperandos SRBRACKET agrega_limites_arreglo agrega_arr_funcion SEMICOLON Vars .

    FUNC            reduce using rule 5 (Vars -> Tipo VAR_ID SLBRACKET VAR_INT push_int_PilaOperandos SRBRACKET agrega_limites_arreglo agrega_arr_funcion SEMICOLON Vars .)
    MAIN            reduce using rule 5 (Vars -> Tipo VAR_ID SLBRACKET VAR_INT push_int_PilaOperandos SRBRACKET agrega_limites_arreglo agrega_arr_funcion SEMICOLON Vars .)
    IF              reduce using rule 5 (Vars -> Tipo VAR_ID SLBRACKET VAR_INT push_int_PilaOperandos SRBRACKET agrega_limites_arreglo agrega_arr_funcion SEMICOLON Vars .)
    RETURN          reduce using rule 5 (Vars -> Tipo VAR_ID SLBRACKET VAR_INT push_int_PilaOperandos SRBRACKET agrega_limites_arreglo agrega_arr_funcion SEMICOLON Vars .)
    VAR_ID          reduce using rule 5 (Vars -> Tipo VAR_ID SLBRACKET VAR_INT push_int_PilaOperandos SRBRACKET agrega_limites_arreglo agrega_arr_funcion SEMICOLON Vars .)
    PRINT           reduce using rule 5 (Vars -> Tipo VAR_ID SLBRACKET VAR_INT push_int_PilaOperandos SRBRACKET agrega_limites_arreglo agrega_arr_funcion SEMICOLON Vars .)
    FOR             reduce using rule 5 (Vars -> Tipo VAR_ID SLBRACKET VAR_INT push_int_PilaOperandos SRBRACKET agrega_limites_arreglo agrega_arr_funcion SEMICOLON Vars .)
    WHILE           reduce using rule 5 (Vars -> Tipo VAR_ID SLBRACKET VAR_INT push_int_PilaOperandos SRBRACKET agrega_limites_arreglo agrega_arr_funcion SEMICOLON Vars .)
    DO              reduce using rule 5 (Vars -> Tipo VAR_ID SLBRACKET VAR_INT push_int_PilaOperandos SRBRACKET agrega_limites_arreglo agrega_arr_funcion SEMICOLON Vars .)
    TUR             reduce using rule 5 (Vars -> Tipo VAR_ID SLBRACKET VAR_INT push_int_PilaOperandos SRBRACKET agrega_limites_arreglo agrega_arr_funcion SEMICOLON Vars .)
    RET             reduce using rule 5 (Vars -> Tipo VAR_ID SLBRACKET VAR_INT push_int_PilaOperandos SRBRACKET agrega_limites_arreglo agrega_arr_funcion SEMICOLON Vars .)
    RBRACKET        reduce using rule 5 (Vars -> Tipo VAR_ID SLBRACKET VAR_INT push_int_PilaOperandos SRBRACKET agrega_limites_arreglo agrega_arr_funcion SEMICOLON Vars .)


state 114

    (117) Main -> MAIN agrega_main_funcion LPAREN RPAREN LBRACKET Vars reg_brack RET ZERO . SEMICOLON RBRACKET

    SEMICOLON       shift and go to state 157


state 115

    (90) Condicion -> IF LPAREN ExpI . RPAREN crea_GOTOF LBRACKET reg_brack RBRACKET pos_else llena_cuadruplo_if

    RPAREN          shift and go to state 158


state 116

    (96) Return -> RETURN ExpI SEMICOLON . resuelve_return
    (97) resuelve_return -> .

    IF              reduce using rule 97 (resuelve_return -> .)
    RETURN          reduce using rule 97 (resuelve_return -> .)
    VAR_ID          reduce using rule 97 (resuelve_return -> .)
    PRINT           reduce using rule 97 (resuelve_return -> .)
    FOR             reduce using rule 97 (resuelve_return -> .)
    WHILE           reduce using rule 97 (resuelve_return -> .)
    DO              reduce using rule 97 (resuelve_return -> .)
    TUR             reduce using rule 97 (resuelve_return -> .)
    RET             reduce using rule 97 (resuelve_return -> .)
    RBRACKET        reduce using rule 97 (resuelve_return -> .)

    resuelve_return                shift and go to state 159

state 117

    (23) ExpI -> ExpK resuelve_operadores_relacionales .

    SEMICOLON       reduce using rule 23 (ExpI -> ExpK resuelve_operadores_relacionales .)
    RPAREN          reduce using rule 23 (ExpI -> ExpK resuelve_operadores_relacionales .)
    COMMA           reduce using rule 23 (ExpI -> ExpK resuelve_operadores_relacionales .)
    SRBRACKET       reduce using rule 23 (ExpI -> ExpK resuelve_operadores_relacionales .)


state 118

    (24) ExpI -> ExpK Operandos . push_operador_PilaOperadores ExpK resuelve_operadores_relacionales
    (21) push_operador_PilaOperadores -> .

    LPAREN          reduce using rule 21 (push_operador_PilaOperadores -> .)
    VAR_ID          reduce using rule 21 (push_operador_PilaOperadores -> .)
    VAR_INT         reduce using rule 21 (push_operador_PilaOperadores -> .)
    VAR_DECIMAL     reduce using rule 21 (push_operador_PilaOperadores -> .)
    VAR_STRING      reduce using rule 21 (push_operador_PilaOperadores -> .)
    FALSE           reduce using rule 21 (push_operador_PilaOperadores -> .)
    TRUE            reduce using rule 21 (push_operador_PilaOperadores -> .)

    push_operador_PilaOperadores   shift and go to state 160

state 119

    (25) Operandos -> LT .

    LPAREN          reduce using rule 25 (Operandos -> LT .)
    VAR_ID          reduce using rule 25 (Operandos -> LT .)
    VAR_INT         reduce using rule 25 (Operandos -> LT .)
    VAR_DECIMAL     reduce using rule 25 (Operandos -> LT .)
    VAR_STRING      reduce using rule 25 (Operandos -> LT .)
    FALSE           reduce using rule 25 (Operandos -> LT .)
    TRUE            reduce using rule 25 (Operandos -> LT .)


state 120

    (26) Operandos -> GT .

    LPAREN          reduce using rule 26 (Operandos -> GT .)
    VAR_ID          reduce using rule 26 (Operandos -> GT .)
    VAR_INT         reduce using rule 26 (Operandos -> GT .)
    VAR_DECIMAL     reduce using rule 26 (Operandos -> GT .)
    VAR_STRING      reduce using rule 26 (Operandos -> GT .)
    FALSE           reduce using rule 26 (Operandos -> GT .)
    TRUE            reduce using rule 26 (Operandos -> GT .)


state 121

    (27) Operandos -> NE .

    LPAREN          reduce using rule 27 (Operandos -> NE .)
    VAR_ID          reduce using rule 27 (Operandos -> NE .)
    VAR_INT         reduce using rule 27 (Operandos -> NE .)
    VAR_DECIMAL     reduce using rule 27 (Operandos -> NE .)
    VAR_STRING      reduce using rule 27 (Operandos -> NE .)
    FALSE           reduce using rule 27 (Operandos -> NE .)
    TRUE            reduce using rule 27 (Operandos -> NE .)


state 122

    (28) Operandos -> LE .

    LPAREN          reduce using rule 28 (Operandos -> LE .)
    VAR_ID          reduce using rule 28 (Operandos -> LE .)
    VAR_INT         reduce using rule 28 (Operandos -> LE .)
    VAR_DECIMAL     reduce using rule 28 (Operandos -> LE .)
    VAR_STRING      reduce using rule 28 (Operandos -> LE .)
    FALSE           reduce using rule 28 (Operandos -> LE .)
    TRUE            reduce using rule 28 (Operandos -> LE .)


state 123

    (29) Operandos -> GE .

    LPAREN          reduce using rule 29 (Operandos -> GE .)
    VAR_ID          reduce using rule 29 (Operandos -> GE .)
    VAR_INT         reduce using rule 29 (Operandos -> GE .)
    VAR_DECIMAL     reduce using rule 29 (Operandos -> GE .)
    VAR_STRING      reduce using rule 29 (Operandos -> GE .)
    FALSE           reduce using rule 29 (Operandos -> GE .)
    TRUE            reduce using rule 29 (Operandos -> GE .)


state 124

    (30) Operandos -> EQ .

    LPAREN          reduce using rule 30 (Operandos -> EQ .)
    VAR_ID          reduce using rule 30 (Operandos -> EQ .)
    VAR_INT         reduce using rule 30 (Operandos -> EQ .)
    VAR_DECIMAL     reduce using rule 30 (Operandos -> EQ .)
    VAR_STRING      reduce using rule 30 (Operandos -> EQ .)
    FALSE           reduce using rule 30 (Operandos -> EQ .)
    TRUE            reduce using rule 30 (Operandos -> EQ .)


state 125

    (32) ExpK -> ExpT resuelve_termino .
    (33) ExpK -> ExpT resuelve_termino . pos_SUMRES push_operador_PilaOperadores ExpK
    (35) pos_SUMRES -> . PLUS
    (36) pos_SUMRES -> . MINUS

    LT              reduce using rule 32 (ExpK -> ExpT resuelve_termino .)
    GT              reduce using rule 32 (ExpK -> ExpT resuelve_termino .)
    NE              reduce using rule 32 (ExpK -> ExpT resuelve_termino .)
    LE              reduce using rule 32 (ExpK -> ExpT resuelve_termino .)
    GE              reduce using rule 32 (ExpK -> ExpT resuelve_termino .)
    EQ              reduce using rule 32 (ExpK -> ExpT resuelve_termino .)
    SEMICOLON       reduce using rule 32 (ExpK -> ExpT resuelve_termino .)
    RPAREN          reduce using rule 32 (ExpK -> ExpT resuelve_termino .)
    COMMA           reduce using rule 32 (ExpK -> ExpT resuelve_termino .)
    SRBRACKET       reduce using rule 32 (ExpK -> ExpT resuelve_termino .)
    PLUS            shift and go to state 162
    MINUS           shift and go to state 163

    pos_SUMRES                     shift and go to state 161

state 126

    (37) ExpT -> ExpF resuelve_factor .
    (38) ExpT -> ExpF resuelve_factor . pos_MULTDIV push_operador_PilaOperadores ExpT
    (40) pos_MULTDIV -> . MULT
    (41) pos_MULTDIV -> . DIV

    PLUS            reduce using rule 37 (ExpT -> ExpF resuelve_factor .)
    MINUS           reduce using rule 37 (ExpT -> ExpF resuelve_factor .)
    LT              reduce using rule 37 (ExpT -> ExpF resuelve_factor .)
    GT              reduce using rule 37 (ExpT -> ExpF resuelve_factor .)
    NE              reduce using rule 37 (ExpT -> ExpF resuelve_factor .)
    LE              reduce using rule 37 (ExpT -> ExpF resuelve_factor .)
    GE              reduce using rule 37 (ExpT -> ExpF resuelve_factor .)
    EQ              reduce using rule 37 (ExpT -> ExpF resuelve_factor .)
    SEMICOLON       reduce using rule 37 (ExpT -> ExpF resuelve_factor .)
    RPAREN          reduce using rule 37 (ExpT -> ExpF resuelve_factor .)
    COMMA           reduce using rule 37 (ExpT -> ExpF resuelve_factor .)
    SRBRACKET       reduce using rule 37 (ExpT -> ExpF resuelve_factor .)
    MULT            shift and go to state 165
    DIV             shift and go to state 166

    pos_MULTDIV                    shift and go to state 164

state 127

    (43) ExpF -> LPAREN agrega_falso . ExpI RPAREN quita_falso
    (23) ExpI -> . ExpK resuelve_operadores_relacionales
    (24) ExpI -> . ExpK Operandos push_operador_PilaOperadores ExpK resuelve_operadores_relacionales
    (32) ExpK -> . ExpT resuelve_termino
    (33) ExpK -> . ExpT resuelve_termino pos_SUMRES push_operador_PilaOperadores ExpK
    (37) ExpT -> . ExpF resuelve_factor
    (38) ExpT -> . ExpF resuelve_factor pos_MULTDIV push_operador_PilaOperadores ExpT
    (42) ExpF -> . VAR_CTE
    (43) ExpF -> . LPAREN agrega_falso ExpI RPAREN quita_falso
    (44) ExpF -> . VAR_ID push_var_PilaOperandos pos_arreglo
    (45) ExpF -> . llama_funcion
    (46) VAR_CTE -> . VAR_INT push_int_PilaOperandos
    (47) VAR_CTE -> . VAR_DECIMAL push_decimal_PilaOperandos
    (48) VAR_CTE -> . VAR_STRING push_string_PilaOperandos
    (49) VAR_CTE -> . VAR_BOOL push_bool_PilaOperandos
    (58) llama_funcion -> . VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion guarda_resultado_funcion
    (50) VAR_BOOL -> . FALSE
    (51) VAR_BOOL -> . TRUE

    LPAREN          shift and go to state 95
    VAR_ID          shift and go to state 96
    VAR_INT         shift and go to state 98
    VAR_DECIMAL     shift and go to state 99
    VAR_STRING      shift and go to state 100
    FALSE           shift and go to state 102
    TRUE            shift and go to state 103

    ExpI                           shift and go to state 167
    ExpK                           shift and go to state 91
    ExpT                           shift and go to state 92
    ExpF                           shift and go to state 93
    VAR_CTE                        shift and go to state 94
    llama_funcion                  shift and go to state 97
    VAR_BOOL                       shift and go to state 101

state 128

    (44) ExpF -> VAR_ID push_var_PilaOperandos . pos_arreglo
    (67) pos_arreglo -> . SLBRACKET checa_var_arr agrega_falso ExpI crea_cuadruplo_ver quita_falso SRBRACKET
    (68) pos_arreglo -> .

    SLBRACKET       shift and go to state 135
    MULT            reduce using rule 68 (pos_arreglo -> .)
    DIV             reduce using rule 68 (pos_arreglo -> .)
    PLUS            reduce using rule 68 (pos_arreglo -> .)
    MINUS           reduce using rule 68 (pos_arreglo -> .)
    LT              reduce using rule 68 (pos_arreglo -> .)
    GT              reduce using rule 68 (pos_arreglo -> .)
    NE              reduce using rule 68 (pos_arreglo -> .)
    LE              reduce using rule 68 (pos_arreglo -> .)
    GE              reduce using rule 68 (pos_arreglo -> .)
    EQ              reduce using rule 68 (pos_arreglo -> .)
    SEMICOLON       reduce using rule 68 (pos_arreglo -> .)
    RPAREN          reduce using rule 68 (pos_arreglo -> .)
    COMMA           reduce using rule 68 (pos_arreglo -> .)
    SRBRACKET       reduce using rule 68 (pos_arreglo -> .)

    pos_arreglo                    shift and go to state 168

state 129

    (58) llama_funcion -> VAR_ID LPAREN . agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion guarda_resultado_funcion
    (56) agrega_falso -> .

    LPAREN          reduce using rule 56 (agrega_falso -> .)
    VAR_ID          reduce using rule 56 (agrega_falso -> .)
    VAR_INT         reduce using rule 56 (agrega_falso -> .)
    VAR_DECIMAL     reduce using rule 56 (agrega_falso -> .)
    VAR_STRING      reduce using rule 56 (agrega_falso -> .)
    FALSE           reduce using rule 56 (agrega_falso -> .)
    TRUE            reduce using rule 56 (agrega_falso -> .)
    RPAREN          reduce using rule 56 (agrega_falso -> .)

    agrega_falso                   shift and go to state 169

state 130

    (46) VAR_CTE -> VAR_INT push_int_PilaOperandos .

    MULT            reduce using rule 46 (VAR_CTE -> VAR_INT push_int_PilaOperandos .)
    DIV             reduce using rule 46 (VAR_CTE -> VAR_INT push_int_PilaOperandos .)
    PLUS            reduce using rule 46 (VAR_CTE -> VAR_INT push_int_PilaOperandos .)
    MINUS           reduce using rule 46 (VAR_CTE -> VAR_INT push_int_PilaOperandos .)
    LT              reduce using rule 46 (VAR_CTE -> VAR_INT push_int_PilaOperandos .)
    GT              reduce using rule 46 (VAR_CTE -> VAR_INT push_int_PilaOperandos .)
    NE              reduce using rule 46 (VAR_CTE -> VAR_INT push_int_PilaOperandos .)
    LE              reduce using rule 46 (VAR_CTE -> VAR_INT push_int_PilaOperandos .)
    GE              reduce using rule 46 (VAR_CTE -> VAR_INT push_int_PilaOperandos .)
    EQ              reduce using rule 46 (VAR_CTE -> VAR_INT push_int_PilaOperandos .)
    SEMICOLON       reduce using rule 46 (VAR_CTE -> VAR_INT push_int_PilaOperandos .)
    RPAREN          reduce using rule 46 (VAR_CTE -> VAR_INT push_int_PilaOperandos .)
    COMMA           reduce using rule 46 (VAR_CTE -> VAR_INT push_int_PilaOperandos .)
    SRBRACKET       reduce using rule 46 (VAR_CTE -> VAR_INT push_int_PilaOperandos .)


state 131

    (47) VAR_CTE -> VAR_DECIMAL push_decimal_PilaOperandos .

    MULT            reduce using rule 47 (VAR_CTE -> VAR_DECIMAL push_decimal_PilaOperandos .)
    DIV             reduce using rule 47 (VAR_CTE -> VAR_DECIMAL push_decimal_PilaOperandos .)
    PLUS            reduce using rule 47 (VAR_CTE -> VAR_DECIMAL push_decimal_PilaOperandos .)
    MINUS           reduce using rule 47 (VAR_CTE -> VAR_DECIMAL push_decimal_PilaOperandos .)
    LT              reduce using rule 47 (VAR_CTE -> VAR_DECIMAL push_decimal_PilaOperandos .)
    GT              reduce using rule 47 (VAR_CTE -> VAR_DECIMAL push_decimal_PilaOperandos .)
    NE              reduce using rule 47 (VAR_CTE -> VAR_DECIMAL push_decimal_PilaOperandos .)
    LE              reduce using rule 47 (VAR_CTE -> VAR_DECIMAL push_decimal_PilaOperandos .)
    GE              reduce using rule 47 (VAR_CTE -> VAR_DECIMAL push_decimal_PilaOperandos .)
    EQ              reduce using rule 47 (VAR_CTE -> VAR_DECIMAL push_decimal_PilaOperandos .)
    SEMICOLON       reduce using rule 47 (VAR_CTE -> VAR_DECIMAL push_decimal_PilaOperandos .)
    RPAREN          reduce using rule 47 (VAR_CTE -> VAR_DECIMAL push_decimal_PilaOperandos .)
    COMMA           reduce using rule 47 (VAR_CTE -> VAR_DECIMAL push_decimal_PilaOperandos .)
    SRBRACKET       reduce using rule 47 (VAR_CTE -> VAR_DECIMAL push_decimal_PilaOperandos .)


state 132

    (48) VAR_CTE -> VAR_STRING push_string_PilaOperandos .

    MULT            reduce using rule 48 (VAR_CTE -> VAR_STRING push_string_PilaOperandos .)
    DIV             reduce using rule 48 (VAR_CTE -> VAR_STRING push_string_PilaOperandos .)
    PLUS            reduce using rule 48 (VAR_CTE -> VAR_STRING push_string_PilaOperandos .)
    MINUS           reduce using rule 48 (VAR_CTE -> VAR_STRING push_string_PilaOperandos .)
    LT              reduce using rule 48 (VAR_CTE -> VAR_STRING push_string_PilaOperandos .)
    GT              reduce using rule 48 (VAR_CTE -> VAR_STRING push_string_PilaOperandos .)
    NE              reduce using rule 48 (VAR_CTE -> VAR_STRING push_string_PilaOperandos .)
    LE              reduce using rule 48 (VAR_CTE -> VAR_STRING push_string_PilaOperandos .)
    GE              reduce using rule 48 (VAR_CTE -> VAR_STRING push_string_PilaOperandos .)
    EQ              reduce using rule 48 (VAR_CTE -> VAR_STRING push_string_PilaOperandos .)
    SEMICOLON       reduce using rule 48 (VAR_CTE -> VAR_STRING push_string_PilaOperandos .)
    RPAREN          reduce using rule 48 (VAR_CTE -> VAR_STRING push_string_PilaOperandos .)
    COMMA           reduce using rule 48 (VAR_CTE -> VAR_STRING push_string_PilaOperandos .)
    SRBRACKET       reduce using rule 48 (VAR_CTE -> VAR_STRING push_string_PilaOperandos .)


state 133

    (49) VAR_CTE -> VAR_BOOL push_bool_PilaOperandos .

    MULT            reduce using rule 49 (VAR_CTE -> VAR_BOOL push_bool_PilaOperandos .)
    DIV             reduce using rule 49 (VAR_CTE -> VAR_BOOL push_bool_PilaOperandos .)
    PLUS            reduce using rule 49 (VAR_CTE -> VAR_BOOL push_bool_PilaOperandos .)
    MINUS           reduce using rule 49 (VAR_CTE -> VAR_BOOL push_bool_PilaOperandos .)
    LT              reduce using rule 49 (VAR_CTE -> VAR_BOOL push_bool_PilaOperandos .)
    GT              reduce using rule 49 (VAR_CTE -> VAR_BOOL push_bool_PilaOperandos .)
    NE              reduce using rule 49 (VAR_CTE -> VAR_BOOL push_bool_PilaOperandos .)
    LE              reduce using rule 49 (VAR_CTE -> VAR_BOOL push_bool_PilaOperandos .)
    GE              reduce using rule 49 (VAR_CTE -> VAR_BOOL push_bool_PilaOperandos .)
    EQ              reduce using rule 49 (VAR_CTE -> VAR_BOOL push_bool_PilaOperandos .)
    SEMICOLON       reduce using rule 49 (VAR_CTE -> VAR_BOOL push_bool_PilaOperandos .)
    RPAREN          reduce using rule 49 (VAR_CTE -> VAR_BOOL push_bool_PilaOperandos .)
    COMMA           reduce using rule 49 (VAR_CTE -> VAR_BOOL push_bool_PilaOperandos .)
    SRBRACKET       reduce using rule 49 (VAR_CTE -> VAR_BOOL push_bool_PilaOperandos .)


state 134

    (17) Asignacion -> VAR_ID push_var_PilaOperandos pos_arreglo . ASSIGN push_operador_PilaOperadores ExpI SEMICOLON resuelve_asignacion
    (18) Asignacion -> VAR_ID push_var_PilaOperandos pos_arreglo . ASSIGN push_operador_PilaOperadores READ LPAREN ExpI RPAREN crea_cuadruplo_read SEMICOLON resuelve_asignacion

    ASSIGN          shift and go to state 170


state 135

    (67) pos_arreglo -> SLBRACKET . checa_var_arr agrega_falso ExpI crea_cuadruplo_ver quita_falso SRBRACKET
    (70) checa_var_arr -> .

    LPAREN          reduce using rule 70 (checa_var_arr -> .)
    VAR_ID          reduce using rule 70 (checa_var_arr -> .)
    VAR_INT         reduce using rule 70 (checa_var_arr -> .)
    VAR_DECIMAL     reduce using rule 70 (checa_var_arr -> .)
    VAR_STRING      reduce using rule 70 (checa_var_arr -> .)
    FALSE           reduce using rule 70 (checa_var_arr -> .)
    TRUE            reduce using rule 70 (checa_var_arr -> .)

    checa_var_arr                  shift and go to state 171

state 136

    (100) Llamada_Func -> VAR_ID LPAREN agrega_falso . checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion SEMICOLON checa_void
    (59) checa_funcion_si_existe -> .

    LPAREN          reduce using rule 59 (checa_funcion_si_existe -> .)
    VAR_ID          reduce using rule 59 (checa_funcion_si_existe -> .)
    VAR_INT         reduce using rule 59 (checa_funcion_si_existe -> .)
    VAR_DECIMAL     reduce using rule 59 (checa_funcion_si_existe -> .)
    VAR_STRING      reduce using rule 59 (checa_funcion_si_existe -> .)
    FALSE           reduce using rule 59 (checa_funcion_si_existe -> .)
    TRUE            reduce using rule 59 (checa_funcion_si_existe -> .)
    RPAREN          reduce using rule 59 (checa_funcion_si_existe -> .)

    checa_funcion_si_existe        shift and go to state 172

state 137

    (98) Print -> PRINT LPAREN ExpI . RPAREN SEMICOLON crea_print

    RPAREN          shift and go to state 173


state 138

    (110) For -> FOR LPAREN VAR_ID . ASSIGN ExpI SEMICOLON ExpI SEMICOLON VAR_ID Exp_ciclo RPAREN LBRACKET reg_brack RBRACKET

    ASSIGN          shift and go to state 174


state 139

    (105) While -> WHILE guarda_numero_cuadruplo LPAREN . ExpI RPAREN crea_GOTOF LBRACKET reg_brack RBRACKET regresa_inicio_while
    (23) ExpI -> . ExpK resuelve_operadores_relacionales
    (24) ExpI -> . ExpK Operandos push_operador_PilaOperadores ExpK resuelve_operadores_relacionales
    (32) ExpK -> . ExpT resuelve_termino
    (33) ExpK -> . ExpT resuelve_termino pos_SUMRES push_operador_PilaOperadores ExpK
    (37) ExpT -> . ExpF resuelve_factor
    (38) ExpT -> . ExpF resuelve_factor pos_MULTDIV push_operador_PilaOperadores ExpT
    (42) ExpF -> . VAR_CTE
    (43) ExpF -> . LPAREN agrega_falso ExpI RPAREN quita_falso
    (44) ExpF -> . VAR_ID push_var_PilaOperandos pos_arreglo
    (45) ExpF -> . llama_funcion
    (46) VAR_CTE -> . VAR_INT push_int_PilaOperandos
    (47) VAR_CTE -> . VAR_DECIMAL push_decimal_PilaOperandos
    (48) VAR_CTE -> . VAR_STRING push_string_PilaOperandos
    (49) VAR_CTE -> . VAR_BOOL push_bool_PilaOperandos
    (58) llama_funcion -> . VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion guarda_resultado_funcion
    (50) VAR_BOOL -> . FALSE
    (51) VAR_BOOL -> . TRUE

    LPAREN          shift and go to state 95
    VAR_ID          shift and go to state 96
    VAR_INT         shift and go to state 98
    VAR_DECIMAL     shift and go to state 99
    VAR_STRING      shift and go to state 100
    FALSE           shift and go to state 102
    TRUE            shift and go to state 103

    ExpI                           shift and go to state 175
    ExpK                           shift and go to state 91
    ExpT                           shift and go to state 92
    ExpF                           shift and go to state 93
    VAR_CTE                        shift and go to state 94
    llama_funcion                  shift and go to state 97
    VAR_BOOL                       shift and go to state 101

state 140

    (108) DoWhile -> DO guarda_numero_cuadruplo LBRACKET . reg_brack RBRACKET WHILE LPAREN ExpI RPAREN SEMICOLON crea_GOTOV
    (81) reg_brack -> . Estatutos reg_brack
    (82) reg_brack -> .
    (83) Estatutos -> . Condicion
    (84) Estatutos -> . Ciclo
    (85) Estatutos -> . Return
    (86) Estatutos -> . Asignacion
    (87) Estatutos -> . Print
    (88) Estatutos -> . Llamada_Func
    (89) Estatutos -> . Turtle
    (90) Condicion -> . IF LPAREN ExpI RPAREN crea_GOTOF LBRACKET reg_brack RBRACKET pos_else llena_cuadruplo_if
    (102) Ciclo -> . For
    (103) Ciclo -> . While
    (104) Ciclo -> . DoWhile
    (96) Return -> . RETURN ExpI SEMICOLON resuelve_return
    (17) Asignacion -> . VAR_ID push_var_PilaOperandos pos_arreglo ASSIGN push_operador_PilaOperadores ExpI SEMICOLON resuelve_asignacion
    (18) Asignacion -> . VAR_ID push_var_PilaOperandos pos_arreglo ASSIGN push_operador_PilaOperadores READ LPAREN ExpI RPAREN crea_cuadruplo_read SEMICOLON resuelve_asignacion
    (98) Print -> . PRINT LPAREN ExpI RPAREN SEMICOLON crea_print
    (100) Llamada_Func -> . VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion SEMICOLON checa_void
    (119) Turtle -> . Forward
    (120) Turtle -> . Right
    (121) Turtle -> . Left
    (122) Turtle -> . Circle
    (123) Turtle -> . Position
    (124) Turtle -> . IniciaTurtle
    (125) Turtle -> . TerminaTurtle
    (126) Turtle -> . iniciaFill
    (127) Turtle -> . Square
    (128) Turtle -> . Rectangle
    (129) Turtle -> . Triangle
    (130) Turtle -> . terminaFill
    (131) Turtle -> . colorFill
    (132) Turtle -> . colorPen
    (110) For -> . FOR LPAREN VAR_ID ASSIGN ExpI SEMICOLON ExpI SEMICOLON VAR_ID Exp_ciclo RPAREN LBRACKET reg_brack RBRACKET
    (105) While -> . WHILE guarda_numero_cuadruplo LPAREN ExpI RPAREN crea_GOTOF LBRACKET reg_brack RBRACKET regresa_inicio_while
    (108) DoWhile -> . DO guarda_numero_cuadruplo LBRACKET reg_brack RBRACKET WHILE LPAREN ExpI RPAREN SEMICOLON crea_GOTOV
    (133) Forward -> . TUR POINT FORWARD LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_forward
    (135) Right -> . TUR POINT RIGHT LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_right
    (137) Left -> . TUR POINT LEFT LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_left
    (139) Circle -> . TUR POINT CIRCLE LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_circle
    (155) Position -> . TUR POINT POS LPAREN ExpI COMMA ExpI RPAREN SEMICOLON crea_cuadruplo_pos
    (157) IniciaTurtle -> . TUR POINT TURTLE LPAREN RPAREN SEMICOLON crea_cuadruplo_inicia
    (159) TerminaTurtle -> . TUR POINT FINISH LPAREN RPAREN SEMICOLON crea_cuadruplo_termina
    (147) iniciaFill -> . TUR POINT BEGIN_FILL LPAREN RPAREN SEMICOLON crea_cuadruplo_iniciafill
    (141) Square -> . TUR POINT SQUARE LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_square
    (143) Rectangle -> . TUR POINT RECTANGLE LPAREN ExpI COMMA ExpI RPAREN SEMICOLON crea_cuadruplo_rectangle
    (145) Triangle -> . TUR POINT TRIANGLE LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_triangle
    (149) terminaFill -> . TUR POINT END_FILL LPAREN RPAREN SEMICOLON crea_cuadruplo_terminafill
    (151) colorFill -> . TUR POINT COLOR LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_colorFill
    (153) colorPen -> . TUR POINT PENCOLOR LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_colorPen

    RBRACKET        reduce using rule 82 (reg_brack -> .)
    IF              shift and go to state 59
    RETURN          shift and go to state 63
    VAR_ID          shift and go to state 64
    PRINT           shift and go to state 65
    FOR             shift and go to state 80
    WHILE           shift and go to state 81
    DO              shift and go to state 82
    TUR             shift and go to state 83

    reg_brack                      shift and go to state 176
    Estatutos                      shift and go to state 51
    Condicion                      shift and go to state 52
    Ciclo                          shift and go to state 53
    Return                         shift and go to state 54
    Asignacion                     shift and go to state 55
    Print                          shift and go to state 56
    Llamada_Func                   shift and go to state 57
    Turtle                         shift and go to state 58
    For                            shift and go to state 60
    While                          shift and go to state 61
    DoWhile                        shift and go to state 62
    Forward                        shift and go to state 66
    Right                          shift and go to state 67
    Left                           shift and go to state 68
    Circle                         shift and go to state 69
    Position                       shift and go to state 70
    IniciaTurtle                   shift and go to state 71
    TerminaTurtle                  shift and go to state 72
    iniciaFill                     shift and go to state 73
    Square                         shift and go to state 74
    Rectangle                      shift and go to state 75
    Triangle                       shift and go to state 76
    terminaFill                    shift and go to state 77
    colorFill                      shift and go to state 78
    colorPen                       shift and go to state 79

state 141

    (133) Forward -> TUR POINT FORWARD . LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_forward

    LPAREN          shift and go to state 177


state 142

    (135) Right -> TUR POINT RIGHT . LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_right

    LPAREN          shift and go to state 178


state 143

    (137) Left -> TUR POINT LEFT . LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_left

    LPAREN          shift and go to state 179


state 144

    (139) Circle -> TUR POINT CIRCLE . LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_circle

    LPAREN          shift and go to state 180


state 145

    (155) Position -> TUR POINT POS . LPAREN ExpI COMMA ExpI RPAREN SEMICOLON crea_cuadruplo_pos

    LPAREN          shift and go to state 181


state 146

    (157) IniciaTurtle -> TUR POINT TURTLE . LPAREN RPAREN SEMICOLON crea_cuadruplo_inicia

    LPAREN          shift and go to state 182


state 147

    (159) TerminaTurtle -> TUR POINT FINISH . LPAREN RPAREN SEMICOLON crea_cuadruplo_termina

    LPAREN          shift and go to state 183


state 148

    (147) iniciaFill -> TUR POINT BEGIN_FILL . LPAREN RPAREN SEMICOLON crea_cuadruplo_iniciafill

    LPAREN          shift and go to state 184


state 149

    (141) Square -> TUR POINT SQUARE . LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_square

    LPAREN          shift and go to state 185


state 150

    (143) Rectangle -> TUR POINT RECTANGLE . LPAREN ExpI COMMA ExpI RPAREN SEMICOLON crea_cuadruplo_rectangle

    LPAREN          shift and go to state 186


state 151

    (145) Triangle -> TUR POINT TRIANGLE . LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_triangle

    LPAREN          shift and go to state 187


state 152

    (149) terminaFill -> TUR POINT END_FILL . LPAREN RPAREN SEMICOLON crea_cuadruplo_terminafill

    LPAREN          shift and go to state 188


state 153

    (151) colorFill -> TUR POINT COLOR . LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_colorFill

    LPAREN          shift and go to state 189


state 154

    (153) colorPen -> TUR POINT PENCOLOR . LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_colorPen

    LPAREN          shift and go to state 190


state 155

    (71) funciones -> FUNC tipo_funcion VAR_ID LPAREN param RPAREN agrega_funcion LBRACKET Vars reg_brack . RBRACKET fin_func_cuad funciones

    RBRACKET        shift and go to state 191


state 156

    (77) pos_commaf -> COMMA Tipo VAR_ID pos_commaf .

    RPAREN          reduce using rule 77 (pos_commaf -> COMMA Tipo VAR_ID pos_commaf .)


state 157

    (117) Main -> MAIN agrega_main_funcion LPAREN RPAREN LBRACKET Vars reg_brack RET ZERO SEMICOLON . RBRACKET

    RBRACKET        shift and go to state 192


state 158

    (90) Condicion -> IF LPAREN ExpI RPAREN . crea_GOTOF LBRACKET reg_brack RBRACKET pos_else llena_cuadruplo_if
    (91) crea_GOTOF -> .

    LBRACKET        reduce using rule 91 (crea_GOTOF -> .)

    crea_GOTOF                     shift and go to state 193

state 159

    (96) Return -> RETURN ExpI SEMICOLON resuelve_return .

    IF              reduce using rule 96 (Return -> RETURN ExpI SEMICOLON resuelve_return .)
    RETURN          reduce using rule 96 (Return -> RETURN ExpI SEMICOLON resuelve_return .)
    VAR_ID          reduce using rule 96 (Return -> RETURN ExpI SEMICOLON resuelve_return .)
    PRINT           reduce using rule 96 (Return -> RETURN ExpI SEMICOLON resuelve_return .)
    FOR             reduce using rule 96 (Return -> RETURN ExpI SEMICOLON resuelve_return .)
    WHILE           reduce using rule 96 (Return -> RETURN ExpI SEMICOLON resuelve_return .)
    DO              reduce using rule 96 (Return -> RETURN ExpI SEMICOLON resuelve_return .)
    TUR             reduce using rule 96 (Return -> RETURN ExpI SEMICOLON resuelve_return .)
    RET             reduce using rule 96 (Return -> RETURN ExpI SEMICOLON resuelve_return .)
    RBRACKET        reduce using rule 96 (Return -> RETURN ExpI SEMICOLON resuelve_return .)


state 160

    (24) ExpI -> ExpK Operandos push_operador_PilaOperadores . ExpK resuelve_operadores_relacionales
    (32) ExpK -> . ExpT resuelve_termino
    (33) ExpK -> . ExpT resuelve_termino pos_SUMRES push_operador_PilaOperadores ExpK
    (37) ExpT -> . ExpF resuelve_factor
    (38) ExpT -> . ExpF resuelve_factor pos_MULTDIV push_operador_PilaOperadores ExpT
    (42) ExpF -> . VAR_CTE
    (43) ExpF -> . LPAREN agrega_falso ExpI RPAREN quita_falso
    (44) ExpF -> . VAR_ID push_var_PilaOperandos pos_arreglo
    (45) ExpF -> . llama_funcion
    (46) VAR_CTE -> . VAR_INT push_int_PilaOperandos
    (47) VAR_CTE -> . VAR_DECIMAL push_decimal_PilaOperandos
    (48) VAR_CTE -> . VAR_STRING push_string_PilaOperandos
    (49) VAR_CTE -> . VAR_BOOL push_bool_PilaOperandos
    (58) llama_funcion -> . VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion guarda_resultado_funcion
    (50) VAR_BOOL -> . FALSE
    (51) VAR_BOOL -> . TRUE

    LPAREN          shift and go to state 95
    VAR_ID          shift and go to state 96
    VAR_INT         shift and go to state 98
    VAR_DECIMAL     shift and go to state 99
    VAR_STRING      shift and go to state 100
    FALSE           shift and go to state 102
    TRUE            shift and go to state 103

    ExpK                           shift and go to state 194
    ExpT                           shift and go to state 92
    ExpF                           shift and go to state 93
    VAR_CTE                        shift and go to state 94
    llama_funcion                  shift and go to state 97
    VAR_BOOL                       shift and go to state 101

state 161

    (33) ExpK -> ExpT resuelve_termino pos_SUMRES . push_operador_PilaOperadores ExpK
    (21) push_operador_PilaOperadores -> .

    LPAREN          reduce using rule 21 (push_operador_PilaOperadores -> .)
    VAR_ID          reduce using rule 21 (push_operador_PilaOperadores -> .)
    VAR_INT         reduce using rule 21 (push_operador_PilaOperadores -> .)
    VAR_DECIMAL     reduce using rule 21 (push_operador_PilaOperadores -> .)
    VAR_STRING      reduce using rule 21 (push_operador_PilaOperadores -> .)
    FALSE           reduce using rule 21 (push_operador_PilaOperadores -> .)
    TRUE            reduce using rule 21 (push_operador_PilaOperadores -> .)

    push_operador_PilaOperadores   shift and go to state 195

state 162

    (35) pos_SUMRES -> PLUS .

    LPAREN          reduce using rule 35 (pos_SUMRES -> PLUS .)
    VAR_ID          reduce using rule 35 (pos_SUMRES -> PLUS .)
    VAR_INT         reduce using rule 35 (pos_SUMRES -> PLUS .)
    VAR_DECIMAL     reduce using rule 35 (pos_SUMRES -> PLUS .)
    VAR_STRING      reduce using rule 35 (pos_SUMRES -> PLUS .)
    FALSE           reduce using rule 35 (pos_SUMRES -> PLUS .)
    TRUE            reduce using rule 35 (pos_SUMRES -> PLUS .)


state 163

    (36) pos_SUMRES -> MINUS .

    LPAREN          reduce using rule 36 (pos_SUMRES -> MINUS .)
    VAR_ID          reduce using rule 36 (pos_SUMRES -> MINUS .)
    VAR_INT         reduce using rule 36 (pos_SUMRES -> MINUS .)
    VAR_DECIMAL     reduce using rule 36 (pos_SUMRES -> MINUS .)
    VAR_STRING      reduce using rule 36 (pos_SUMRES -> MINUS .)
    FALSE           reduce using rule 36 (pos_SUMRES -> MINUS .)
    TRUE            reduce using rule 36 (pos_SUMRES -> MINUS .)


state 164

    (38) ExpT -> ExpF resuelve_factor pos_MULTDIV . push_operador_PilaOperadores ExpT
    (21) push_operador_PilaOperadores -> .

    LPAREN          reduce using rule 21 (push_operador_PilaOperadores -> .)
    VAR_ID          reduce using rule 21 (push_operador_PilaOperadores -> .)
    VAR_INT         reduce using rule 21 (push_operador_PilaOperadores -> .)
    VAR_DECIMAL     reduce using rule 21 (push_operador_PilaOperadores -> .)
    VAR_STRING      reduce using rule 21 (push_operador_PilaOperadores -> .)
    FALSE           reduce using rule 21 (push_operador_PilaOperadores -> .)
    TRUE            reduce using rule 21 (push_operador_PilaOperadores -> .)

    push_operador_PilaOperadores   shift and go to state 196

state 165

    (40) pos_MULTDIV -> MULT .

    LPAREN          reduce using rule 40 (pos_MULTDIV -> MULT .)
    VAR_ID          reduce using rule 40 (pos_MULTDIV -> MULT .)
    VAR_INT         reduce using rule 40 (pos_MULTDIV -> MULT .)
    VAR_DECIMAL     reduce using rule 40 (pos_MULTDIV -> MULT .)
    VAR_STRING      reduce using rule 40 (pos_MULTDIV -> MULT .)
    FALSE           reduce using rule 40 (pos_MULTDIV -> MULT .)
    TRUE            reduce using rule 40 (pos_MULTDIV -> MULT .)


state 166

    (41) pos_MULTDIV -> DIV .

    LPAREN          reduce using rule 41 (pos_MULTDIV -> DIV .)
    VAR_ID          reduce using rule 41 (pos_MULTDIV -> DIV .)
    VAR_INT         reduce using rule 41 (pos_MULTDIV -> DIV .)
    VAR_DECIMAL     reduce using rule 41 (pos_MULTDIV -> DIV .)
    VAR_STRING      reduce using rule 41 (pos_MULTDIV -> DIV .)
    FALSE           reduce using rule 41 (pos_MULTDIV -> DIV .)
    TRUE            reduce using rule 41 (pos_MULTDIV -> DIV .)


state 167

    (43) ExpF -> LPAREN agrega_falso ExpI . RPAREN quita_falso

    RPAREN          shift and go to state 197


state 168

    (44) ExpF -> VAR_ID push_var_PilaOperandos pos_arreglo .

    MULT            reduce using rule 44 (ExpF -> VAR_ID push_var_PilaOperandos pos_arreglo .)
    DIV             reduce using rule 44 (ExpF -> VAR_ID push_var_PilaOperandos pos_arreglo .)
    PLUS            reduce using rule 44 (ExpF -> VAR_ID push_var_PilaOperandos pos_arreglo .)
    MINUS           reduce using rule 44 (ExpF -> VAR_ID push_var_PilaOperandos pos_arreglo .)
    LT              reduce using rule 44 (ExpF -> VAR_ID push_var_PilaOperandos pos_arreglo .)
    GT              reduce using rule 44 (ExpF -> VAR_ID push_var_PilaOperandos pos_arreglo .)
    NE              reduce using rule 44 (ExpF -> VAR_ID push_var_PilaOperandos pos_arreglo .)
    LE              reduce using rule 44 (ExpF -> VAR_ID push_var_PilaOperandos pos_arreglo .)
    GE              reduce using rule 44 (ExpF -> VAR_ID push_var_PilaOperandos pos_arreglo .)
    EQ              reduce using rule 44 (ExpF -> VAR_ID push_var_PilaOperandos pos_arreglo .)
    SEMICOLON       reduce using rule 44 (ExpF -> VAR_ID push_var_PilaOperandos pos_arreglo .)
    RPAREN          reduce using rule 44 (ExpF -> VAR_ID push_var_PilaOperandos pos_arreglo .)
    COMMA           reduce using rule 44 (ExpF -> VAR_ID push_var_PilaOperandos pos_arreglo .)
    SRBRACKET       reduce using rule 44 (ExpF -> VAR_ID push_var_PilaOperandos pos_arreglo .)


state 169

    (58) llama_funcion -> VAR_ID LPAREN agrega_falso . checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion guarda_resultado_funcion
    (59) checa_funcion_si_existe -> .

    LPAREN          reduce using rule 59 (checa_funcion_si_existe -> .)
    VAR_ID          reduce using rule 59 (checa_funcion_si_existe -> .)
    VAR_INT         reduce using rule 59 (checa_funcion_si_existe -> .)
    VAR_DECIMAL     reduce using rule 59 (checa_funcion_si_existe -> .)
    VAR_STRING      reduce using rule 59 (checa_funcion_si_existe -> .)
    FALSE           reduce using rule 59 (checa_funcion_si_existe -> .)
    TRUE            reduce using rule 59 (checa_funcion_si_existe -> .)
    RPAREN          reduce using rule 59 (checa_funcion_si_existe -> .)

    checa_funcion_si_existe        shift and go to state 198

state 170

    (17) Asignacion -> VAR_ID push_var_PilaOperandos pos_arreglo ASSIGN . push_operador_PilaOperadores ExpI SEMICOLON resuelve_asignacion
    (18) Asignacion -> VAR_ID push_var_PilaOperandos pos_arreglo ASSIGN . push_operador_PilaOperadores READ LPAREN ExpI RPAREN crea_cuadruplo_read SEMICOLON resuelve_asignacion
    (21) push_operador_PilaOperadores -> .

    READ            reduce using rule 21 (push_operador_PilaOperadores -> .)
    LPAREN          reduce using rule 21 (push_operador_PilaOperadores -> .)
    VAR_ID          reduce using rule 21 (push_operador_PilaOperadores -> .)
    VAR_INT         reduce using rule 21 (push_operador_PilaOperadores -> .)
    VAR_DECIMAL     reduce using rule 21 (push_operador_PilaOperadores -> .)
    VAR_STRING      reduce using rule 21 (push_operador_PilaOperadores -> .)
    FALSE           reduce using rule 21 (push_operador_PilaOperadores -> .)
    TRUE            reduce using rule 21 (push_operador_PilaOperadores -> .)

    push_operador_PilaOperadores   shift and go to state 199

state 171

    (67) pos_arreglo -> SLBRACKET checa_var_arr . agrega_falso ExpI crea_cuadruplo_ver quita_falso SRBRACKET
    (56) agrega_falso -> .

    LPAREN          reduce using rule 56 (agrega_falso -> .)
    VAR_ID          reduce using rule 56 (agrega_falso -> .)
    VAR_INT         reduce using rule 56 (agrega_falso -> .)
    VAR_DECIMAL     reduce using rule 56 (agrega_falso -> .)
    VAR_STRING      reduce using rule 56 (agrega_falso -> .)
    FALSE           reduce using rule 56 (agrega_falso -> .)
    TRUE            reduce using rule 56 (agrega_falso -> .)

    agrega_falso                   shift and go to state 200

state 172

    (100) Llamada_Func -> VAR_ID LPAREN agrega_falso checa_funcion_si_existe . argumentos RPAREN quita_falso resuelve_llamada_funcion SEMICOLON checa_void
    (60) argumentos -> . ExpI resuelve_argumentos mas_argumentos
    (61) argumentos -> .
    (23) ExpI -> . ExpK resuelve_operadores_relacionales
    (24) ExpI -> . ExpK Operandos push_operador_PilaOperadores ExpK resuelve_operadores_relacionales
    (32) ExpK -> . ExpT resuelve_termino
    (33) ExpK -> . ExpT resuelve_termino pos_SUMRES push_operador_PilaOperadores ExpK
    (37) ExpT -> . ExpF resuelve_factor
    (38) ExpT -> . ExpF resuelve_factor pos_MULTDIV push_operador_PilaOperadores ExpT
    (42) ExpF -> . VAR_CTE
    (43) ExpF -> . LPAREN agrega_falso ExpI RPAREN quita_falso
    (44) ExpF -> . VAR_ID push_var_PilaOperandos pos_arreglo
    (45) ExpF -> . llama_funcion
    (46) VAR_CTE -> . VAR_INT push_int_PilaOperandos
    (47) VAR_CTE -> . VAR_DECIMAL push_decimal_PilaOperandos
    (48) VAR_CTE -> . VAR_STRING push_string_PilaOperandos
    (49) VAR_CTE -> . VAR_BOOL push_bool_PilaOperandos
    (58) llama_funcion -> . VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion guarda_resultado_funcion
    (50) VAR_BOOL -> . FALSE
    (51) VAR_BOOL -> . TRUE

    RPAREN          reduce using rule 61 (argumentos -> .)
    LPAREN          shift and go to state 95
    VAR_ID          shift and go to state 96
    VAR_INT         shift and go to state 98
    VAR_DECIMAL     shift and go to state 99
    VAR_STRING      shift and go to state 100
    FALSE           shift and go to state 102
    TRUE            shift and go to state 103

    argumentos                     shift and go to state 201
    ExpI                           shift and go to state 202
    ExpK                           shift and go to state 91
    ExpT                           shift and go to state 92
    ExpF                           shift and go to state 93
    VAR_CTE                        shift and go to state 94
    llama_funcion                  shift and go to state 97
    VAR_BOOL                       shift and go to state 101

state 173

    (98) Print -> PRINT LPAREN ExpI RPAREN . SEMICOLON crea_print

    SEMICOLON       shift and go to state 203


state 174

    (110) For -> FOR LPAREN VAR_ID ASSIGN . ExpI SEMICOLON ExpI SEMICOLON VAR_ID Exp_ciclo RPAREN LBRACKET reg_brack RBRACKET
    (23) ExpI -> . ExpK resuelve_operadores_relacionales
    (24) ExpI -> . ExpK Operandos push_operador_PilaOperadores ExpK resuelve_operadores_relacionales
    (32) ExpK -> . ExpT resuelve_termino
    (33) ExpK -> . ExpT resuelve_termino pos_SUMRES push_operador_PilaOperadores ExpK
    (37) ExpT -> . ExpF resuelve_factor
    (38) ExpT -> . ExpF resuelve_factor pos_MULTDIV push_operador_PilaOperadores ExpT
    (42) ExpF -> . VAR_CTE
    (43) ExpF -> . LPAREN agrega_falso ExpI RPAREN quita_falso
    (44) ExpF -> . VAR_ID push_var_PilaOperandos pos_arreglo
    (45) ExpF -> . llama_funcion
    (46) VAR_CTE -> . VAR_INT push_int_PilaOperandos
    (47) VAR_CTE -> . VAR_DECIMAL push_decimal_PilaOperandos
    (48) VAR_CTE -> . VAR_STRING push_string_PilaOperandos
    (49) VAR_CTE -> . VAR_BOOL push_bool_PilaOperandos
    (58) llama_funcion -> . VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion guarda_resultado_funcion
    (50) VAR_BOOL -> . FALSE
    (51) VAR_BOOL -> . TRUE

    LPAREN          shift and go to state 95
    VAR_ID          shift and go to state 96
    VAR_INT         shift and go to state 98
    VAR_DECIMAL     shift and go to state 99
    VAR_STRING      shift and go to state 100
    FALSE           shift and go to state 102
    TRUE            shift and go to state 103

    ExpI                           shift and go to state 204
    ExpK                           shift and go to state 91
    ExpT                           shift and go to state 92
    ExpF                           shift and go to state 93
    VAR_CTE                        shift and go to state 94
    llama_funcion                  shift and go to state 97
    VAR_BOOL                       shift and go to state 101

state 175

    (105) While -> WHILE guarda_numero_cuadruplo LPAREN ExpI . RPAREN crea_GOTOF LBRACKET reg_brack RBRACKET regresa_inicio_while

    RPAREN          shift and go to state 205


state 176

    (108) DoWhile -> DO guarda_numero_cuadruplo LBRACKET reg_brack . RBRACKET WHILE LPAREN ExpI RPAREN SEMICOLON crea_GOTOV

    RBRACKET        shift and go to state 206


state 177

    (133) Forward -> TUR POINT FORWARD LPAREN . ExpI RPAREN SEMICOLON crea_cuadruplo_forward
    (23) ExpI -> . ExpK resuelve_operadores_relacionales
    (24) ExpI -> . ExpK Operandos push_operador_PilaOperadores ExpK resuelve_operadores_relacionales
    (32) ExpK -> . ExpT resuelve_termino
    (33) ExpK -> . ExpT resuelve_termino pos_SUMRES push_operador_PilaOperadores ExpK
    (37) ExpT -> . ExpF resuelve_factor
    (38) ExpT -> . ExpF resuelve_factor pos_MULTDIV push_operador_PilaOperadores ExpT
    (42) ExpF -> . VAR_CTE
    (43) ExpF -> . LPAREN agrega_falso ExpI RPAREN quita_falso
    (44) ExpF -> . VAR_ID push_var_PilaOperandos pos_arreglo
    (45) ExpF -> . llama_funcion
    (46) VAR_CTE -> . VAR_INT push_int_PilaOperandos
    (47) VAR_CTE -> . VAR_DECIMAL push_decimal_PilaOperandos
    (48) VAR_CTE -> . VAR_STRING push_string_PilaOperandos
    (49) VAR_CTE -> . VAR_BOOL push_bool_PilaOperandos
    (58) llama_funcion -> . VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion guarda_resultado_funcion
    (50) VAR_BOOL -> . FALSE
    (51) VAR_BOOL -> . TRUE

    LPAREN          shift and go to state 95
    VAR_ID          shift and go to state 96
    VAR_INT         shift and go to state 98
    VAR_DECIMAL     shift and go to state 99
    VAR_STRING      shift and go to state 100
    FALSE           shift and go to state 102
    TRUE            shift and go to state 103

    ExpI                           shift and go to state 207
    ExpK                           shift and go to state 91
    ExpT                           shift and go to state 92
    ExpF                           shift and go to state 93
    VAR_CTE                        shift and go to state 94
    llama_funcion                  shift and go to state 97
    VAR_BOOL                       shift and go to state 101

state 178

    (135) Right -> TUR POINT RIGHT LPAREN . ExpI RPAREN SEMICOLON crea_cuadruplo_right
    (23) ExpI -> . ExpK resuelve_operadores_relacionales
    (24) ExpI -> . ExpK Operandos push_operador_PilaOperadores ExpK resuelve_operadores_relacionales
    (32) ExpK -> . ExpT resuelve_termino
    (33) ExpK -> . ExpT resuelve_termino pos_SUMRES push_operador_PilaOperadores ExpK
    (37) ExpT -> . ExpF resuelve_factor
    (38) ExpT -> . ExpF resuelve_factor pos_MULTDIV push_operador_PilaOperadores ExpT
    (42) ExpF -> . VAR_CTE
    (43) ExpF -> . LPAREN agrega_falso ExpI RPAREN quita_falso
    (44) ExpF -> . VAR_ID push_var_PilaOperandos pos_arreglo
    (45) ExpF -> . llama_funcion
    (46) VAR_CTE -> . VAR_INT push_int_PilaOperandos
    (47) VAR_CTE -> . VAR_DECIMAL push_decimal_PilaOperandos
    (48) VAR_CTE -> . VAR_STRING push_string_PilaOperandos
    (49) VAR_CTE -> . VAR_BOOL push_bool_PilaOperandos
    (58) llama_funcion -> . VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion guarda_resultado_funcion
    (50) VAR_BOOL -> . FALSE
    (51) VAR_BOOL -> . TRUE

    LPAREN          shift and go to state 95
    VAR_ID          shift and go to state 96
    VAR_INT         shift and go to state 98
    VAR_DECIMAL     shift and go to state 99
    VAR_STRING      shift and go to state 100
    FALSE           shift and go to state 102
    TRUE            shift and go to state 103

    ExpI                           shift and go to state 208
    ExpK                           shift and go to state 91
    ExpT                           shift and go to state 92
    ExpF                           shift and go to state 93
    VAR_CTE                        shift and go to state 94
    llama_funcion                  shift and go to state 97
    VAR_BOOL                       shift and go to state 101

state 179

    (137) Left -> TUR POINT LEFT LPAREN . ExpI RPAREN SEMICOLON crea_cuadruplo_left
    (23) ExpI -> . ExpK resuelve_operadores_relacionales
    (24) ExpI -> . ExpK Operandos push_operador_PilaOperadores ExpK resuelve_operadores_relacionales
    (32) ExpK -> . ExpT resuelve_termino
    (33) ExpK -> . ExpT resuelve_termino pos_SUMRES push_operador_PilaOperadores ExpK
    (37) ExpT -> . ExpF resuelve_factor
    (38) ExpT -> . ExpF resuelve_factor pos_MULTDIV push_operador_PilaOperadores ExpT
    (42) ExpF -> . VAR_CTE
    (43) ExpF -> . LPAREN agrega_falso ExpI RPAREN quita_falso
    (44) ExpF -> . VAR_ID push_var_PilaOperandos pos_arreglo
    (45) ExpF -> . llama_funcion
    (46) VAR_CTE -> . VAR_INT push_int_PilaOperandos
    (47) VAR_CTE -> . VAR_DECIMAL push_decimal_PilaOperandos
    (48) VAR_CTE -> . VAR_STRING push_string_PilaOperandos
    (49) VAR_CTE -> . VAR_BOOL push_bool_PilaOperandos
    (58) llama_funcion -> . VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion guarda_resultado_funcion
    (50) VAR_BOOL -> . FALSE
    (51) VAR_BOOL -> . TRUE

    LPAREN          shift and go to state 95
    VAR_ID          shift and go to state 96
    VAR_INT         shift and go to state 98
    VAR_DECIMAL     shift and go to state 99
    VAR_STRING      shift and go to state 100
    FALSE           shift and go to state 102
    TRUE            shift and go to state 103

    ExpI                           shift and go to state 209
    ExpK                           shift and go to state 91
    ExpT                           shift and go to state 92
    ExpF                           shift and go to state 93
    VAR_CTE                        shift and go to state 94
    llama_funcion                  shift and go to state 97
    VAR_BOOL                       shift and go to state 101

state 180

    (139) Circle -> TUR POINT CIRCLE LPAREN . ExpI RPAREN SEMICOLON crea_cuadruplo_circle
    (23) ExpI -> . ExpK resuelve_operadores_relacionales
    (24) ExpI -> . ExpK Operandos push_operador_PilaOperadores ExpK resuelve_operadores_relacionales
    (32) ExpK -> . ExpT resuelve_termino
    (33) ExpK -> . ExpT resuelve_termino pos_SUMRES push_operador_PilaOperadores ExpK
    (37) ExpT -> . ExpF resuelve_factor
    (38) ExpT -> . ExpF resuelve_factor pos_MULTDIV push_operador_PilaOperadores ExpT
    (42) ExpF -> . VAR_CTE
    (43) ExpF -> . LPAREN agrega_falso ExpI RPAREN quita_falso
    (44) ExpF -> . VAR_ID push_var_PilaOperandos pos_arreglo
    (45) ExpF -> . llama_funcion
    (46) VAR_CTE -> . VAR_INT push_int_PilaOperandos
    (47) VAR_CTE -> . VAR_DECIMAL push_decimal_PilaOperandos
    (48) VAR_CTE -> . VAR_STRING push_string_PilaOperandos
    (49) VAR_CTE -> . VAR_BOOL push_bool_PilaOperandos
    (58) llama_funcion -> . VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion guarda_resultado_funcion
    (50) VAR_BOOL -> . FALSE
    (51) VAR_BOOL -> . TRUE

    LPAREN          shift and go to state 95
    VAR_ID          shift and go to state 96
    VAR_INT         shift and go to state 98
    VAR_DECIMAL     shift and go to state 99
    VAR_STRING      shift and go to state 100
    FALSE           shift and go to state 102
    TRUE            shift and go to state 103

    ExpI                           shift and go to state 210
    ExpK                           shift and go to state 91
    ExpT                           shift and go to state 92
    ExpF                           shift and go to state 93
    VAR_CTE                        shift and go to state 94
    llama_funcion                  shift and go to state 97
    VAR_BOOL                       shift and go to state 101

state 181

    (155) Position -> TUR POINT POS LPAREN . ExpI COMMA ExpI RPAREN SEMICOLON crea_cuadruplo_pos
    (23) ExpI -> . ExpK resuelve_operadores_relacionales
    (24) ExpI -> . ExpK Operandos push_operador_PilaOperadores ExpK resuelve_operadores_relacionales
    (32) ExpK -> . ExpT resuelve_termino
    (33) ExpK -> . ExpT resuelve_termino pos_SUMRES push_operador_PilaOperadores ExpK
    (37) ExpT -> . ExpF resuelve_factor
    (38) ExpT -> . ExpF resuelve_factor pos_MULTDIV push_operador_PilaOperadores ExpT
    (42) ExpF -> . VAR_CTE
    (43) ExpF -> . LPAREN agrega_falso ExpI RPAREN quita_falso
    (44) ExpF -> . VAR_ID push_var_PilaOperandos pos_arreglo
    (45) ExpF -> . llama_funcion
    (46) VAR_CTE -> . VAR_INT push_int_PilaOperandos
    (47) VAR_CTE -> . VAR_DECIMAL push_decimal_PilaOperandos
    (48) VAR_CTE -> . VAR_STRING push_string_PilaOperandos
    (49) VAR_CTE -> . VAR_BOOL push_bool_PilaOperandos
    (58) llama_funcion -> . VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion guarda_resultado_funcion
    (50) VAR_BOOL -> . FALSE
    (51) VAR_BOOL -> . TRUE

    LPAREN          shift and go to state 95
    VAR_ID          shift and go to state 96
    VAR_INT         shift and go to state 98
    VAR_DECIMAL     shift and go to state 99
    VAR_STRING      shift and go to state 100
    FALSE           shift and go to state 102
    TRUE            shift and go to state 103

    ExpI                           shift and go to state 211
    ExpK                           shift and go to state 91
    ExpT                           shift and go to state 92
    ExpF                           shift and go to state 93
    VAR_CTE                        shift and go to state 94
    llama_funcion                  shift and go to state 97
    VAR_BOOL                       shift and go to state 101

state 182

    (157) IniciaTurtle -> TUR POINT TURTLE LPAREN . RPAREN SEMICOLON crea_cuadruplo_inicia

    RPAREN          shift and go to state 212


state 183

    (159) TerminaTurtle -> TUR POINT FINISH LPAREN . RPAREN SEMICOLON crea_cuadruplo_termina

    RPAREN          shift and go to state 213


state 184

    (147) iniciaFill -> TUR POINT BEGIN_FILL LPAREN . RPAREN SEMICOLON crea_cuadruplo_iniciafill

    RPAREN          shift and go to state 214


state 185

    (141) Square -> TUR POINT SQUARE LPAREN . ExpI RPAREN SEMICOLON crea_cuadruplo_square
    (23) ExpI -> . ExpK resuelve_operadores_relacionales
    (24) ExpI -> . ExpK Operandos push_operador_PilaOperadores ExpK resuelve_operadores_relacionales
    (32) ExpK -> . ExpT resuelve_termino
    (33) ExpK -> . ExpT resuelve_termino pos_SUMRES push_operador_PilaOperadores ExpK
    (37) ExpT -> . ExpF resuelve_factor
    (38) ExpT -> . ExpF resuelve_factor pos_MULTDIV push_operador_PilaOperadores ExpT
    (42) ExpF -> . VAR_CTE
    (43) ExpF -> . LPAREN agrega_falso ExpI RPAREN quita_falso
    (44) ExpF -> . VAR_ID push_var_PilaOperandos pos_arreglo
    (45) ExpF -> . llama_funcion
    (46) VAR_CTE -> . VAR_INT push_int_PilaOperandos
    (47) VAR_CTE -> . VAR_DECIMAL push_decimal_PilaOperandos
    (48) VAR_CTE -> . VAR_STRING push_string_PilaOperandos
    (49) VAR_CTE -> . VAR_BOOL push_bool_PilaOperandos
    (58) llama_funcion -> . VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion guarda_resultado_funcion
    (50) VAR_BOOL -> . FALSE
    (51) VAR_BOOL -> . TRUE

    LPAREN          shift and go to state 95
    VAR_ID          shift and go to state 96
    VAR_INT         shift and go to state 98
    VAR_DECIMAL     shift and go to state 99
    VAR_STRING      shift and go to state 100
    FALSE           shift and go to state 102
    TRUE            shift and go to state 103

    ExpI                           shift and go to state 215
    ExpK                           shift and go to state 91
    ExpT                           shift and go to state 92
    ExpF                           shift and go to state 93
    VAR_CTE                        shift and go to state 94
    llama_funcion                  shift and go to state 97
    VAR_BOOL                       shift and go to state 101

state 186

    (143) Rectangle -> TUR POINT RECTANGLE LPAREN . ExpI COMMA ExpI RPAREN SEMICOLON crea_cuadruplo_rectangle
    (23) ExpI -> . ExpK resuelve_operadores_relacionales
    (24) ExpI -> . ExpK Operandos push_operador_PilaOperadores ExpK resuelve_operadores_relacionales
    (32) ExpK -> . ExpT resuelve_termino
    (33) ExpK -> . ExpT resuelve_termino pos_SUMRES push_operador_PilaOperadores ExpK
    (37) ExpT -> . ExpF resuelve_factor
    (38) ExpT -> . ExpF resuelve_factor pos_MULTDIV push_operador_PilaOperadores ExpT
    (42) ExpF -> . VAR_CTE
    (43) ExpF -> . LPAREN agrega_falso ExpI RPAREN quita_falso
    (44) ExpF -> . VAR_ID push_var_PilaOperandos pos_arreglo
    (45) ExpF -> . llama_funcion
    (46) VAR_CTE -> . VAR_INT push_int_PilaOperandos
    (47) VAR_CTE -> . VAR_DECIMAL push_decimal_PilaOperandos
    (48) VAR_CTE -> . VAR_STRING push_string_PilaOperandos
    (49) VAR_CTE -> . VAR_BOOL push_bool_PilaOperandos
    (58) llama_funcion -> . VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion guarda_resultado_funcion
    (50) VAR_BOOL -> . FALSE
    (51) VAR_BOOL -> . TRUE

    LPAREN          shift and go to state 95
    VAR_ID          shift and go to state 96
    VAR_INT         shift and go to state 98
    VAR_DECIMAL     shift and go to state 99
    VAR_STRING      shift and go to state 100
    FALSE           shift and go to state 102
    TRUE            shift and go to state 103

    ExpI                           shift and go to state 216
    ExpK                           shift and go to state 91
    ExpT                           shift and go to state 92
    ExpF                           shift and go to state 93
    VAR_CTE                        shift and go to state 94
    llama_funcion                  shift and go to state 97
    VAR_BOOL                       shift and go to state 101

state 187

    (145) Triangle -> TUR POINT TRIANGLE LPAREN . ExpI RPAREN SEMICOLON crea_cuadruplo_triangle
    (23) ExpI -> . ExpK resuelve_operadores_relacionales
    (24) ExpI -> . ExpK Operandos push_operador_PilaOperadores ExpK resuelve_operadores_relacionales
    (32) ExpK -> . ExpT resuelve_termino
    (33) ExpK -> . ExpT resuelve_termino pos_SUMRES push_operador_PilaOperadores ExpK
    (37) ExpT -> . ExpF resuelve_factor
    (38) ExpT -> . ExpF resuelve_factor pos_MULTDIV push_operador_PilaOperadores ExpT
    (42) ExpF -> . VAR_CTE
    (43) ExpF -> . LPAREN agrega_falso ExpI RPAREN quita_falso
    (44) ExpF -> . VAR_ID push_var_PilaOperandos pos_arreglo
    (45) ExpF -> . llama_funcion
    (46) VAR_CTE -> . VAR_INT push_int_PilaOperandos
    (47) VAR_CTE -> . VAR_DECIMAL push_decimal_PilaOperandos
    (48) VAR_CTE -> . VAR_STRING push_string_PilaOperandos
    (49) VAR_CTE -> . VAR_BOOL push_bool_PilaOperandos
    (58) llama_funcion -> . VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion guarda_resultado_funcion
    (50) VAR_BOOL -> . FALSE
    (51) VAR_BOOL -> . TRUE

    LPAREN          shift and go to state 95
    VAR_ID          shift and go to state 96
    VAR_INT         shift and go to state 98
    VAR_DECIMAL     shift and go to state 99
    VAR_STRING      shift and go to state 100
    FALSE           shift and go to state 102
    TRUE            shift and go to state 103

    ExpI                           shift and go to state 217
    ExpK                           shift and go to state 91
    ExpT                           shift and go to state 92
    ExpF                           shift and go to state 93
    VAR_CTE                        shift and go to state 94
    llama_funcion                  shift and go to state 97
    VAR_BOOL                       shift and go to state 101

state 188

    (149) terminaFill -> TUR POINT END_FILL LPAREN . RPAREN SEMICOLON crea_cuadruplo_terminafill

    RPAREN          shift and go to state 218


state 189

    (151) colorFill -> TUR POINT COLOR LPAREN . ExpI RPAREN SEMICOLON crea_cuadruplo_colorFill
    (23) ExpI -> . ExpK resuelve_operadores_relacionales
    (24) ExpI -> . ExpK Operandos push_operador_PilaOperadores ExpK resuelve_operadores_relacionales
    (32) ExpK -> . ExpT resuelve_termino
    (33) ExpK -> . ExpT resuelve_termino pos_SUMRES push_operador_PilaOperadores ExpK
    (37) ExpT -> . ExpF resuelve_factor
    (38) ExpT -> . ExpF resuelve_factor pos_MULTDIV push_operador_PilaOperadores ExpT
    (42) ExpF -> . VAR_CTE
    (43) ExpF -> . LPAREN agrega_falso ExpI RPAREN quita_falso
    (44) ExpF -> . VAR_ID push_var_PilaOperandos pos_arreglo
    (45) ExpF -> . llama_funcion
    (46) VAR_CTE -> . VAR_INT push_int_PilaOperandos
    (47) VAR_CTE -> . VAR_DECIMAL push_decimal_PilaOperandos
    (48) VAR_CTE -> . VAR_STRING push_string_PilaOperandos
    (49) VAR_CTE -> . VAR_BOOL push_bool_PilaOperandos
    (58) llama_funcion -> . VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion guarda_resultado_funcion
    (50) VAR_BOOL -> . FALSE
    (51) VAR_BOOL -> . TRUE

    LPAREN          shift and go to state 95
    VAR_ID          shift and go to state 96
    VAR_INT         shift and go to state 98
    VAR_DECIMAL     shift and go to state 99
    VAR_STRING      shift and go to state 100
    FALSE           shift and go to state 102
    TRUE            shift and go to state 103

    ExpI                           shift and go to state 219
    ExpK                           shift and go to state 91
    ExpT                           shift and go to state 92
    ExpF                           shift and go to state 93
    VAR_CTE                        shift and go to state 94
    llama_funcion                  shift and go to state 97
    VAR_BOOL                       shift and go to state 101

state 190

    (153) colorPen -> TUR POINT PENCOLOR LPAREN . ExpI RPAREN SEMICOLON crea_cuadruplo_colorPen
    (23) ExpI -> . ExpK resuelve_operadores_relacionales
    (24) ExpI -> . ExpK Operandos push_operador_PilaOperadores ExpK resuelve_operadores_relacionales
    (32) ExpK -> . ExpT resuelve_termino
    (33) ExpK -> . ExpT resuelve_termino pos_SUMRES push_operador_PilaOperadores ExpK
    (37) ExpT -> . ExpF resuelve_factor
    (38) ExpT -> . ExpF resuelve_factor pos_MULTDIV push_operador_PilaOperadores ExpT
    (42) ExpF -> . VAR_CTE
    (43) ExpF -> . LPAREN agrega_falso ExpI RPAREN quita_falso
    (44) ExpF -> . VAR_ID push_var_PilaOperandos pos_arreglo
    (45) ExpF -> . llama_funcion
    (46) VAR_CTE -> . VAR_INT push_int_PilaOperandos
    (47) VAR_CTE -> . VAR_DECIMAL push_decimal_PilaOperandos
    (48) VAR_CTE -> . VAR_STRING push_string_PilaOperandos
    (49) VAR_CTE -> . VAR_BOOL push_bool_PilaOperandos
    (58) llama_funcion -> . VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion guarda_resultado_funcion
    (50) VAR_BOOL -> . FALSE
    (51) VAR_BOOL -> . TRUE

    LPAREN          shift and go to state 95
    VAR_ID          shift and go to state 96
    VAR_INT         shift and go to state 98
    VAR_DECIMAL     shift and go to state 99
    VAR_STRING      shift and go to state 100
    FALSE           shift and go to state 102
    TRUE            shift and go to state 103

    ExpI                           shift and go to state 220
    ExpK                           shift and go to state 91
    ExpT                           shift and go to state 92
    ExpF                           shift and go to state 93
    VAR_CTE                        shift and go to state 94
    llama_funcion                  shift and go to state 97
    VAR_BOOL                       shift and go to state 101

state 191

    (71) funciones -> FUNC tipo_funcion VAR_ID LPAREN param RPAREN agrega_funcion LBRACKET Vars reg_brack RBRACKET . fin_func_cuad funciones
    (80) fin_func_cuad -> .

    FUNC            reduce using rule 80 (fin_func_cuad -> .)
    MAIN            reduce using rule 80 (fin_func_cuad -> .)

    fin_func_cuad                  shift and go to state 221

state 192

    (117) Main -> MAIN agrega_main_funcion LPAREN RPAREN LBRACKET Vars reg_brack RET ZERO SEMICOLON RBRACKET .

    $end            reduce using rule 117 (Main -> MAIN agrega_main_funcion LPAREN RPAREN LBRACKET Vars reg_brack RET ZERO SEMICOLON RBRACKET .)


state 193

    (90) Condicion -> IF LPAREN ExpI RPAREN crea_GOTOF . LBRACKET reg_brack RBRACKET pos_else llena_cuadruplo_if

    LBRACKET        shift and go to state 222


state 194

    (24) ExpI -> ExpK Operandos push_operador_PilaOperadores ExpK . resuelve_operadores_relacionales
    (31) resuelve_operadores_relacionales -> .

    SEMICOLON       reduce using rule 31 (resuelve_operadores_relacionales -> .)
    RPAREN          reduce using rule 31 (resuelve_operadores_relacionales -> .)
    COMMA           reduce using rule 31 (resuelve_operadores_relacionales -> .)
    SRBRACKET       reduce using rule 31 (resuelve_operadores_relacionales -> .)

    resuelve_operadores_relacionales shift and go to state 223

state 195

    (33) ExpK -> ExpT resuelve_termino pos_SUMRES push_operador_PilaOperadores . ExpK
    (32) ExpK -> . ExpT resuelve_termino
    (33) ExpK -> . ExpT resuelve_termino pos_SUMRES push_operador_PilaOperadores ExpK
    (37) ExpT -> . ExpF resuelve_factor
    (38) ExpT -> . ExpF resuelve_factor pos_MULTDIV push_operador_PilaOperadores ExpT
    (42) ExpF -> . VAR_CTE
    (43) ExpF -> . LPAREN agrega_falso ExpI RPAREN quita_falso
    (44) ExpF -> . VAR_ID push_var_PilaOperandos pos_arreglo
    (45) ExpF -> . llama_funcion
    (46) VAR_CTE -> . VAR_INT push_int_PilaOperandos
    (47) VAR_CTE -> . VAR_DECIMAL push_decimal_PilaOperandos
    (48) VAR_CTE -> . VAR_STRING push_string_PilaOperandos
    (49) VAR_CTE -> . VAR_BOOL push_bool_PilaOperandos
    (58) llama_funcion -> . VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion guarda_resultado_funcion
    (50) VAR_BOOL -> . FALSE
    (51) VAR_BOOL -> . TRUE

    LPAREN          shift and go to state 95
    VAR_ID          shift and go to state 96
    VAR_INT         shift and go to state 98
    VAR_DECIMAL     shift and go to state 99
    VAR_STRING      shift and go to state 100
    FALSE           shift and go to state 102
    TRUE            shift and go to state 103

    ExpT                           shift and go to state 92
    ExpK                           shift and go to state 224
    ExpF                           shift and go to state 93
    VAR_CTE                        shift and go to state 94
    llama_funcion                  shift and go to state 97
    VAR_BOOL                       shift and go to state 101

state 196

    (38) ExpT -> ExpF resuelve_factor pos_MULTDIV push_operador_PilaOperadores . ExpT
    (37) ExpT -> . ExpF resuelve_factor
    (38) ExpT -> . ExpF resuelve_factor pos_MULTDIV push_operador_PilaOperadores ExpT
    (42) ExpF -> . VAR_CTE
    (43) ExpF -> . LPAREN agrega_falso ExpI RPAREN quita_falso
    (44) ExpF -> . VAR_ID push_var_PilaOperandos pos_arreglo
    (45) ExpF -> . llama_funcion
    (46) VAR_CTE -> . VAR_INT push_int_PilaOperandos
    (47) VAR_CTE -> . VAR_DECIMAL push_decimal_PilaOperandos
    (48) VAR_CTE -> . VAR_STRING push_string_PilaOperandos
    (49) VAR_CTE -> . VAR_BOOL push_bool_PilaOperandos
    (58) llama_funcion -> . VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion guarda_resultado_funcion
    (50) VAR_BOOL -> . FALSE
    (51) VAR_BOOL -> . TRUE

    LPAREN          shift and go to state 95
    VAR_ID          shift and go to state 96
    VAR_INT         shift and go to state 98
    VAR_DECIMAL     shift and go to state 99
    VAR_STRING      shift and go to state 100
    FALSE           shift and go to state 102
    TRUE            shift and go to state 103

    ExpF                           shift and go to state 93
    ExpT                           shift and go to state 225
    VAR_CTE                        shift and go to state 94
    llama_funcion                  shift and go to state 97
    VAR_BOOL                       shift and go to state 101

state 197

    (43) ExpF -> LPAREN agrega_falso ExpI RPAREN . quita_falso
    (57) quita_falso -> .

    MULT            reduce using rule 57 (quita_falso -> .)
    DIV             reduce using rule 57 (quita_falso -> .)
    PLUS            reduce using rule 57 (quita_falso -> .)
    MINUS           reduce using rule 57 (quita_falso -> .)
    LT              reduce using rule 57 (quita_falso -> .)
    GT              reduce using rule 57 (quita_falso -> .)
    NE              reduce using rule 57 (quita_falso -> .)
    LE              reduce using rule 57 (quita_falso -> .)
    GE              reduce using rule 57 (quita_falso -> .)
    EQ              reduce using rule 57 (quita_falso -> .)
    SEMICOLON       reduce using rule 57 (quita_falso -> .)
    RPAREN          reduce using rule 57 (quita_falso -> .)
    COMMA           reduce using rule 57 (quita_falso -> .)
    SRBRACKET       reduce using rule 57 (quita_falso -> .)

    quita_falso                    shift and go to state 226

state 198

    (58) llama_funcion -> VAR_ID LPAREN agrega_falso checa_funcion_si_existe . argumentos RPAREN quita_falso resuelve_llamada_funcion guarda_resultado_funcion
    (60) argumentos -> . ExpI resuelve_argumentos mas_argumentos
    (61) argumentos -> .
    (23) ExpI -> . ExpK resuelve_operadores_relacionales
    (24) ExpI -> . ExpK Operandos push_operador_PilaOperadores ExpK resuelve_operadores_relacionales
    (32) ExpK -> . ExpT resuelve_termino
    (33) ExpK -> . ExpT resuelve_termino pos_SUMRES push_operador_PilaOperadores ExpK
    (37) ExpT -> . ExpF resuelve_factor
    (38) ExpT -> . ExpF resuelve_factor pos_MULTDIV push_operador_PilaOperadores ExpT
    (42) ExpF -> . VAR_CTE
    (43) ExpF -> . LPAREN agrega_falso ExpI RPAREN quita_falso
    (44) ExpF -> . VAR_ID push_var_PilaOperandos pos_arreglo
    (45) ExpF -> . llama_funcion
    (46) VAR_CTE -> . VAR_INT push_int_PilaOperandos
    (47) VAR_CTE -> . VAR_DECIMAL push_decimal_PilaOperandos
    (48) VAR_CTE -> . VAR_STRING push_string_PilaOperandos
    (49) VAR_CTE -> . VAR_BOOL push_bool_PilaOperandos
    (58) llama_funcion -> . VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion guarda_resultado_funcion
    (50) VAR_BOOL -> . FALSE
    (51) VAR_BOOL -> . TRUE

    RPAREN          reduce using rule 61 (argumentos -> .)
    LPAREN          shift and go to state 95
    VAR_ID          shift and go to state 96
    VAR_INT         shift and go to state 98
    VAR_DECIMAL     shift and go to state 99
    VAR_STRING      shift and go to state 100
    FALSE           shift and go to state 102
    TRUE            shift and go to state 103

    argumentos                     shift and go to state 227
    ExpI                           shift and go to state 202
    ExpK                           shift and go to state 91
    ExpT                           shift and go to state 92
    ExpF                           shift and go to state 93
    VAR_CTE                        shift and go to state 94
    llama_funcion                  shift and go to state 97
    VAR_BOOL                       shift and go to state 101

state 199

    (17) Asignacion -> VAR_ID push_var_PilaOperandos pos_arreglo ASSIGN push_operador_PilaOperadores . ExpI SEMICOLON resuelve_asignacion
    (18) Asignacion -> VAR_ID push_var_PilaOperandos pos_arreglo ASSIGN push_operador_PilaOperadores . READ LPAREN ExpI RPAREN crea_cuadruplo_read SEMICOLON resuelve_asignacion
    (23) ExpI -> . ExpK resuelve_operadores_relacionales
    (24) ExpI -> . ExpK Operandos push_operador_PilaOperadores ExpK resuelve_operadores_relacionales
    (32) ExpK -> . ExpT resuelve_termino
    (33) ExpK -> . ExpT resuelve_termino pos_SUMRES push_operador_PilaOperadores ExpK
    (37) ExpT -> . ExpF resuelve_factor
    (38) ExpT -> . ExpF resuelve_factor pos_MULTDIV push_operador_PilaOperadores ExpT
    (42) ExpF -> . VAR_CTE
    (43) ExpF -> . LPAREN agrega_falso ExpI RPAREN quita_falso
    (44) ExpF -> . VAR_ID push_var_PilaOperandos pos_arreglo
    (45) ExpF -> . llama_funcion
    (46) VAR_CTE -> . VAR_INT push_int_PilaOperandos
    (47) VAR_CTE -> . VAR_DECIMAL push_decimal_PilaOperandos
    (48) VAR_CTE -> . VAR_STRING push_string_PilaOperandos
    (49) VAR_CTE -> . VAR_BOOL push_bool_PilaOperandos
    (58) llama_funcion -> . VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion guarda_resultado_funcion
    (50) VAR_BOOL -> . FALSE
    (51) VAR_BOOL -> . TRUE

    READ            shift and go to state 229
    LPAREN          shift and go to state 95
    VAR_ID          shift and go to state 96
    VAR_INT         shift and go to state 98
    VAR_DECIMAL     shift and go to state 99
    VAR_STRING      shift and go to state 100
    FALSE           shift and go to state 102
    TRUE            shift and go to state 103

    ExpI                           shift and go to state 228
    ExpK                           shift and go to state 91
    ExpT                           shift and go to state 92
    ExpF                           shift and go to state 93
    VAR_CTE                        shift and go to state 94
    llama_funcion                  shift and go to state 97
    VAR_BOOL                       shift and go to state 101

state 200

    (67) pos_arreglo -> SLBRACKET checa_var_arr agrega_falso . ExpI crea_cuadruplo_ver quita_falso SRBRACKET
    (23) ExpI -> . ExpK resuelve_operadores_relacionales
    (24) ExpI -> . ExpK Operandos push_operador_PilaOperadores ExpK resuelve_operadores_relacionales
    (32) ExpK -> . ExpT resuelve_termino
    (33) ExpK -> . ExpT resuelve_termino pos_SUMRES push_operador_PilaOperadores ExpK
    (37) ExpT -> . ExpF resuelve_factor
    (38) ExpT -> . ExpF resuelve_factor pos_MULTDIV push_operador_PilaOperadores ExpT
    (42) ExpF -> . VAR_CTE
    (43) ExpF -> . LPAREN agrega_falso ExpI RPAREN quita_falso
    (44) ExpF -> . VAR_ID push_var_PilaOperandos pos_arreglo
    (45) ExpF -> . llama_funcion
    (46) VAR_CTE -> . VAR_INT push_int_PilaOperandos
    (47) VAR_CTE -> . VAR_DECIMAL push_decimal_PilaOperandos
    (48) VAR_CTE -> . VAR_STRING push_string_PilaOperandos
    (49) VAR_CTE -> . VAR_BOOL push_bool_PilaOperandos
    (58) llama_funcion -> . VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion guarda_resultado_funcion
    (50) VAR_BOOL -> . FALSE
    (51) VAR_BOOL -> . TRUE

    LPAREN          shift and go to state 95
    VAR_ID          shift and go to state 96
    VAR_INT         shift and go to state 98
    VAR_DECIMAL     shift and go to state 99
    VAR_STRING      shift and go to state 100
    FALSE           shift and go to state 102
    TRUE            shift and go to state 103

    ExpI                           shift and go to state 230
    ExpK                           shift and go to state 91
    ExpT                           shift and go to state 92
    ExpF                           shift and go to state 93
    VAR_CTE                        shift and go to state 94
    llama_funcion                  shift and go to state 97
    VAR_BOOL                       shift and go to state 101

state 201

    (100) Llamada_Func -> VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos . RPAREN quita_falso resuelve_llamada_funcion SEMICOLON checa_void

    RPAREN          shift and go to state 231


state 202

    (60) argumentos -> ExpI . resuelve_argumentos mas_argumentos
    (64) resuelve_argumentos -> .

    COMMA           reduce using rule 64 (resuelve_argumentos -> .)
    RPAREN          reduce using rule 64 (resuelve_argumentos -> .)

    resuelve_argumentos            shift and go to state 232

state 203

    (98) Print -> PRINT LPAREN ExpI RPAREN SEMICOLON . crea_print
    (99) crea_print -> .

    IF              reduce using rule 99 (crea_print -> .)
    RETURN          reduce using rule 99 (crea_print -> .)
    VAR_ID          reduce using rule 99 (crea_print -> .)
    PRINT           reduce using rule 99 (crea_print -> .)
    FOR             reduce using rule 99 (crea_print -> .)
    WHILE           reduce using rule 99 (crea_print -> .)
    DO              reduce using rule 99 (crea_print -> .)
    TUR             reduce using rule 99 (crea_print -> .)
    RET             reduce using rule 99 (crea_print -> .)
    RBRACKET        reduce using rule 99 (crea_print -> .)

    crea_print                     shift and go to state 233

state 204

    (110) For -> FOR LPAREN VAR_ID ASSIGN ExpI . SEMICOLON ExpI SEMICOLON VAR_ID Exp_ciclo RPAREN LBRACKET reg_brack RBRACKET

    SEMICOLON       shift and go to state 234


state 205

    (105) While -> WHILE guarda_numero_cuadruplo LPAREN ExpI RPAREN . crea_GOTOF LBRACKET reg_brack RBRACKET regresa_inicio_while
    (91) crea_GOTOF -> .

    LBRACKET        reduce using rule 91 (crea_GOTOF -> .)

    crea_GOTOF                     shift and go to state 235

state 206

    (108) DoWhile -> DO guarda_numero_cuadruplo LBRACKET reg_brack RBRACKET . WHILE LPAREN ExpI RPAREN SEMICOLON crea_GOTOV

    WHILE           shift and go to state 236


state 207

    (133) Forward -> TUR POINT FORWARD LPAREN ExpI . RPAREN SEMICOLON crea_cuadruplo_forward

    RPAREN          shift and go to state 237


state 208

    (135) Right -> TUR POINT RIGHT LPAREN ExpI . RPAREN SEMICOLON crea_cuadruplo_right

    RPAREN          shift and go to state 238


state 209

    (137) Left -> TUR POINT LEFT LPAREN ExpI . RPAREN SEMICOLON crea_cuadruplo_left

    RPAREN          shift and go to state 239


state 210

    (139) Circle -> TUR POINT CIRCLE LPAREN ExpI . RPAREN SEMICOLON crea_cuadruplo_circle

    RPAREN          shift and go to state 240


state 211

    (155) Position -> TUR POINT POS LPAREN ExpI . COMMA ExpI RPAREN SEMICOLON crea_cuadruplo_pos

    COMMA           shift and go to state 241


state 212

    (157) IniciaTurtle -> TUR POINT TURTLE LPAREN RPAREN . SEMICOLON crea_cuadruplo_inicia

    SEMICOLON       shift and go to state 242


state 213

    (159) TerminaTurtle -> TUR POINT FINISH LPAREN RPAREN . SEMICOLON crea_cuadruplo_termina

    SEMICOLON       shift and go to state 243


state 214

    (147) iniciaFill -> TUR POINT BEGIN_FILL LPAREN RPAREN . SEMICOLON crea_cuadruplo_iniciafill

    SEMICOLON       shift and go to state 244


state 215

    (141) Square -> TUR POINT SQUARE LPAREN ExpI . RPAREN SEMICOLON crea_cuadruplo_square

    RPAREN          shift and go to state 245


state 216

    (143) Rectangle -> TUR POINT RECTANGLE LPAREN ExpI . COMMA ExpI RPAREN SEMICOLON crea_cuadruplo_rectangle

    COMMA           shift and go to state 246


state 217

    (145) Triangle -> TUR POINT TRIANGLE LPAREN ExpI . RPAREN SEMICOLON crea_cuadruplo_triangle

    RPAREN          shift and go to state 247


state 218

    (149) terminaFill -> TUR POINT END_FILL LPAREN RPAREN . SEMICOLON crea_cuadruplo_terminafill

    SEMICOLON       shift and go to state 248


state 219

    (151) colorFill -> TUR POINT COLOR LPAREN ExpI . RPAREN SEMICOLON crea_cuadruplo_colorFill

    RPAREN          shift and go to state 249


state 220

    (153) colorPen -> TUR POINT PENCOLOR LPAREN ExpI . RPAREN SEMICOLON crea_cuadruplo_colorPen

    RPAREN          shift and go to state 250


state 221

    (71) funciones -> FUNC tipo_funcion VAR_ID LPAREN param RPAREN agrega_funcion LBRACKET Vars reg_brack RBRACKET fin_func_cuad . funciones
    (71) funciones -> . FUNC tipo_funcion VAR_ID LPAREN param RPAREN agrega_funcion LBRACKET Vars reg_brack RBRACKET fin_func_cuad funciones
    (72) funciones -> .

    FUNC            shift and go to state 16
    MAIN            reduce using rule 72 (funciones -> .)

    funciones                      shift and go to state 251

state 222

    (90) Condicion -> IF LPAREN ExpI RPAREN crea_GOTOF LBRACKET . reg_brack RBRACKET pos_else llena_cuadruplo_if
    (81) reg_brack -> . Estatutos reg_brack
    (82) reg_brack -> .
    (83) Estatutos -> . Condicion
    (84) Estatutos -> . Ciclo
    (85) Estatutos -> . Return
    (86) Estatutos -> . Asignacion
    (87) Estatutos -> . Print
    (88) Estatutos -> . Llamada_Func
    (89) Estatutos -> . Turtle
    (90) Condicion -> . IF LPAREN ExpI RPAREN crea_GOTOF LBRACKET reg_brack RBRACKET pos_else llena_cuadruplo_if
    (102) Ciclo -> . For
    (103) Ciclo -> . While
    (104) Ciclo -> . DoWhile
    (96) Return -> . RETURN ExpI SEMICOLON resuelve_return
    (17) Asignacion -> . VAR_ID push_var_PilaOperandos pos_arreglo ASSIGN push_operador_PilaOperadores ExpI SEMICOLON resuelve_asignacion
    (18) Asignacion -> . VAR_ID push_var_PilaOperandos pos_arreglo ASSIGN push_operador_PilaOperadores READ LPAREN ExpI RPAREN crea_cuadruplo_read SEMICOLON resuelve_asignacion
    (98) Print -> . PRINT LPAREN ExpI RPAREN SEMICOLON crea_print
    (100) Llamada_Func -> . VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion SEMICOLON checa_void
    (119) Turtle -> . Forward
    (120) Turtle -> . Right
    (121) Turtle -> . Left
    (122) Turtle -> . Circle
    (123) Turtle -> . Position
    (124) Turtle -> . IniciaTurtle
    (125) Turtle -> . TerminaTurtle
    (126) Turtle -> . iniciaFill
    (127) Turtle -> . Square
    (128) Turtle -> . Rectangle
    (129) Turtle -> . Triangle
    (130) Turtle -> . terminaFill
    (131) Turtle -> . colorFill
    (132) Turtle -> . colorPen
    (110) For -> . FOR LPAREN VAR_ID ASSIGN ExpI SEMICOLON ExpI SEMICOLON VAR_ID Exp_ciclo RPAREN LBRACKET reg_brack RBRACKET
    (105) While -> . WHILE guarda_numero_cuadruplo LPAREN ExpI RPAREN crea_GOTOF LBRACKET reg_brack RBRACKET regresa_inicio_while
    (108) DoWhile -> . DO guarda_numero_cuadruplo LBRACKET reg_brack RBRACKET WHILE LPAREN ExpI RPAREN SEMICOLON crea_GOTOV
    (133) Forward -> . TUR POINT FORWARD LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_forward
    (135) Right -> . TUR POINT RIGHT LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_right
    (137) Left -> . TUR POINT LEFT LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_left
    (139) Circle -> . TUR POINT CIRCLE LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_circle
    (155) Position -> . TUR POINT POS LPAREN ExpI COMMA ExpI RPAREN SEMICOLON crea_cuadruplo_pos
    (157) IniciaTurtle -> . TUR POINT TURTLE LPAREN RPAREN SEMICOLON crea_cuadruplo_inicia
    (159) TerminaTurtle -> . TUR POINT FINISH LPAREN RPAREN SEMICOLON crea_cuadruplo_termina
    (147) iniciaFill -> . TUR POINT BEGIN_FILL LPAREN RPAREN SEMICOLON crea_cuadruplo_iniciafill
    (141) Square -> . TUR POINT SQUARE LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_square
    (143) Rectangle -> . TUR POINT RECTANGLE LPAREN ExpI COMMA ExpI RPAREN SEMICOLON crea_cuadruplo_rectangle
    (145) Triangle -> . TUR POINT TRIANGLE LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_triangle
    (149) terminaFill -> . TUR POINT END_FILL LPAREN RPAREN SEMICOLON crea_cuadruplo_terminafill
    (151) colorFill -> . TUR POINT COLOR LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_colorFill
    (153) colorPen -> . TUR POINT PENCOLOR LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_colorPen

    RBRACKET        reduce using rule 82 (reg_brack -> .)
    IF              shift and go to state 59
    RETURN          shift and go to state 63
    VAR_ID          shift and go to state 64
    PRINT           shift and go to state 65
    FOR             shift and go to state 80
    WHILE           shift and go to state 81
    DO              shift and go to state 82
    TUR             shift and go to state 83

    reg_brack                      shift and go to state 252
    Estatutos                      shift and go to state 51
    Condicion                      shift and go to state 52
    Ciclo                          shift and go to state 53
    Return                         shift and go to state 54
    Asignacion                     shift and go to state 55
    Print                          shift and go to state 56
    Llamada_Func                   shift and go to state 57
    Turtle                         shift and go to state 58
    For                            shift and go to state 60
    While                          shift and go to state 61
    DoWhile                        shift and go to state 62
    Forward                        shift and go to state 66
    Right                          shift and go to state 67
    Left                           shift and go to state 68
    Circle                         shift and go to state 69
    Position                       shift and go to state 70
    IniciaTurtle                   shift and go to state 71
    TerminaTurtle                  shift and go to state 72
    iniciaFill                     shift and go to state 73
    Square                         shift and go to state 74
    Rectangle                      shift and go to state 75
    Triangle                       shift and go to state 76
    terminaFill                    shift and go to state 77
    colorFill                      shift and go to state 78
    colorPen                       shift and go to state 79

state 223

    (24) ExpI -> ExpK Operandos push_operador_PilaOperadores ExpK resuelve_operadores_relacionales .

    SEMICOLON       reduce using rule 24 (ExpI -> ExpK Operandos push_operador_PilaOperadores ExpK resuelve_operadores_relacionales .)
    RPAREN          reduce using rule 24 (ExpI -> ExpK Operandos push_operador_PilaOperadores ExpK resuelve_operadores_relacionales .)
    COMMA           reduce using rule 24 (ExpI -> ExpK Operandos push_operador_PilaOperadores ExpK resuelve_operadores_relacionales .)
    SRBRACKET       reduce using rule 24 (ExpI -> ExpK Operandos push_operador_PilaOperadores ExpK resuelve_operadores_relacionales .)


state 224

    (33) ExpK -> ExpT resuelve_termino pos_SUMRES push_operador_PilaOperadores ExpK .

    LT              reduce using rule 33 (ExpK -> ExpT resuelve_termino pos_SUMRES push_operador_PilaOperadores ExpK .)
    GT              reduce using rule 33 (ExpK -> ExpT resuelve_termino pos_SUMRES push_operador_PilaOperadores ExpK .)
    NE              reduce using rule 33 (ExpK -> ExpT resuelve_termino pos_SUMRES push_operador_PilaOperadores ExpK .)
    LE              reduce using rule 33 (ExpK -> ExpT resuelve_termino pos_SUMRES push_operador_PilaOperadores ExpK .)
    GE              reduce using rule 33 (ExpK -> ExpT resuelve_termino pos_SUMRES push_operador_PilaOperadores ExpK .)
    EQ              reduce using rule 33 (ExpK -> ExpT resuelve_termino pos_SUMRES push_operador_PilaOperadores ExpK .)
    SEMICOLON       reduce using rule 33 (ExpK -> ExpT resuelve_termino pos_SUMRES push_operador_PilaOperadores ExpK .)
    RPAREN          reduce using rule 33 (ExpK -> ExpT resuelve_termino pos_SUMRES push_operador_PilaOperadores ExpK .)
    COMMA           reduce using rule 33 (ExpK -> ExpT resuelve_termino pos_SUMRES push_operador_PilaOperadores ExpK .)
    SRBRACKET       reduce using rule 33 (ExpK -> ExpT resuelve_termino pos_SUMRES push_operador_PilaOperadores ExpK .)


state 225

    (38) ExpT -> ExpF resuelve_factor pos_MULTDIV push_operador_PilaOperadores ExpT .

    PLUS            reduce using rule 38 (ExpT -> ExpF resuelve_factor pos_MULTDIV push_operador_PilaOperadores ExpT .)
    MINUS           reduce using rule 38 (ExpT -> ExpF resuelve_factor pos_MULTDIV push_operador_PilaOperadores ExpT .)
    LT              reduce using rule 38 (ExpT -> ExpF resuelve_factor pos_MULTDIV push_operador_PilaOperadores ExpT .)
    GT              reduce using rule 38 (ExpT -> ExpF resuelve_factor pos_MULTDIV push_operador_PilaOperadores ExpT .)
    NE              reduce using rule 38 (ExpT -> ExpF resuelve_factor pos_MULTDIV push_operador_PilaOperadores ExpT .)
    LE              reduce using rule 38 (ExpT -> ExpF resuelve_factor pos_MULTDIV push_operador_PilaOperadores ExpT .)
    GE              reduce using rule 38 (ExpT -> ExpF resuelve_factor pos_MULTDIV push_operador_PilaOperadores ExpT .)
    EQ              reduce using rule 38 (ExpT -> ExpF resuelve_factor pos_MULTDIV push_operador_PilaOperadores ExpT .)
    SEMICOLON       reduce using rule 38 (ExpT -> ExpF resuelve_factor pos_MULTDIV push_operador_PilaOperadores ExpT .)
    RPAREN          reduce using rule 38 (ExpT -> ExpF resuelve_factor pos_MULTDIV push_operador_PilaOperadores ExpT .)
    COMMA           reduce using rule 38 (ExpT -> ExpF resuelve_factor pos_MULTDIV push_operador_PilaOperadores ExpT .)
    SRBRACKET       reduce using rule 38 (ExpT -> ExpF resuelve_factor pos_MULTDIV push_operador_PilaOperadores ExpT .)


state 226

    (43) ExpF -> LPAREN agrega_falso ExpI RPAREN quita_falso .

    MULT            reduce using rule 43 (ExpF -> LPAREN agrega_falso ExpI RPAREN quita_falso .)
    DIV             reduce using rule 43 (ExpF -> LPAREN agrega_falso ExpI RPAREN quita_falso .)
    PLUS            reduce using rule 43 (ExpF -> LPAREN agrega_falso ExpI RPAREN quita_falso .)
    MINUS           reduce using rule 43 (ExpF -> LPAREN agrega_falso ExpI RPAREN quita_falso .)
    LT              reduce using rule 43 (ExpF -> LPAREN agrega_falso ExpI RPAREN quita_falso .)
    GT              reduce using rule 43 (ExpF -> LPAREN agrega_falso ExpI RPAREN quita_falso .)
    NE              reduce using rule 43 (ExpF -> LPAREN agrega_falso ExpI RPAREN quita_falso .)
    LE              reduce using rule 43 (ExpF -> LPAREN agrega_falso ExpI RPAREN quita_falso .)
    GE              reduce using rule 43 (ExpF -> LPAREN agrega_falso ExpI RPAREN quita_falso .)
    EQ              reduce using rule 43 (ExpF -> LPAREN agrega_falso ExpI RPAREN quita_falso .)
    SEMICOLON       reduce using rule 43 (ExpF -> LPAREN agrega_falso ExpI RPAREN quita_falso .)
    RPAREN          reduce using rule 43 (ExpF -> LPAREN agrega_falso ExpI RPAREN quita_falso .)
    COMMA           reduce using rule 43 (ExpF -> LPAREN agrega_falso ExpI RPAREN quita_falso .)
    SRBRACKET       reduce using rule 43 (ExpF -> LPAREN agrega_falso ExpI RPAREN quita_falso .)


state 227

    (58) llama_funcion -> VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos . RPAREN quita_falso resuelve_llamada_funcion guarda_resultado_funcion

    RPAREN          shift and go to state 253


state 228

    (17) Asignacion -> VAR_ID push_var_PilaOperandos pos_arreglo ASSIGN push_operador_PilaOperadores ExpI . SEMICOLON resuelve_asignacion

    SEMICOLON       shift and go to state 254


state 229

    (18) Asignacion -> VAR_ID push_var_PilaOperandos pos_arreglo ASSIGN push_operador_PilaOperadores READ . LPAREN ExpI RPAREN crea_cuadruplo_read SEMICOLON resuelve_asignacion

    LPAREN          shift and go to state 255


state 230

    (67) pos_arreglo -> SLBRACKET checa_var_arr agrega_falso ExpI . crea_cuadruplo_ver quita_falso SRBRACKET
    (69) crea_cuadruplo_ver -> .

    SRBRACKET       reduce using rule 69 (crea_cuadruplo_ver -> .)

    crea_cuadruplo_ver             shift and go to state 256

state 231

    (100) Llamada_Func -> VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN . quita_falso resuelve_llamada_funcion SEMICOLON checa_void
    (57) quita_falso -> .

    SEMICOLON       reduce using rule 57 (quita_falso -> .)

    quita_falso                    shift and go to state 257

state 232

    (60) argumentos -> ExpI resuelve_argumentos . mas_argumentos
    (62) mas_argumentos -> . COMMA ExpI resuelve_argumentos mas_argumentos
    (63) mas_argumentos -> .

    COMMA           shift and go to state 259
    RPAREN          reduce using rule 63 (mas_argumentos -> .)

    mas_argumentos                 shift and go to state 258

state 233

    (98) Print -> PRINT LPAREN ExpI RPAREN SEMICOLON crea_print .

    IF              reduce using rule 98 (Print -> PRINT LPAREN ExpI RPAREN SEMICOLON crea_print .)
    RETURN          reduce using rule 98 (Print -> PRINT LPAREN ExpI RPAREN SEMICOLON crea_print .)
    VAR_ID          reduce using rule 98 (Print -> PRINT LPAREN ExpI RPAREN SEMICOLON crea_print .)
    PRINT           reduce using rule 98 (Print -> PRINT LPAREN ExpI RPAREN SEMICOLON crea_print .)
    FOR             reduce using rule 98 (Print -> PRINT LPAREN ExpI RPAREN SEMICOLON crea_print .)
    WHILE           reduce using rule 98 (Print -> PRINT LPAREN ExpI RPAREN SEMICOLON crea_print .)
    DO              reduce using rule 98 (Print -> PRINT LPAREN ExpI RPAREN SEMICOLON crea_print .)
    TUR             reduce using rule 98 (Print -> PRINT LPAREN ExpI RPAREN SEMICOLON crea_print .)
    RET             reduce using rule 98 (Print -> PRINT LPAREN ExpI RPAREN SEMICOLON crea_print .)
    RBRACKET        reduce using rule 98 (Print -> PRINT LPAREN ExpI RPAREN SEMICOLON crea_print .)


state 234

    (110) For -> FOR LPAREN VAR_ID ASSIGN ExpI SEMICOLON . ExpI SEMICOLON VAR_ID Exp_ciclo RPAREN LBRACKET reg_brack RBRACKET
    (23) ExpI -> . ExpK resuelve_operadores_relacionales
    (24) ExpI -> . ExpK Operandos push_operador_PilaOperadores ExpK resuelve_operadores_relacionales
    (32) ExpK -> . ExpT resuelve_termino
    (33) ExpK -> . ExpT resuelve_termino pos_SUMRES push_operador_PilaOperadores ExpK
    (37) ExpT -> . ExpF resuelve_factor
    (38) ExpT -> . ExpF resuelve_factor pos_MULTDIV push_operador_PilaOperadores ExpT
    (42) ExpF -> . VAR_CTE
    (43) ExpF -> . LPAREN agrega_falso ExpI RPAREN quita_falso
    (44) ExpF -> . VAR_ID push_var_PilaOperandos pos_arreglo
    (45) ExpF -> . llama_funcion
    (46) VAR_CTE -> . VAR_INT push_int_PilaOperandos
    (47) VAR_CTE -> . VAR_DECIMAL push_decimal_PilaOperandos
    (48) VAR_CTE -> . VAR_STRING push_string_PilaOperandos
    (49) VAR_CTE -> . VAR_BOOL push_bool_PilaOperandos
    (58) llama_funcion -> . VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion guarda_resultado_funcion
    (50) VAR_BOOL -> . FALSE
    (51) VAR_BOOL -> . TRUE

    LPAREN          shift and go to state 95
    VAR_ID          shift and go to state 96
    VAR_INT         shift and go to state 98
    VAR_DECIMAL     shift and go to state 99
    VAR_STRING      shift and go to state 100
    FALSE           shift and go to state 102
    TRUE            shift and go to state 103

    ExpI                           shift and go to state 260
    ExpK                           shift and go to state 91
    ExpT                           shift and go to state 92
    ExpF                           shift and go to state 93
    VAR_CTE                        shift and go to state 94
    llama_funcion                  shift and go to state 97
    VAR_BOOL                       shift and go to state 101

state 235

    (105) While -> WHILE guarda_numero_cuadruplo LPAREN ExpI RPAREN crea_GOTOF . LBRACKET reg_brack RBRACKET regresa_inicio_while

    LBRACKET        shift and go to state 261


state 236

    (108) DoWhile -> DO guarda_numero_cuadruplo LBRACKET reg_brack RBRACKET WHILE . LPAREN ExpI RPAREN SEMICOLON crea_GOTOV

    LPAREN          shift and go to state 262


state 237

    (133) Forward -> TUR POINT FORWARD LPAREN ExpI RPAREN . SEMICOLON crea_cuadruplo_forward

    SEMICOLON       shift and go to state 263


state 238

    (135) Right -> TUR POINT RIGHT LPAREN ExpI RPAREN . SEMICOLON crea_cuadruplo_right

    SEMICOLON       shift and go to state 264


state 239

    (137) Left -> TUR POINT LEFT LPAREN ExpI RPAREN . SEMICOLON crea_cuadruplo_left

    SEMICOLON       shift and go to state 265


state 240

    (139) Circle -> TUR POINT CIRCLE LPAREN ExpI RPAREN . SEMICOLON crea_cuadruplo_circle

    SEMICOLON       shift and go to state 266


state 241

    (155) Position -> TUR POINT POS LPAREN ExpI COMMA . ExpI RPAREN SEMICOLON crea_cuadruplo_pos
    (23) ExpI -> . ExpK resuelve_operadores_relacionales
    (24) ExpI -> . ExpK Operandos push_operador_PilaOperadores ExpK resuelve_operadores_relacionales
    (32) ExpK -> . ExpT resuelve_termino
    (33) ExpK -> . ExpT resuelve_termino pos_SUMRES push_operador_PilaOperadores ExpK
    (37) ExpT -> . ExpF resuelve_factor
    (38) ExpT -> . ExpF resuelve_factor pos_MULTDIV push_operador_PilaOperadores ExpT
    (42) ExpF -> . VAR_CTE
    (43) ExpF -> . LPAREN agrega_falso ExpI RPAREN quita_falso
    (44) ExpF -> . VAR_ID push_var_PilaOperandos pos_arreglo
    (45) ExpF -> . llama_funcion
    (46) VAR_CTE -> . VAR_INT push_int_PilaOperandos
    (47) VAR_CTE -> . VAR_DECIMAL push_decimal_PilaOperandos
    (48) VAR_CTE -> . VAR_STRING push_string_PilaOperandos
    (49) VAR_CTE -> . VAR_BOOL push_bool_PilaOperandos
    (58) llama_funcion -> . VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion guarda_resultado_funcion
    (50) VAR_BOOL -> . FALSE
    (51) VAR_BOOL -> . TRUE

    LPAREN          shift and go to state 95
    VAR_ID          shift and go to state 96
    VAR_INT         shift and go to state 98
    VAR_DECIMAL     shift and go to state 99
    VAR_STRING      shift and go to state 100
    FALSE           shift and go to state 102
    TRUE            shift and go to state 103

    ExpI                           shift and go to state 267
    ExpK                           shift and go to state 91
    ExpT                           shift and go to state 92
    ExpF                           shift and go to state 93
    VAR_CTE                        shift and go to state 94
    llama_funcion                  shift and go to state 97
    VAR_BOOL                       shift and go to state 101

state 242

    (157) IniciaTurtle -> TUR POINT TURTLE LPAREN RPAREN SEMICOLON . crea_cuadruplo_inicia
    (158) crea_cuadruplo_inicia -> .

    IF              reduce using rule 158 (crea_cuadruplo_inicia -> .)
    RETURN          reduce using rule 158 (crea_cuadruplo_inicia -> .)
    VAR_ID          reduce using rule 158 (crea_cuadruplo_inicia -> .)
    PRINT           reduce using rule 158 (crea_cuadruplo_inicia -> .)
    FOR             reduce using rule 158 (crea_cuadruplo_inicia -> .)
    WHILE           reduce using rule 158 (crea_cuadruplo_inicia -> .)
    DO              reduce using rule 158 (crea_cuadruplo_inicia -> .)
    TUR             reduce using rule 158 (crea_cuadruplo_inicia -> .)
    RET             reduce using rule 158 (crea_cuadruplo_inicia -> .)
    RBRACKET        reduce using rule 158 (crea_cuadruplo_inicia -> .)

    crea_cuadruplo_inicia          shift and go to state 268

state 243

    (159) TerminaTurtle -> TUR POINT FINISH LPAREN RPAREN SEMICOLON . crea_cuadruplo_termina
    (160) crea_cuadruplo_termina -> .

    IF              reduce using rule 160 (crea_cuadruplo_termina -> .)
    RETURN          reduce using rule 160 (crea_cuadruplo_termina -> .)
    VAR_ID          reduce using rule 160 (crea_cuadruplo_termina -> .)
    PRINT           reduce using rule 160 (crea_cuadruplo_termina -> .)
    FOR             reduce using rule 160 (crea_cuadruplo_termina -> .)
    WHILE           reduce using rule 160 (crea_cuadruplo_termina -> .)
    DO              reduce using rule 160 (crea_cuadruplo_termina -> .)
    TUR             reduce using rule 160 (crea_cuadruplo_termina -> .)
    RET             reduce using rule 160 (crea_cuadruplo_termina -> .)
    RBRACKET        reduce using rule 160 (crea_cuadruplo_termina -> .)

    crea_cuadruplo_termina         shift and go to state 269

state 244

    (147) iniciaFill -> TUR POINT BEGIN_FILL LPAREN RPAREN SEMICOLON . crea_cuadruplo_iniciafill
    (148) crea_cuadruplo_iniciafill -> .

    IF              reduce using rule 148 (crea_cuadruplo_iniciafill -> .)
    RETURN          reduce using rule 148 (crea_cuadruplo_iniciafill -> .)
    VAR_ID          reduce using rule 148 (crea_cuadruplo_iniciafill -> .)
    PRINT           reduce using rule 148 (crea_cuadruplo_iniciafill -> .)
    FOR             reduce using rule 148 (crea_cuadruplo_iniciafill -> .)
    WHILE           reduce using rule 148 (crea_cuadruplo_iniciafill -> .)
    DO              reduce using rule 148 (crea_cuadruplo_iniciafill -> .)
    TUR             reduce using rule 148 (crea_cuadruplo_iniciafill -> .)
    RET             reduce using rule 148 (crea_cuadruplo_iniciafill -> .)
    RBRACKET        reduce using rule 148 (crea_cuadruplo_iniciafill -> .)

    crea_cuadruplo_iniciafill      shift and go to state 270

state 245

    (141) Square -> TUR POINT SQUARE LPAREN ExpI RPAREN . SEMICOLON crea_cuadruplo_square

    SEMICOLON       shift and go to state 271


state 246

    (143) Rectangle -> TUR POINT RECTANGLE LPAREN ExpI COMMA . ExpI RPAREN SEMICOLON crea_cuadruplo_rectangle
    (23) ExpI -> . ExpK resuelve_operadores_relacionales
    (24) ExpI -> . ExpK Operandos push_operador_PilaOperadores ExpK resuelve_operadores_relacionales
    (32) ExpK -> . ExpT resuelve_termino
    (33) ExpK -> . ExpT resuelve_termino pos_SUMRES push_operador_PilaOperadores ExpK
    (37) ExpT -> . ExpF resuelve_factor
    (38) ExpT -> . ExpF resuelve_factor pos_MULTDIV push_operador_PilaOperadores ExpT
    (42) ExpF -> . VAR_CTE
    (43) ExpF -> . LPAREN agrega_falso ExpI RPAREN quita_falso
    (44) ExpF -> . VAR_ID push_var_PilaOperandos pos_arreglo
    (45) ExpF -> . llama_funcion
    (46) VAR_CTE -> . VAR_INT push_int_PilaOperandos
    (47) VAR_CTE -> . VAR_DECIMAL push_decimal_PilaOperandos
    (48) VAR_CTE -> . VAR_STRING push_string_PilaOperandos
    (49) VAR_CTE -> . VAR_BOOL push_bool_PilaOperandos
    (58) llama_funcion -> . VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion guarda_resultado_funcion
    (50) VAR_BOOL -> . FALSE
    (51) VAR_BOOL -> . TRUE

    LPAREN          shift and go to state 95
    VAR_ID          shift and go to state 96
    VAR_INT         shift and go to state 98
    VAR_DECIMAL     shift and go to state 99
    VAR_STRING      shift and go to state 100
    FALSE           shift and go to state 102
    TRUE            shift and go to state 103

    ExpI                           shift and go to state 272
    ExpK                           shift and go to state 91
    ExpT                           shift and go to state 92
    ExpF                           shift and go to state 93
    VAR_CTE                        shift and go to state 94
    llama_funcion                  shift and go to state 97
    VAR_BOOL                       shift and go to state 101

state 247

    (145) Triangle -> TUR POINT TRIANGLE LPAREN ExpI RPAREN . SEMICOLON crea_cuadruplo_triangle

    SEMICOLON       shift and go to state 273


state 248

    (149) terminaFill -> TUR POINT END_FILL LPAREN RPAREN SEMICOLON . crea_cuadruplo_terminafill
    (150) crea_cuadruplo_terminafill -> .

    IF              reduce using rule 150 (crea_cuadruplo_terminafill -> .)
    RETURN          reduce using rule 150 (crea_cuadruplo_terminafill -> .)
    VAR_ID          reduce using rule 150 (crea_cuadruplo_terminafill -> .)
    PRINT           reduce using rule 150 (crea_cuadruplo_terminafill -> .)
    FOR             reduce using rule 150 (crea_cuadruplo_terminafill -> .)
    WHILE           reduce using rule 150 (crea_cuadruplo_terminafill -> .)
    DO              reduce using rule 150 (crea_cuadruplo_terminafill -> .)
    TUR             reduce using rule 150 (crea_cuadruplo_terminafill -> .)
    RET             reduce using rule 150 (crea_cuadruplo_terminafill -> .)
    RBRACKET        reduce using rule 150 (crea_cuadruplo_terminafill -> .)

    crea_cuadruplo_terminafill     shift and go to state 274

state 249

    (151) colorFill -> TUR POINT COLOR LPAREN ExpI RPAREN . SEMICOLON crea_cuadruplo_colorFill

    SEMICOLON       shift and go to state 275


state 250

    (153) colorPen -> TUR POINT PENCOLOR LPAREN ExpI RPAREN . SEMICOLON crea_cuadruplo_colorPen

    SEMICOLON       shift and go to state 276


state 251

    (71) funciones -> FUNC tipo_funcion VAR_ID LPAREN param RPAREN agrega_funcion LBRACKET Vars reg_brack RBRACKET fin_func_cuad funciones .

    MAIN            reduce using rule 71 (funciones -> FUNC tipo_funcion VAR_ID LPAREN param RPAREN agrega_funcion LBRACKET Vars reg_brack RBRACKET fin_func_cuad funciones .)


state 252

    (90) Condicion -> IF LPAREN ExpI RPAREN crea_GOTOF LBRACKET reg_brack . RBRACKET pos_else llena_cuadruplo_if

    RBRACKET        shift and go to state 277


state 253

    (58) llama_funcion -> VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN . quita_falso resuelve_llamada_funcion guarda_resultado_funcion
    (57) quita_falso -> .

    MULT            reduce using rule 57 (quita_falso -> .)
    DIV             reduce using rule 57 (quita_falso -> .)
    PLUS            reduce using rule 57 (quita_falso -> .)
    MINUS           reduce using rule 57 (quita_falso -> .)
    LT              reduce using rule 57 (quita_falso -> .)
    GT              reduce using rule 57 (quita_falso -> .)
    NE              reduce using rule 57 (quita_falso -> .)
    LE              reduce using rule 57 (quita_falso -> .)
    GE              reduce using rule 57 (quita_falso -> .)
    EQ              reduce using rule 57 (quita_falso -> .)
    SEMICOLON       reduce using rule 57 (quita_falso -> .)
    RPAREN          reduce using rule 57 (quita_falso -> .)
    COMMA           reduce using rule 57 (quita_falso -> .)
    SRBRACKET       reduce using rule 57 (quita_falso -> .)

    quita_falso                    shift and go to state 278

state 254

    (17) Asignacion -> VAR_ID push_var_PilaOperandos pos_arreglo ASSIGN push_operador_PilaOperadores ExpI SEMICOLON . resuelve_asignacion
    (22) resuelve_asignacion -> .

    IF              reduce using rule 22 (resuelve_asignacion -> .)
    RETURN          reduce using rule 22 (resuelve_asignacion -> .)
    VAR_ID          reduce using rule 22 (resuelve_asignacion -> .)
    PRINT           reduce using rule 22 (resuelve_asignacion -> .)
    FOR             reduce using rule 22 (resuelve_asignacion -> .)
    WHILE           reduce using rule 22 (resuelve_asignacion -> .)
    DO              reduce using rule 22 (resuelve_asignacion -> .)
    TUR             reduce using rule 22 (resuelve_asignacion -> .)
    RET             reduce using rule 22 (resuelve_asignacion -> .)
    RBRACKET        reduce using rule 22 (resuelve_asignacion -> .)

    resuelve_asignacion            shift and go to state 279

state 255

    (18) Asignacion -> VAR_ID push_var_PilaOperandos pos_arreglo ASSIGN push_operador_PilaOperadores READ LPAREN . ExpI RPAREN crea_cuadruplo_read SEMICOLON resuelve_asignacion
    (23) ExpI -> . ExpK resuelve_operadores_relacionales
    (24) ExpI -> . ExpK Operandos push_operador_PilaOperadores ExpK resuelve_operadores_relacionales
    (32) ExpK -> . ExpT resuelve_termino
    (33) ExpK -> . ExpT resuelve_termino pos_SUMRES push_operador_PilaOperadores ExpK
    (37) ExpT -> . ExpF resuelve_factor
    (38) ExpT -> . ExpF resuelve_factor pos_MULTDIV push_operador_PilaOperadores ExpT
    (42) ExpF -> . VAR_CTE
    (43) ExpF -> . LPAREN agrega_falso ExpI RPAREN quita_falso
    (44) ExpF -> . VAR_ID push_var_PilaOperandos pos_arreglo
    (45) ExpF -> . llama_funcion
    (46) VAR_CTE -> . VAR_INT push_int_PilaOperandos
    (47) VAR_CTE -> . VAR_DECIMAL push_decimal_PilaOperandos
    (48) VAR_CTE -> . VAR_STRING push_string_PilaOperandos
    (49) VAR_CTE -> . VAR_BOOL push_bool_PilaOperandos
    (58) llama_funcion -> . VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion guarda_resultado_funcion
    (50) VAR_BOOL -> . FALSE
    (51) VAR_BOOL -> . TRUE

    LPAREN          shift and go to state 95
    VAR_ID          shift and go to state 96
    VAR_INT         shift and go to state 98
    VAR_DECIMAL     shift and go to state 99
    VAR_STRING      shift and go to state 100
    FALSE           shift and go to state 102
    TRUE            shift and go to state 103

    ExpI                           shift and go to state 280
    ExpK                           shift and go to state 91
    ExpT                           shift and go to state 92
    ExpF                           shift and go to state 93
    VAR_CTE                        shift and go to state 94
    llama_funcion                  shift and go to state 97
    VAR_BOOL                       shift and go to state 101

state 256

    (67) pos_arreglo -> SLBRACKET checa_var_arr agrega_falso ExpI crea_cuadruplo_ver . quita_falso SRBRACKET
    (57) quita_falso -> .

    SRBRACKET       reduce using rule 57 (quita_falso -> .)

    quita_falso                    shift and go to state 281

state 257

    (100) Llamada_Func -> VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso . resuelve_llamada_funcion SEMICOLON checa_void
    (65) resuelve_llamada_funcion -> .

    SEMICOLON       reduce using rule 65 (resuelve_llamada_funcion -> .)

    resuelve_llamada_funcion       shift and go to state 282

state 258

    (60) argumentos -> ExpI resuelve_argumentos mas_argumentos .

    RPAREN          reduce using rule 60 (argumentos -> ExpI resuelve_argumentos mas_argumentos .)


state 259

    (62) mas_argumentos -> COMMA . ExpI resuelve_argumentos mas_argumentos
    (23) ExpI -> . ExpK resuelve_operadores_relacionales
    (24) ExpI -> . ExpK Operandos push_operador_PilaOperadores ExpK resuelve_operadores_relacionales
    (32) ExpK -> . ExpT resuelve_termino
    (33) ExpK -> . ExpT resuelve_termino pos_SUMRES push_operador_PilaOperadores ExpK
    (37) ExpT -> . ExpF resuelve_factor
    (38) ExpT -> . ExpF resuelve_factor pos_MULTDIV push_operador_PilaOperadores ExpT
    (42) ExpF -> . VAR_CTE
    (43) ExpF -> . LPAREN agrega_falso ExpI RPAREN quita_falso
    (44) ExpF -> . VAR_ID push_var_PilaOperandos pos_arreglo
    (45) ExpF -> . llama_funcion
    (46) VAR_CTE -> . VAR_INT push_int_PilaOperandos
    (47) VAR_CTE -> . VAR_DECIMAL push_decimal_PilaOperandos
    (48) VAR_CTE -> . VAR_STRING push_string_PilaOperandos
    (49) VAR_CTE -> . VAR_BOOL push_bool_PilaOperandos
    (58) llama_funcion -> . VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion guarda_resultado_funcion
    (50) VAR_BOOL -> . FALSE
    (51) VAR_BOOL -> . TRUE

    LPAREN          shift and go to state 95
    VAR_ID          shift and go to state 96
    VAR_INT         shift and go to state 98
    VAR_DECIMAL     shift and go to state 99
    VAR_STRING      shift and go to state 100
    FALSE           shift and go to state 102
    TRUE            shift and go to state 103

    ExpI                           shift and go to state 283
    ExpK                           shift and go to state 91
    ExpT                           shift and go to state 92
    ExpF                           shift and go to state 93
    VAR_CTE                        shift and go to state 94
    llama_funcion                  shift and go to state 97
    VAR_BOOL                       shift and go to state 101

state 260

    (110) For -> FOR LPAREN VAR_ID ASSIGN ExpI SEMICOLON ExpI . SEMICOLON VAR_ID Exp_ciclo RPAREN LBRACKET reg_brack RBRACKET

    SEMICOLON       shift and go to state 284


state 261

    (105) While -> WHILE guarda_numero_cuadruplo LPAREN ExpI RPAREN crea_GOTOF LBRACKET . reg_brack RBRACKET regresa_inicio_while
    (81) reg_brack -> . Estatutos reg_brack
    (82) reg_brack -> .
    (83) Estatutos -> . Condicion
    (84) Estatutos -> . Ciclo
    (85) Estatutos -> . Return
    (86) Estatutos -> . Asignacion
    (87) Estatutos -> . Print
    (88) Estatutos -> . Llamada_Func
    (89) Estatutos -> . Turtle
    (90) Condicion -> . IF LPAREN ExpI RPAREN crea_GOTOF LBRACKET reg_brack RBRACKET pos_else llena_cuadruplo_if
    (102) Ciclo -> . For
    (103) Ciclo -> . While
    (104) Ciclo -> . DoWhile
    (96) Return -> . RETURN ExpI SEMICOLON resuelve_return
    (17) Asignacion -> . VAR_ID push_var_PilaOperandos pos_arreglo ASSIGN push_operador_PilaOperadores ExpI SEMICOLON resuelve_asignacion
    (18) Asignacion -> . VAR_ID push_var_PilaOperandos pos_arreglo ASSIGN push_operador_PilaOperadores READ LPAREN ExpI RPAREN crea_cuadruplo_read SEMICOLON resuelve_asignacion
    (98) Print -> . PRINT LPAREN ExpI RPAREN SEMICOLON crea_print
    (100) Llamada_Func -> . VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion SEMICOLON checa_void
    (119) Turtle -> . Forward
    (120) Turtle -> . Right
    (121) Turtle -> . Left
    (122) Turtle -> . Circle
    (123) Turtle -> . Position
    (124) Turtle -> . IniciaTurtle
    (125) Turtle -> . TerminaTurtle
    (126) Turtle -> . iniciaFill
    (127) Turtle -> . Square
    (128) Turtle -> . Rectangle
    (129) Turtle -> . Triangle
    (130) Turtle -> . terminaFill
    (131) Turtle -> . colorFill
    (132) Turtle -> . colorPen
    (110) For -> . FOR LPAREN VAR_ID ASSIGN ExpI SEMICOLON ExpI SEMICOLON VAR_ID Exp_ciclo RPAREN LBRACKET reg_brack RBRACKET
    (105) While -> . WHILE guarda_numero_cuadruplo LPAREN ExpI RPAREN crea_GOTOF LBRACKET reg_brack RBRACKET regresa_inicio_while
    (108) DoWhile -> . DO guarda_numero_cuadruplo LBRACKET reg_brack RBRACKET WHILE LPAREN ExpI RPAREN SEMICOLON crea_GOTOV
    (133) Forward -> . TUR POINT FORWARD LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_forward
    (135) Right -> . TUR POINT RIGHT LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_right
    (137) Left -> . TUR POINT LEFT LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_left
    (139) Circle -> . TUR POINT CIRCLE LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_circle
    (155) Position -> . TUR POINT POS LPAREN ExpI COMMA ExpI RPAREN SEMICOLON crea_cuadruplo_pos
    (157) IniciaTurtle -> . TUR POINT TURTLE LPAREN RPAREN SEMICOLON crea_cuadruplo_inicia
    (159) TerminaTurtle -> . TUR POINT FINISH LPAREN RPAREN SEMICOLON crea_cuadruplo_termina
    (147) iniciaFill -> . TUR POINT BEGIN_FILL LPAREN RPAREN SEMICOLON crea_cuadruplo_iniciafill
    (141) Square -> . TUR POINT SQUARE LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_square
    (143) Rectangle -> . TUR POINT RECTANGLE LPAREN ExpI COMMA ExpI RPAREN SEMICOLON crea_cuadruplo_rectangle
    (145) Triangle -> . TUR POINT TRIANGLE LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_triangle
    (149) terminaFill -> . TUR POINT END_FILL LPAREN RPAREN SEMICOLON crea_cuadruplo_terminafill
    (151) colorFill -> . TUR POINT COLOR LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_colorFill
    (153) colorPen -> . TUR POINT PENCOLOR LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_colorPen

    RBRACKET        reduce using rule 82 (reg_brack -> .)
    IF              shift and go to state 59
    RETURN          shift and go to state 63
    VAR_ID          shift and go to state 64
    PRINT           shift and go to state 65
    FOR             shift and go to state 80
    WHILE           shift and go to state 81
    DO              shift and go to state 82
    TUR             shift and go to state 83

    reg_brack                      shift and go to state 285
    Estatutos                      shift and go to state 51
    Condicion                      shift and go to state 52
    Ciclo                          shift and go to state 53
    Return                         shift and go to state 54
    Asignacion                     shift and go to state 55
    Print                          shift and go to state 56
    Llamada_Func                   shift and go to state 57
    Turtle                         shift and go to state 58
    For                            shift and go to state 60
    While                          shift and go to state 61
    DoWhile                        shift and go to state 62
    Forward                        shift and go to state 66
    Right                          shift and go to state 67
    Left                           shift and go to state 68
    Circle                         shift and go to state 69
    Position                       shift and go to state 70
    IniciaTurtle                   shift and go to state 71
    TerminaTurtle                  shift and go to state 72
    iniciaFill                     shift and go to state 73
    Square                         shift and go to state 74
    Rectangle                      shift and go to state 75
    Triangle                       shift and go to state 76
    terminaFill                    shift and go to state 77
    colorFill                      shift and go to state 78
    colorPen                       shift and go to state 79

state 262

    (108) DoWhile -> DO guarda_numero_cuadruplo LBRACKET reg_brack RBRACKET WHILE LPAREN . ExpI RPAREN SEMICOLON crea_GOTOV
    (23) ExpI -> . ExpK resuelve_operadores_relacionales
    (24) ExpI -> . ExpK Operandos push_operador_PilaOperadores ExpK resuelve_operadores_relacionales
    (32) ExpK -> . ExpT resuelve_termino
    (33) ExpK -> . ExpT resuelve_termino pos_SUMRES push_operador_PilaOperadores ExpK
    (37) ExpT -> . ExpF resuelve_factor
    (38) ExpT -> . ExpF resuelve_factor pos_MULTDIV push_operador_PilaOperadores ExpT
    (42) ExpF -> . VAR_CTE
    (43) ExpF -> . LPAREN agrega_falso ExpI RPAREN quita_falso
    (44) ExpF -> . VAR_ID push_var_PilaOperandos pos_arreglo
    (45) ExpF -> . llama_funcion
    (46) VAR_CTE -> . VAR_INT push_int_PilaOperandos
    (47) VAR_CTE -> . VAR_DECIMAL push_decimal_PilaOperandos
    (48) VAR_CTE -> . VAR_STRING push_string_PilaOperandos
    (49) VAR_CTE -> . VAR_BOOL push_bool_PilaOperandos
    (58) llama_funcion -> . VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion guarda_resultado_funcion
    (50) VAR_BOOL -> . FALSE
    (51) VAR_BOOL -> . TRUE

    LPAREN          shift and go to state 95
    VAR_ID          shift and go to state 96
    VAR_INT         shift and go to state 98
    VAR_DECIMAL     shift and go to state 99
    VAR_STRING      shift and go to state 100
    FALSE           shift and go to state 102
    TRUE            shift and go to state 103

    ExpI                           shift and go to state 286
    ExpK                           shift and go to state 91
    ExpT                           shift and go to state 92
    ExpF                           shift and go to state 93
    VAR_CTE                        shift and go to state 94
    llama_funcion                  shift and go to state 97
    VAR_BOOL                       shift and go to state 101

state 263

    (133) Forward -> TUR POINT FORWARD LPAREN ExpI RPAREN SEMICOLON . crea_cuadruplo_forward
    (134) crea_cuadruplo_forward -> .

    IF              reduce using rule 134 (crea_cuadruplo_forward -> .)
    RETURN          reduce using rule 134 (crea_cuadruplo_forward -> .)
    VAR_ID          reduce using rule 134 (crea_cuadruplo_forward -> .)
    PRINT           reduce using rule 134 (crea_cuadruplo_forward -> .)
    FOR             reduce using rule 134 (crea_cuadruplo_forward -> .)
    WHILE           reduce using rule 134 (crea_cuadruplo_forward -> .)
    DO              reduce using rule 134 (crea_cuadruplo_forward -> .)
    TUR             reduce using rule 134 (crea_cuadruplo_forward -> .)
    RET             reduce using rule 134 (crea_cuadruplo_forward -> .)
    RBRACKET        reduce using rule 134 (crea_cuadruplo_forward -> .)

    crea_cuadruplo_forward         shift and go to state 287

state 264

    (135) Right -> TUR POINT RIGHT LPAREN ExpI RPAREN SEMICOLON . crea_cuadruplo_right
    (136) crea_cuadruplo_right -> .

    IF              reduce using rule 136 (crea_cuadruplo_right -> .)
    RETURN          reduce using rule 136 (crea_cuadruplo_right -> .)
    VAR_ID          reduce using rule 136 (crea_cuadruplo_right -> .)
    PRINT           reduce using rule 136 (crea_cuadruplo_right -> .)
    FOR             reduce using rule 136 (crea_cuadruplo_right -> .)
    WHILE           reduce using rule 136 (crea_cuadruplo_right -> .)
    DO              reduce using rule 136 (crea_cuadruplo_right -> .)
    TUR             reduce using rule 136 (crea_cuadruplo_right -> .)
    RET             reduce using rule 136 (crea_cuadruplo_right -> .)
    RBRACKET        reduce using rule 136 (crea_cuadruplo_right -> .)

    crea_cuadruplo_right           shift and go to state 288

state 265

    (137) Left -> TUR POINT LEFT LPAREN ExpI RPAREN SEMICOLON . crea_cuadruplo_left
    (138) crea_cuadruplo_left -> .

    IF              reduce using rule 138 (crea_cuadruplo_left -> .)
    RETURN          reduce using rule 138 (crea_cuadruplo_left -> .)
    VAR_ID          reduce using rule 138 (crea_cuadruplo_left -> .)
    PRINT           reduce using rule 138 (crea_cuadruplo_left -> .)
    FOR             reduce using rule 138 (crea_cuadruplo_left -> .)
    WHILE           reduce using rule 138 (crea_cuadruplo_left -> .)
    DO              reduce using rule 138 (crea_cuadruplo_left -> .)
    TUR             reduce using rule 138 (crea_cuadruplo_left -> .)
    RET             reduce using rule 138 (crea_cuadruplo_left -> .)
    RBRACKET        reduce using rule 138 (crea_cuadruplo_left -> .)

    crea_cuadruplo_left            shift and go to state 289

state 266

    (139) Circle -> TUR POINT CIRCLE LPAREN ExpI RPAREN SEMICOLON . crea_cuadruplo_circle
    (140) crea_cuadruplo_circle -> .

    IF              reduce using rule 140 (crea_cuadruplo_circle -> .)
    RETURN          reduce using rule 140 (crea_cuadruplo_circle -> .)
    VAR_ID          reduce using rule 140 (crea_cuadruplo_circle -> .)
    PRINT           reduce using rule 140 (crea_cuadruplo_circle -> .)
    FOR             reduce using rule 140 (crea_cuadruplo_circle -> .)
    WHILE           reduce using rule 140 (crea_cuadruplo_circle -> .)
    DO              reduce using rule 140 (crea_cuadruplo_circle -> .)
    TUR             reduce using rule 140 (crea_cuadruplo_circle -> .)
    RET             reduce using rule 140 (crea_cuadruplo_circle -> .)
    RBRACKET        reduce using rule 140 (crea_cuadruplo_circle -> .)

    crea_cuadruplo_circle          shift and go to state 290

state 267

    (155) Position -> TUR POINT POS LPAREN ExpI COMMA ExpI . RPAREN SEMICOLON crea_cuadruplo_pos

    RPAREN          shift and go to state 291


state 268

    (157) IniciaTurtle -> TUR POINT TURTLE LPAREN RPAREN SEMICOLON crea_cuadruplo_inicia .

    IF              reduce using rule 157 (IniciaTurtle -> TUR POINT TURTLE LPAREN RPAREN SEMICOLON crea_cuadruplo_inicia .)
    RETURN          reduce using rule 157 (IniciaTurtle -> TUR POINT TURTLE LPAREN RPAREN SEMICOLON crea_cuadruplo_inicia .)
    VAR_ID          reduce using rule 157 (IniciaTurtle -> TUR POINT TURTLE LPAREN RPAREN SEMICOLON crea_cuadruplo_inicia .)
    PRINT           reduce using rule 157 (IniciaTurtle -> TUR POINT TURTLE LPAREN RPAREN SEMICOLON crea_cuadruplo_inicia .)
    FOR             reduce using rule 157 (IniciaTurtle -> TUR POINT TURTLE LPAREN RPAREN SEMICOLON crea_cuadruplo_inicia .)
    WHILE           reduce using rule 157 (IniciaTurtle -> TUR POINT TURTLE LPAREN RPAREN SEMICOLON crea_cuadruplo_inicia .)
    DO              reduce using rule 157 (IniciaTurtle -> TUR POINT TURTLE LPAREN RPAREN SEMICOLON crea_cuadruplo_inicia .)
    TUR             reduce using rule 157 (IniciaTurtle -> TUR POINT TURTLE LPAREN RPAREN SEMICOLON crea_cuadruplo_inicia .)
    RET             reduce using rule 157 (IniciaTurtle -> TUR POINT TURTLE LPAREN RPAREN SEMICOLON crea_cuadruplo_inicia .)
    RBRACKET        reduce using rule 157 (IniciaTurtle -> TUR POINT TURTLE LPAREN RPAREN SEMICOLON crea_cuadruplo_inicia .)


state 269

    (159) TerminaTurtle -> TUR POINT FINISH LPAREN RPAREN SEMICOLON crea_cuadruplo_termina .

    IF              reduce using rule 159 (TerminaTurtle -> TUR POINT FINISH LPAREN RPAREN SEMICOLON crea_cuadruplo_termina .)
    RETURN          reduce using rule 159 (TerminaTurtle -> TUR POINT FINISH LPAREN RPAREN SEMICOLON crea_cuadruplo_termina .)
    VAR_ID          reduce using rule 159 (TerminaTurtle -> TUR POINT FINISH LPAREN RPAREN SEMICOLON crea_cuadruplo_termina .)
    PRINT           reduce using rule 159 (TerminaTurtle -> TUR POINT FINISH LPAREN RPAREN SEMICOLON crea_cuadruplo_termina .)
    FOR             reduce using rule 159 (TerminaTurtle -> TUR POINT FINISH LPAREN RPAREN SEMICOLON crea_cuadruplo_termina .)
    WHILE           reduce using rule 159 (TerminaTurtle -> TUR POINT FINISH LPAREN RPAREN SEMICOLON crea_cuadruplo_termina .)
    DO              reduce using rule 159 (TerminaTurtle -> TUR POINT FINISH LPAREN RPAREN SEMICOLON crea_cuadruplo_termina .)
    TUR             reduce using rule 159 (TerminaTurtle -> TUR POINT FINISH LPAREN RPAREN SEMICOLON crea_cuadruplo_termina .)
    RET             reduce using rule 159 (TerminaTurtle -> TUR POINT FINISH LPAREN RPAREN SEMICOLON crea_cuadruplo_termina .)
    RBRACKET        reduce using rule 159 (TerminaTurtle -> TUR POINT FINISH LPAREN RPAREN SEMICOLON crea_cuadruplo_termina .)


state 270

    (147) iniciaFill -> TUR POINT BEGIN_FILL LPAREN RPAREN SEMICOLON crea_cuadruplo_iniciafill .

    IF              reduce using rule 147 (iniciaFill -> TUR POINT BEGIN_FILL LPAREN RPAREN SEMICOLON crea_cuadruplo_iniciafill .)
    RETURN          reduce using rule 147 (iniciaFill -> TUR POINT BEGIN_FILL LPAREN RPAREN SEMICOLON crea_cuadruplo_iniciafill .)
    VAR_ID          reduce using rule 147 (iniciaFill -> TUR POINT BEGIN_FILL LPAREN RPAREN SEMICOLON crea_cuadruplo_iniciafill .)
    PRINT           reduce using rule 147 (iniciaFill -> TUR POINT BEGIN_FILL LPAREN RPAREN SEMICOLON crea_cuadruplo_iniciafill .)
    FOR             reduce using rule 147 (iniciaFill -> TUR POINT BEGIN_FILL LPAREN RPAREN SEMICOLON crea_cuadruplo_iniciafill .)
    WHILE           reduce using rule 147 (iniciaFill -> TUR POINT BEGIN_FILL LPAREN RPAREN SEMICOLON crea_cuadruplo_iniciafill .)
    DO              reduce using rule 147 (iniciaFill -> TUR POINT BEGIN_FILL LPAREN RPAREN SEMICOLON crea_cuadruplo_iniciafill .)
    TUR             reduce using rule 147 (iniciaFill -> TUR POINT BEGIN_FILL LPAREN RPAREN SEMICOLON crea_cuadruplo_iniciafill .)
    RET             reduce using rule 147 (iniciaFill -> TUR POINT BEGIN_FILL LPAREN RPAREN SEMICOLON crea_cuadruplo_iniciafill .)
    RBRACKET        reduce using rule 147 (iniciaFill -> TUR POINT BEGIN_FILL LPAREN RPAREN SEMICOLON crea_cuadruplo_iniciafill .)


state 271

    (141) Square -> TUR POINT SQUARE LPAREN ExpI RPAREN SEMICOLON . crea_cuadruplo_square
    (142) crea_cuadruplo_square -> .

    IF              reduce using rule 142 (crea_cuadruplo_square -> .)
    RETURN          reduce using rule 142 (crea_cuadruplo_square -> .)
    VAR_ID          reduce using rule 142 (crea_cuadruplo_square -> .)
    PRINT           reduce using rule 142 (crea_cuadruplo_square -> .)
    FOR             reduce using rule 142 (crea_cuadruplo_square -> .)
    WHILE           reduce using rule 142 (crea_cuadruplo_square -> .)
    DO              reduce using rule 142 (crea_cuadruplo_square -> .)
    TUR             reduce using rule 142 (crea_cuadruplo_square -> .)
    RET             reduce using rule 142 (crea_cuadruplo_square -> .)
    RBRACKET        reduce using rule 142 (crea_cuadruplo_square -> .)

    crea_cuadruplo_square          shift and go to state 292

state 272

    (143) Rectangle -> TUR POINT RECTANGLE LPAREN ExpI COMMA ExpI . RPAREN SEMICOLON crea_cuadruplo_rectangle

    RPAREN          shift and go to state 293


state 273

    (145) Triangle -> TUR POINT TRIANGLE LPAREN ExpI RPAREN SEMICOLON . crea_cuadruplo_triangle
    (146) crea_cuadruplo_triangle -> .

    IF              reduce using rule 146 (crea_cuadruplo_triangle -> .)
    RETURN          reduce using rule 146 (crea_cuadruplo_triangle -> .)
    VAR_ID          reduce using rule 146 (crea_cuadruplo_triangle -> .)
    PRINT           reduce using rule 146 (crea_cuadruplo_triangle -> .)
    FOR             reduce using rule 146 (crea_cuadruplo_triangle -> .)
    WHILE           reduce using rule 146 (crea_cuadruplo_triangle -> .)
    DO              reduce using rule 146 (crea_cuadruplo_triangle -> .)
    TUR             reduce using rule 146 (crea_cuadruplo_triangle -> .)
    RET             reduce using rule 146 (crea_cuadruplo_triangle -> .)
    RBRACKET        reduce using rule 146 (crea_cuadruplo_triangle -> .)

    crea_cuadruplo_triangle        shift and go to state 294

state 274

    (149) terminaFill -> TUR POINT END_FILL LPAREN RPAREN SEMICOLON crea_cuadruplo_terminafill .

    IF              reduce using rule 149 (terminaFill -> TUR POINT END_FILL LPAREN RPAREN SEMICOLON crea_cuadruplo_terminafill .)
    RETURN          reduce using rule 149 (terminaFill -> TUR POINT END_FILL LPAREN RPAREN SEMICOLON crea_cuadruplo_terminafill .)
    VAR_ID          reduce using rule 149 (terminaFill -> TUR POINT END_FILL LPAREN RPAREN SEMICOLON crea_cuadruplo_terminafill .)
    PRINT           reduce using rule 149 (terminaFill -> TUR POINT END_FILL LPAREN RPAREN SEMICOLON crea_cuadruplo_terminafill .)
    FOR             reduce using rule 149 (terminaFill -> TUR POINT END_FILL LPAREN RPAREN SEMICOLON crea_cuadruplo_terminafill .)
    WHILE           reduce using rule 149 (terminaFill -> TUR POINT END_FILL LPAREN RPAREN SEMICOLON crea_cuadruplo_terminafill .)
    DO              reduce using rule 149 (terminaFill -> TUR POINT END_FILL LPAREN RPAREN SEMICOLON crea_cuadruplo_terminafill .)
    TUR             reduce using rule 149 (terminaFill -> TUR POINT END_FILL LPAREN RPAREN SEMICOLON crea_cuadruplo_terminafill .)
    RET             reduce using rule 149 (terminaFill -> TUR POINT END_FILL LPAREN RPAREN SEMICOLON crea_cuadruplo_terminafill .)
    RBRACKET        reduce using rule 149 (terminaFill -> TUR POINT END_FILL LPAREN RPAREN SEMICOLON crea_cuadruplo_terminafill .)


state 275

    (151) colorFill -> TUR POINT COLOR LPAREN ExpI RPAREN SEMICOLON . crea_cuadruplo_colorFill
    (152) crea_cuadruplo_colorFill -> .

    IF              reduce using rule 152 (crea_cuadruplo_colorFill -> .)
    RETURN          reduce using rule 152 (crea_cuadruplo_colorFill -> .)
    VAR_ID          reduce using rule 152 (crea_cuadruplo_colorFill -> .)
    PRINT           reduce using rule 152 (crea_cuadruplo_colorFill -> .)
    FOR             reduce using rule 152 (crea_cuadruplo_colorFill -> .)
    WHILE           reduce using rule 152 (crea_cuadruplo_colorFill -> .)
    DO              reduce using rule 152 (crea_cuadruplo_colorFill -> .)
    TUR             reduce using rule 152 (crea_cuadruplo_colorFill -> .)
    RET             reduce using rule 152 (crea_cuadruplo_colorFill -> .)
    RBRACKET        reduce using rule 152 (crea_cuadruplo_colorFill -> .)

    crea_cuadruplo_colorFill       shift and go to state 295

state 276

    (153) colorPen -> TUR POINT PENCOLOR LPAREN ExpI RPAREN SEMICOLON . crea_cuadruplo_colorPen
    (154) crea_cuadruplo_colorPen -> .

    IF              reduce using rule 154 (crea_cuadruplo_colorPen -> .)
    RETURN          reduce using rule 154 (crea_cuadruplo_colorPen -> .)
    VAR_ID          reduce using rule 154 (crea_cuadruplo_colorPen -> .)
    PRINT           reduce using rule 154 (crea_cuadruplo_colorPen -> .)
    FOR             reduce using rule 154 (crea_cuadruplo_colorPen -> .)
    WHILE           reduce using rule 154 (crea_cuadruplo_colorPen -> .)
    DO              reduce using rule 154 (crea_cuadruplo_colorPen -> .)
    TUR             reduce using rule 154 (crea_cuadruplo_colorPen -> .)
    RET             reduce using rule 154 (crea_cuadruplo_colorPen -> .)
    RBRACKET        reduce using rule 154 (crea_cuadruplo_colorPen -> .)

    crea_cuadruplo_colorPen        shift and go to state 296

state 277

    (90) Condicion -> IF LPAREN ExpI RPAREN crea_GOTOF LBRACKET reg_brack RBRACKET . pos_else llena_cuadruplo_if
    (93) pos_else -> . ELSE crea_else_cuadruplo LBRACKET reg_brack RBRACKET
    (94) pos_else -> .

    ELSE            shift and go to state 298
    IF              reduce using rule 94 (pos_else -> .)
    RETURN          reduce using rule 94 (pos_else -> .)
    VAR_ID          reduce using rule 94 (pos_else -> .)
    PRINT           reduce using rule 94 (pos_else -> .)
    FOR             reduce using rule 94 (pos_else -> .)
    WHILE           reduce using rule 94 (pos_else -> .)
    DO              reduce using rule 94 (pos_else -> .)
    TUR             reduce using rule 94 (pos_else -> .)
    RET             reduce using rule 94 (pos_else -> .)
    RBRACKET        reduce using rule 94 (pos_else -> .)

    pos_else                       shift and go to state 297

state 278

    (58) llama_funcion -> VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso . resuelve_llamada_funcion guarda_resultado_funcion
    (65) resuelve_llamada_funcion -> .

    MULT            reduce using rule 65 (resuelve_llamada_funcion -> .)
    DIV             reduce using rule 65 (resuelve_llamada_funcion -> .)
    PLUS            reduce using rule 65 (resuelve_llamada_funcion -> .)
    MINUS           reduce using rule 65 (resuelve_llamada_funcion -> .)
    LT              reduce using rule 65 (resuelve_llamada_funcion -> .)
    GT              reduce using rule 65 (resuelve_llamada_funcion -> .)
    NE              reduce using rule 65 (resuelve_llamada_funcion -> .)
    LE              reduce using rule 65 (resuelve_llamada_funcion -> .)
    GE              reduce using rule 65 (resuelve_llamada_funcion -> .)
    EQ              reduce using rule 65 (resuelve_llamada_funcion -> .)
    SEMICOLON       reduce using rule 65 (resuelve_llamada_funcion -> .)
    RPAREN          reduce using rule 65 (resuelve_llamada_funcion -> .)
    COMMA           reduce using rule 65 (resuelve_llamada_funcion -> .)
    SRBRACKET       reduce using rule 65 (resuelve_llamada_funcion -> .)

    resuelve_llamada_funcion       shift and go to state 299

state 279

    (17) Asignacion -> VAR_ID push_var_PilaOperandos pos_arreglo ASSIGN push_operador_PilaOperadores ExpI SEMICOLON resuelve_asignacion .

    IF              reduce using rule 17 (Asignacion -> VAR_ID push_var_PilaOperandos pos_arreglo ASSIGN push_operador_PilaOperadores ExpI SEMICOLON resuelve_asignacion .)
    RETURN          reduce using rule 17 (Asignacion -> VAR_ID push_var_PilaOperandos pos_arreglo ASSIGN push_operador_PilaOperadores ExpI SEMICOLON resuelve_asignacion .)
    VAR_ID          reduce using rule 17 (Asignacion -> VAR_ID push_var_PilaOperandos pos_arreglo ASSIGN push_operador_PilaOperadores ExpI SEMICOLON resuelve_asignacion .)
    PRINT           reduce using rule 17 (Asignacion -> VAR_ID push_var_PilaOperandos pos_arreglo ASSIGN push_operador_PilaOperadores ExpI SEMICOLON resuelve_asignacion .)
    FOR             reduce using rule 17 (Asignacion -> VAR_ID push_var_PilaOperandos pos_arreglo ASSIGN push_operador_PilaOperadores ExpI SEMICOLON resuelve_asignacion .)
    WHILE           reduce using rule 17 (Asignacion -> VAR_ID push_var_PilaOperandos pos_arreglo ASSIGN push_operador_PilaOperadores ExpI SEMICOLON resuelve_asignacion .)
    DO              reduce using rule 17 (Asignacion -> VAR_ID push_var_PilaOperandos pos_arreglo ASSIGN push_operador_PilaOperadores ExpI SEMICOLON resuelve_asignacion .)
    TUR             reduce using rule 17 (Asignacion -> VAR_ID push_var_PilaOperandos pos_arreglo ASSIGN push_operador_PilaOperadores ExpI SEMICOLON resuelve_asignacion .)
    RET             reduce using rule 17 (Asignacion -> VAR_ID push_var_PilaOperandos pos_arreglo ASSIGN push_operador_PilaOperadores ExpI SEMICOLON resuelve_asignacion .)
    RBRACKET        reduce using rule 17 (Asignacion -> VAR_ID push_var_PilaOperandos pos_arreglo ASSIGN push_operador_PilaOperadores ExpI SEMICOLON resuelve_asignacion .)


state 280

    (18) Asignacion -> VAR_ID push_var_PilaOperandos pos_arreglo ASSIGN push_operador_PilaOperadores READ LPAREN ExpI . RPAREN crea_cuadruplo_read SEMICOLON resuelve_asignacion

    RPAREN          shift and go to state 300


state 281

    (67) pos_arreglo -> SLBRACKET checa_var_arr agrega_falso ExpI crea_cuadruplo_ver quita_falso . SRBRACKET

    SRBRACKET       shift and go to state 301


state 282

    (100) Llamada_Func -> VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion . SEMICOLON checa_void

    SEMICOLON       shift and go to state 302


state 283

    (62) mas_argumentos -> COMMA ExpI . resuelve_argumentos mas_argumentos
    (64) resuelve_argumentos -> .

    COMMA           reduce using rule 64 (resuelve_argumentos -> .)
    RPAREN          reduce using rule 64 (resuelve_argumentos -> .)

    resuelve_argumentos            shift and go to state 303

state 284

    (110) For -> FOR LPAREN VAR_ID ASSIGN ExpI SEMICOLON ExpI SEMICOLON . VAR_ID Exp_ciclo RPAREN LBRACKET reg_brack RBRACKET

    VAR_ID          shift and go to state 304


state 285

    (105) While -> WHILE guarda_numero_cuadruplo LPAREN ExpI RPAREN crea_GOTOF LBRACKET reg_brack . RBRACKET regresa_inicio_while

    RBRACKET        shift and go to state 305


state 286

    (108) DoWhile -> DO guarda_numero_cuadruplo LBRACKET reg_brack RBRACKET WHILE LPAREN ExpI . RPAREN SEMICOLON crea_GOTOV

    RPAREN          shift and go to state 306


state 287

    (133) Forward -> TUR POINT FORWARD LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_forward .

    IF              reduce using rule 133 (Forward -> TUR POINT FORWARD LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_forward .)
    RETURN          reduce using rule 133 (Forward -> TUR POINT FORWARD LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_forward .)
    VAR_ID          reduce using rule 133 (Forward -> TUR POINT FORWARD LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_forward .)
    PRINT           reduce using rule 133 (Forward -> TUR POINT FORWARD LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_forward .)
    FOR             reduce using rule 133 (Forward -> TUR POINT FORWARD LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_forward .)
    WHILE           reduce using rule 133 (Forward -> TUR POINT FORWARD LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_forward .)
    DO              reduce using rule 133 (Forward -> TUR POINT FORWARD LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_forward .)
    TUR             reduce using rule 133 (Forward -> TUR POINT FORWARD LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_forward .)
    RET             reduce using rule 133 (Forward -> TUR POINT FORWARD LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_forward .)
    RBRACKET        reduce using rule 133 (Forward -> TUR POINT FORWARD LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_forward .)


state 288

    (135) Right -> TUR POINT RIGHT LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_right .

    IF              reduce using rule 135 (Right -> TUR POINT RIGHT LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_right .)
    RETURN          reduce using rule 135 (Right -> TUR POINT RIGHT LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_right .)
    VAR_ID          reduce using rule 135 (Right -> TUR POINT RIGHT LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_right .)
    PRINT           reduce using rule 135 (Right -> TUR POINT RIGHT LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_right .)
    FOR             reduce using rule 135 (Right -> TUR POINT RIGHT LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_right .)
    WHILE           reduce using rule 135 (Right -> TUR POINT RIGHT LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_right .)
    DO              reduce using rule 135 (Right -> TUR POINT RIGHT LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_right .)
    TUR             reduce using rule 135 (Right -> TUR POINT RIGHT LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_right .)
    RET             reduce using rule 135 (Right -> TUR POINT RIGHT LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_right .)
    RBRACKET        reduce using rule 135 (Right -> TUR POINT RIGHT LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_right .)


state 289

    (137) Left -> TUR POINT LEFT LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_left .

    IF              reduce using rule 137 (Left -> TUR POINT LEFT LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_left .)
    RETURN          reduce using rule 137 (Left -> TUR POINT LEFT LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_left .)
    VAR_ID          reduce using rule 137 (Left -> TUR POINT LEFT LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_left .)
    PRINT           reduce using rule 137 (Left -> TUR POINT LEFT LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_left .)
    FOR             reduce using rule 137 (Left -> TUR POINT LEFT LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_left .)
    WHILE           reduce using rule 137 (Left -> TUR POINT LEFT LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_left .)
    DO              reduce using rule 137 (Left -> TUR POINT LEFT LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_left .)
    TUR             reduce using rule 137 (Left -> TUR POINT LEFT LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_left .)
    RET             reduce using rule 137 (Left -> TUR POINT LEFT LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_left .)
    RBRACKET        reduce using rule 137 (Left -> TUR POINT LEFT LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_left .)


state 290

    (139) Circle -> TUR POINT CIRCLE LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_circle .

    IF              reduce using rule 139 (Circle -> TUR POINT CIRCLE LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_circle .)
    RETURN          reduce using rule 139 (Circle -> TUR POINT CIRCLE LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_circle .)
    VAR_ID          reduce using rule 139 (Circle -> TUR POINT CIRCLE LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_circle .)
    PRINT           reduce using rule 139 (Circle -> TUR POINT CIRCLE LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_circle .)
    FOR             reduce using rule 139 (Circle -> TUR POINT CIRCLE LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_circle .)
    WHILE           reduce using rule 139 (Circle -> TUR POINT CIRCLE LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_circle .)
    DO              reduce using rule 139 (Circle -> TUR POINT CIRCLE LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_circle .)
    TUR             reduce using rule 139 (Circle -> TUR POINT CIRCLE LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_circle .)
    RET             reduce using rule 139 (Circle -> TUR POINT CIRCLE LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_circle .)
    RBRACKET        reduce using rule 139 (Circle -> TUR POINT CIRCLE LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_circle .)


state 291

    (155) Position -> TUR POINT POS LPAREN ExpI COMMA ExpI RPAREN . SEMICOLON crea_cuadruplo_pos

    SEMICOLON       shift and go to state 307


state 292

    (141) Square -> TUR POINT SQUARE LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_square .

    IF              reduce using rule 141 (Square -> TUR POINT SQUARE LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_square .)
    RETURN          reduce using rule 141 (Square -> TUR POINT SQUARE LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_square .)
    VAR_ID          reduce using rule 141 (Square -> TUR POINT SQUARE LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_square .)
    PRINT           reduce using rule 141 (Square -> TUR POINT SQUARE LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_square .)
    FOR             reduce using rule 141 (Square -> TUR POINT SQUARE LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_square .)
    WHILE           reduce using rule 141 (Square -> TUR POINT SQUARE LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_square .)
    DO              reduce using rule 141 (Square -> TUR POINT SQUARE LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_square .)
    TUR             reduce using rule 141 (Square -> TUR POINT SQUARE LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_square .)
    RET             reduce using rule 141 (Square -> TUR POINT SQUARE LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_square .)
    RBRACKET        reduce using rule 141 (Square -> TUR POINT SQUARE LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_square .)


state 293

    (143) Rectangle -> TUR POINT RECTANGLE LPAREN ExpI COMMA ExpI RPAREN . SEMICOLON crea_cuadruplo_rectangle

    SEMICOLON       shift and go to state 308


state 294

    (145) Triangle -> TUR POINT TRIANGLE LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_triangle .

    IF              reduce using rule 145 (Triangle -> TUR POINT TRIANGLE LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_triangle .)
    RETURN          reduce using rule 145 (Triangle -> TUR POINT TRIANGLE LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_triangle .)
    VAR_ID          reduce using rule 145 (Triangle -> TUR POINT TRIANGLE LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_triangle .)
    PRINT           reduce using rule 145 (Triangle -> TUR POINT TRIANGLE LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_triangle .)
    FOR             reduce using rule 145 (Triangle -> TUR POINT TRIANGLE LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_triangle .)
    WHILE           reduce using rule 145 (Triangle -> TUR POINT TRIANGLE LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_triangle .)
    DO              reduce using rule 145 (Triangle -> TUR POINT TRIANGLE LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_triangle .)
    TUR             reduce using rule 145 (Triangle -> TUR POINT TRIANGLE LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_triangle .)
    RET             reduce using rule 145 (Triangle -> TUR POINT TRIANGLE LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_triangle .)
    RBRACKET        reduce using rule 145 (Triangle -> TUR POINT TRIANGLE LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_triangle .)


state 295

    (151) colorFill -> TUR POINT COLOR LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_colorFill .

    IF              reduce using rule 151 (colorFill -> TUR POINT COLOR LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_colorFill .)
    RETURN          reduce using rule 151 (colorFill -> TUR POINT COLOR LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_colorFill .)
    VAR_ID          reduce using rule 151 (colorFill -> TUR POINT COLOR LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_colorFill .)
    PRINT           reduce using rule 151 (colorFill -> TUR POINT COLOR LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_colorFill .)
    FOR             reduce using rule 151 (colorFill -> TUR POINT COLOR LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_colorFill .)
    WHILE           reduce using rule 151 (colorFill -> TUR POINT COLOR LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_colorFill .)
    DO              reduce using rule 151 (colorFill -> TUR POINT COLOR LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_colorFill .)
    TUR             reduce using rule 151 (colorFill -> TUR POINT COLOR LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_colorFill .)
    RET             reduce using rule 151 (colorFill -> TUR POINT COLOR LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_colorFill .)
    RBRACKET        reduce using rule 151 (colorFill -> TUR POINT COLOR LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_colorFill .)


state 296

    (153) colorPen -> TUR POINT PENCOLOR LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_colorPen .

    IF              reduce using rule 153 (colorPen -> TUR POINT PENCOLOR LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_colorPen .)
    RETURN          reduce using rule 153 (colorPen -> TUR POINT PENCOLOR LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_colorPen .)
    VAR_ID          reduce using rule 153 (colorPen -> TUR POINT PENCOLOR LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_colorPen .)
    PRINT           reduce using rule 153 (colorPen -> TUR POINT PENCOLOR LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_colorPen .)
    FOR             reduce using rule 153 (colorPen -> TUR POINT PENCOLOR LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_colorPen .)
    WHILE           reduce using rule 153 (colorPen -> TUR POINT PENCOLOR LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_colorPen .)
    DO              reduce using rule 153 (colorPen -> TUR POINT PENCOLOR LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_colorPen .)
    TUR             reduce using rule 153 (colorPen -> TUR POINT PENCOLOR LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_colorPen .)
    RET             reduce using rule 153 (colorPen -> TUR POINT PENCOLOR LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_colorPen .)
    RBRACKET        reduce using rule 153 (colorPen -> TUR POINT PENCOLOR LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_colorPen .)


state 297

    (90) Condicion -> IF LPAREN ExpI RPAREN crea_GOTOF LBRACKET reg_brack RBRACKET pos_else . llena_cuadruplo_if
    (92) llena_cuadruplo_if -> .

    IF              reduce using rule 92 (llena_cuadruplo_if -> .)
    RETURN          reduce using rule 92 (llena_cuadruplo_if -> .)
    VAR_ID          reduce using rule 92 (llena_cuadruplo_if -> .)
    PRINT           reduce using rule 92 (llena_cuadruplo_if -> .)
    FOR             reduce using rule 92 (llena_cuadruplo_if -> .)
    WHILE           reduce using rule 92 (llena_cuadruplo_if -> .)
    DO              reduce using rule 92 (llena_cuadruplo_if -> .)
    TUR             reduce using rule 92 (llena_cuadruplo_if -> .)
    RET             reduce using rule 92 (llena_cuadruplo_if -> .)
    RBRACKET        reduce using rule 92 (llena_cuadruplo_if -> .)

    llena_cuadruplo_if             shift and go to state 309

state 298

    (93) pos_else -> ELSE . crea_else_cuadruplo LBRACKET reg_brack RBRACKET
    (95) crea_else_cuadruplo -> .

    LBRACKET        reduce using rule 95 (crea_else_cuadruplo -> .)

    crea_else_cuadruplo            shift and go to state 310

state 299

    (58) llama_funcion -> VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion . guarda_resultado_funcion
    (66) guarda_resultado_funcion -> .

    MULT            reduce using rule 66 (guarda_resultado_funcion -> .)
    DIV             reduce using rule 66 (guarda_resultado_funcion -> .)
    PLUS            reduce using rule 66 (guarda_resultado_funcion -> .)
    MINUS           reduce using rule 66 (guarda_resultado_funcion -> .)
    LT              reduce using rule 66 (guarda_resultado_funcion -> .)
    GT              reduce using rule 66 (guarda_resultado_funcion -> .)
    NE              reduce using rule 66 (guarda_resultado_funcion -> .)
    LE              reduce using rule 66 (guarda_resultado_funcion -> .)
    GE              reduce using rule 66 (guarda_resultado_funcion -> .)
    EQ              reduce using rule 66 (guarda_resultado_funcion -> .)
    SEMICOLON       reduce using rule 66 (guarda_resultado_funcion -> .)
    RPAREN          reduce using rule 66 (guarda_resultado_funcion -> .)
    COMMA           reduce using rule 66 (guarda_resultado_funcion -> .)
    SRBRACKET       reduce using rule 66 (guarda_resultado_funcion -> .)

    guarda_resultado_funcion       shift and go to state 311

state 300

    (18) Asignacion -> VAR_ID push_var_PilaOperandos pos_arreglo ASSIGN push_operador_PilaOperadores READ LPAREN ExpI RPAREN . crea_cuadruplo_read SEMICOLON resuelve_asignacion
    (19) crea_cuadruplo_read -> .

    SEMICOLON       reduce using rule 19 (crea_cuadruplo_read -> .)

    crea_cuadruplo_read            shift and go to state 312

state 301

    (67) pos_arreglo -> SLBRACKET checa_var_arr agrega_falso ExpI crea_cuadruplo_ver quita_falso SRBRACKET .

    ASSIGN          reduce using rule 67 (pos_arreglo -> SLBRACKET checa_var_arr agrega_falso ExpI crea_cuadruplo_ver quita_falso SRBRACKET .)
    MULT            reduce using rule 67 (pos_arreglo -> SLBRACKET checa_var_arr agrega_falso ExpI crea_cuadruplo_ver quita_falso SRBRACKET .)
    DIV             reduce using rule 67 (pos_arreglo -> SLBRACKET checa_var_arr agrega_falso ExpI crea_cuadruplo_ver quita_falso SRBRACKET .)
    PLUS            reduce using rule 67 (pos_arreglo -> SLBRACKET checa_var_arr agrega_falso ExpI crea_cuadruplo_ver quita_falso SRBRACKET .)
    MINUS           reduce using rule 67 (pos_arreglo -> SLBRACKET checa_var_arr agrega_falso ExpI crea_cuadruplo_ver quita_falso SRBRACKET .)
    LT              reduce using rule 67 (pos_arreglo -> SLBRACKET checa_var_arr agrega_falso ExpI crea_cuadruplo_ver quita_falso SRBRACKET .)
    GT              reduce using rule 67 (pos_arreglo -> SLBRACKET checa_var_arr agrega_falso ExpI crea_cuadruplo_ver quita_falso SRBRACKET .)
    NE              reduce using rule 67 (pos_arreglo -> SLBRACKET checa_var_arr agrega_falso ExpI crea_cuadruplo_ver quita_falso SRBRACKET .)
    LE              reduce using rule 67 (pos_arreglo -> SLBRACKET checa_var_arr agrega_falso ExpI crea_cuadruplo_ver quita_falso SRBRACKET .)
    GE              reduce using rule 67 (pos_arreglo -> SLBRACKET checa_var_arr agrega_falso ExpI crea_cuadruplo_ver quita_falso SRBRACKET .)
    EQ              reduce using rule 67 (pos_arreglo -> SLBRACKET checa_var_arr agrega_falso ExpI crea_cuadruplo_ver quita_falso SRBRACKET .)
    SEMICOLON       reduce using rule 67 (pos_arreglo -> SLBRACKET checa_var_arr agrega_falso ExpI crea_cuadruplo_ver quita_falso SRBRACKET .)
    RPAREN          reduce using rule 67 (pos_arreglo -> SLBRACKET checa_var_arr agrega_falso ExpI crea_cuadruplo_ver quita_falso SRBRACKET .)
    COMMA           reduce using rule 67 (pos_arreglo -> SLBRACKET checa_var_arr agrega_falso ExpI crea_cuadruplo_ver quita_falso SRBRACKET .)
    SRBRACKET       reduce using rule 67 (pos_arreglo -> SLBRACKET checa_var_arr agrega_falso ExpI crea_cuadruplo_ver quita_falso SRBRACKET .)


state 302

    (100) Llamada_Func -> VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion SEMICOLON . checa_void
    (101) checa_void -> .

    IF              reduce using rule 101 (checa_void -> .)
    RETURN          reduce using rule 101 (checa_void -> .)
    VAR_ID          reduce using rule 101 (checa_void -> .)
    PRINT           reduce using rule 101 (checa_void -> .)
    FOR             reduce using rule 101 (checa_void -> .)
    WHILE           reduce using rule 101 (checa_void -> .)
    DO              reduce using rule 101 (checa_void -> .)
    TUR             reduce using rule 101 (checa_void -> .)
    RET             reduce using rule 101 (checa_void -> .)
    RBRACKET        reduce using rule 101 (checa_void -> .)

    checa_void                     shift and go to state 313

state 303

    (62) mas_argumentos -> COMMA ExpI resuelve_argumentos . mas_argumentos
    (62) mas_argumentos -> . COMMA ExpI resuelve_argumentos mas_argumentos
    (63) mas_argumentos -> .

    COMMA           shift and go to state 259
    RPAREN          reduce using rule 63 (mas_argumentos -> .)

    mas_argumentos                 shift and go to state 314

state 304

    (110) For -> FOR LPAREN VAR_ID ASSIGN ExpI SEMICOLON ExpI SEMICOLON VAR_ID . Exp_ciclo RPAREN LBRACKET reg_brack RBRACKET
    (111) Exp_ciclo -> . PLUS VAR_INT
    (112) Exp_ciclo -> . MINUS VAR_INT
    (113) Exp_ciclo -> . MULT VAR_INT
    (114) Exp_ciclo -> . DIV VAR_INT
    (115) Exp_ciclo -> . PLUSPLUS
    (116) Exp_ciclo -> . MINUSMINUS

    PLUS            shift and go to state 316
    MINUS           shift and go to state 317
    MULT            shift and go to state 318
    DIV             shift and go to state 319
    PLUSPLUS        shift and go to state 320
    MINUSMINUS      shift and go to state 321

    Exp_ciclo                      shift and go to state 315

state 305

    (105) While -> WHILE guarda_numero_cuadruplo LPAREN ExpI RPAREN crea_GOTOF LBRACKET reg_brack RBRACKET . regresa_inicio_while
    (107) regresa_inicio_while -> .

    IF              reduce using rule 107 (regresa_inicio_while -> .)
    RETURN          reduce using rule 107 (regresa_inicio_while -> .)
    VAR_ID          reduce using rule 107 (regresa_inicio_while -> .)
    PRINT           reduce using rule 107 (regresa_inicio_while -> .)
    FOR             reduce using rule 107 (regresa_inicio_while -> .)
    WHILE           reduce using rule 107 (regresa_inicio_while -> .)
    DO              reduce using rule 107 (regresa_inicio_while -> .)
    TUR             reduce using rule 107 (regresa_inicio_while -> .)
    RET             reduce using rule 107 (regresa_inicio_while -> .)
    RBRACKET        reduce using rule 107 (regresa_inicio_while -> .)

    regresa_inicio_while           shift and go to state 322

state 306

    (108) DoWhile -> DO guarda_numero_cuadruplo LBRACKET reg_brack RBRACKET WHILE LPAREN ExpI RPAREN . SEMICOLON crea_GOTOV

    SEMICOLON       shift and go to state 323


state 307

    (155) Position -> TUR POINT POS LPAREN ExpI COMMA ExpI RPAREN SEMICOLON . crea_cuadruplo_pos
    (156) crea_cuadruplo_pos -> .

    IF              reduce using rule 156 (crea_cuadruplo_pos -> .)
    RETURN          reduce using rule 156 (crea_cuadruplo_pos -> .)
    VAR_ID          reduce using rule 156 (crea_cuadruplo_pos -> .)
    PRINT           reduce using rule 156 (crea_cuadruplo_pos -> .)
    FOR             reduce using rule 156 (crea_cuadruplo_pos -> .)
    WHILE           reduce using rule 156 (crea_cuadruplo_pos -> .)
    DO              reduce using rule 156 (crea_cuadruplo_pos -> .)
    TUR             reduce using rule 156 (crea_cuadruplo_pos -> .)
    RET             reduce using rule 156 (crea_cuadruplo_pos -> .)
    RBRACKET        reduce using rule 156 (crea_cuadruplo_pos -> .)

    crea_cuadruplo_pos             shift and go to state 324

state 308

    (143) Rectangle -> TUR POINT RECTANGLE LPAREN ExpI COMMA ExpI RPAREN SEMICOLON . crea_cuadruplo_rectangle
    (144) crea_cuadruplo_rectangle -> .

    IF              reduce using rule 144 (crea_cuadruplo_rectangle -> .)
    RETURN          reduce using rule 144 (crea_cuadruplo_rectangle -> .)
    VAR_ID          reduce using rule 144 (crea_cuadruplo_rectangle -> .)
    PRINT           reduce using rule 144 (crea_cuadruplo_rectangle -> .)
    FOR             reduce using rule 144 (crea_cuadruplo_rectangle -> .)
    WHILE           reduce using rule 144 (crea_cuadruplo_rectangle -> .)
    DO              reduce using rule 144 (crea_cuadruplo_rectangle -> .)
    TUR             reduce using rule 144 (crea_cuadruplo_rectangle -> .)
    RET             reduce using rule 144 (crea_cuadruplo_rectangle -> .)
    RBRACKET        reduce using rule 144 (crea_cuadruplo_rectangle -> .)

    crea_cuadruplo_rectangle       shift and go to state 325

state 309

    (90) Condicion -> IF LPAREN ExpI RPAREN crea_GOTOF LBRACKET reg_brack RBRACKET pos_else llena_cuadruplo_if .

    IF              reduce using rule 90 (Condicion -> IF LPAREN ExpI RPAREN crea_GOTOF LBRACKET reg_brack RBRACKET pos_else llena_cuadruplo_if .)
    RETURN          reduce using rule 90 (Condicion -> IF LPAREN ExpI RPAREN crea_GOTOF LBRACKET reg_brack RBRACKET pos_else llena_cuadruplo_if .)
    VAR_ID          reduce using rule 90 (Condicion -> IF LPAREN ExpI RPAREN crea_GOTOF LBRACKET reg_brack RBRACKET pos_else llena_cuadruplo_if .)
    PRINT           reduce using rule 90 (Condicion -> IF LPAREN ExpI RPAREN crea_GOTOF LBRACKET reg_brack RBRACKET pos_else llena_cuadruplo_if .)
    FOR             reduce using rule 90 (Condicion -> IF LPAREN ExpI RPAREN crea_GOTOF LBRACKET reg_brack RBRACKET pos_else llena_cuadruplo_if .)
    WHILE           reduce using rule 90 (Condicion -> IF LPAREN ExpI RPAREN crea_GOTOF LBRACKET reg_brack RBRACKET pos_else llena_cuadruplo_if .)
    DO              reduce using rule 90 (Condicion -> IF LPAREN ExpI RPAREN crea_GOTOF LBRACKET reg_brack RBRACKET pos_else llena_cuadruplo_if .)
    TUR             reduce using rule 90 (Condicion -> IF LPAREN ExpI RPAREN crea_GOTOF LBRACKET reg_brack RBRACKET pos_else llena_cuadruplo_if .)
    RET             reduce using rule 90 (Condicion -> IF LPAREN ExpI RPAREN crea_GOTOF LBRACKET reg_brack RBRACKET pos_else llena_cuadruplo_if .)
    RBRACKET        reduce using rule 90 (Condicion -> IF LPAREN ExpI RPAREN crea_GOTOF LBRACKET reg_brack RBRACKET pos_else llena_cuadruplo_if .)


state 310

    (93) pos_else -> ELSE crea_else_cuadruplo . LBRACKET reg_brack RBRACKET

    LBRACKET        shift and go to state 326


state 311

    (58) llama_funcion -> VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion guarda_resultado_funcion .

    MULT            reduce using rule 58 (llama_funcion -> VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion guarda_resultado_funcion .)
    DIV             reduce using rule 58 (llama_funcion -> VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion guarda_resultado_funcion .)
    PLUS            reduce using rule 58 (llama_funcion -> VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion guarda_resultado_funcion .)
    MINUS           reduce using rule 58 (llama_funcion -> VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion guarda_resultado_funcion .)
    LT              reduce using rule 58 (llama_funcion -> VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion guarda_resultado_funcion .)
    GT              reduce using rule 58 (llama_funcion -> VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion guarda_resultado_funcion .)
    NE              reduce using rule 58 (llama_funcion -> VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion guarda_resultado_funcion .)
    LE              reduce using rule 58 (llama_funcion -> VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion guarda_resultado_funcion .)
    GE              reduce using rule 58 (llama_funcion -> VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion guarda_resultado_funcion .)
    EQ              reduce using rule 58 (llama_funcion -> VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion guarda_resultado_funcion .)
    SEMICOLON       reduce using rule 58 (llama_funcion -> VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion guarda_resultado_funcion .)
    RPAREN          reduce using rule 58 (llama_funcion -> VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion guarda_resultado_funcion .)
    COMMA           reduce using rule 58 (llama_funcion -> VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion guarda_resultado_funcion .)
    SRBRACKET       reduce using rule 58 (llama_funcion -> VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion guarda_resultado_funcion .)


state 312

    (18) Asignacion -> VAR_ID push_var_PilaOperandos pos_arreglo ASSIGN push_operador_PilaOperadores READ LPAREN ExpI RPAREN crea_cuadruplo_read . SEMICOLON resuelve_asignacion

    SEMICOLON       shift and go to state 327


state 313

    (100) Llamada_Func -> VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion SEMICOLON checa_void .

    IF              reduce using rule 100 (Llamada_Func -> VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion SEMICOLON checa_void .)
    RETURN          reduce using rule 100 (Llamada_Func -> VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion SEMICOLON checa_void .)
    VAR_ID          reduce using rule 100 (Llamada_Func -> VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion SEMICOLON checa_void .)
    PRINT           reduce using rule 100 (Llamada_Func -> VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion SEMICOLON checa_void .)
    FOR             reduce using rule 100 (Llamada_Func -> VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion SEMICOLON checa_void .)
    WHILE           reduce using rule 100 (Llamada_Func -> VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion SEMICOLON checa_void .)
    DO              reduce using rule 100 (Llamada_Func -> VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion SEMICOLON checa_void .)
    TUR             reduce using rule 100 (Llamada_Func -> VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion SEMICOLON checa_void .)
    RET             reduce using rule 100 (Llamada_Func -> VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion SEMICOLON checa_void .)
    RBRACKET        reduce using rule 100 (Llamada_Func -> VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion SEMICOLON checa_void .)


state 314

    (62) mas_argumentos -> COMMA ExpI resuelve_argumentos mas_argumentos .

    RPAREN          reduce using rule 62 (mas_argumentos -> COMMA ExpI resuelve_argumentos mas_argumentos .)


state 315

    (110) For -> FOR LPAREN VAR_ID ASSIGN ExpI SEMICOLON ExpI SEMICOLON VAR_ID Exp_ciclo . RPAREN LBRACKET reg_brack RBRACKET

    RPAREN          shift and go to state 328


state 316

    (111) Exp_ciclo -> PLUS . VAR_INT

    VAR_INT         shift and go to state 329


state 317

    (112) Exp_ciclo -> MINUS . VAR_INT

    VAR_INT         shift and go to state 330


state 318

    (113) Exp_ciclo -> MULT . VAR_INT

    VAR_INT         shift and go to state 331


state 319

    (114) Exp_ciclo -> DIV . VAR_INT

    VAR_INT         shift and go to state 332


state 320

    (115) Exp_ciclo -> PLUSPLUS .

    RPAREN          reduce using rule 115 (Exp_ciclo -> PLUSPLUS .)


state 321

    (116) Exp_ciclo -> MINUSMINUS .

    RPAREN          reduce using rule 116 (Exp_ciclo -> MINUSMINUS .)


state 322

    (105) While -> WHILE guarda_numero_cuadruplo LPAREN ExpI RPAREN crea_GOTOF LBRACKET reg_brack RBRACKET regresa_inicio_while .

    IF              reduce using rule 105 (While -> WHILE guarda_numero_cuadruplo LPAREN ExpI RPAREN crea_GOTOF LBRACKET reg_brack RBRACKET regresa_inicio_while .)
    RETURN          reduce using rule 105 (While -> WHILE guarda_numero_cuadruplo LPAREN ExpI RPAREN crea_GOTOF LBRACKET reg_brack RBRACKET regresa_inicio_while .)
    VAR_ID          reduce using rule 105 (While -> WHILE guarda_numero_cuadruplo LPAREN ExpI RPAREN crea_GOTOF LBRACKET reg_brack RBRACKET regresa_inicio_while .)
    PRINT           reduce using rule 105 (While -> WHILE guarda_numero_cuadruplo LPAREN ExpI RPAREN crea_GOTOF LBRACKET reg_brack RBRACKET regresa_inicio_while .)
    FOR             reduce using rule 105 (While -> WHILE guarda_numero_cuadruplo LPAREN ExpI RPAREN crea_GOTOF LBRACKET reg_brack RBRACKET regresa_inicio_while .)
    WHILE           reduce using rule 105 (While -> WHILE guarda_numero_cuadruplo LPAREN ExpI RPAREN crea_GOTOF LBRACKET reg_brack RBRACKET regresa_inicio_while .)
    DO              reduce using rule 105 (While -> WHILE guarda_numero_cuadruplo LPAREN ExpI RPAREN crea_GOTOF LBRACKET reg_brack RBRACKET regresa_inicio_while .)
    TUR             reduce using rule 105 (While -> WHILE guarda_numero_cuadruplo LPAREN ExpI RPAREN crea_GOTOF LBRACKET reg_brack RBRACKET regresa_inicio_while .)
    RET             reduce using rule 105 (While -> WHILE guarda_numero_cuadruplo LPAREN ExpI RPAREN crea_GOTOF LBRACKET reg_brack RBRACKET regresa_inicio_while .)
    RBRACKET        reduce using rule 105 (While -> WHILE guarda_numero_cuadruplo LPAREN ExpI RPAREN crea_GOTOF LBRACKET reg_brack RBRACKET regresa_inicio_while .)


state 323

    (108) DoWhile -> DO guarda_numero_cuadruplo LBRACKET reg_brack RBRACKET WHILE LPAREN ExpI RPAREN SEMICOLON . crea_GOTOV
    (109) crea_GOTOV -> .

    IF              reduce using rule 109 (crea_GOTOV -> .)
    RETURN          reduce using rule 109 (crea_GOTOV -> .)
    VAR_ID          reduce using rule 109 (crea_GOTOV -> .)
    PRINT           reduce using rule 109 (crea_GOTOV -> .)
    FOR             reduce using rule 109 (crea_GOTOV -> .)
    WHILE           reduce using rule 109 (crea_GOTOV -> .)
    DO              reduce using rule 109 (crea_GOTOV -> .)
    TUR             reduce using rule 109 (crea_GOTOV -> .)
    RET             reduce using rule 109 (crea_GOTOV -> .)
    RBRACKET        reduce using rule 109 (crea_GOTOV -> .)

    crea_GOTOV                     shift and go to state 333

state 324

    (155) Position -> TUR POINT POS LPAREN ExpI COMMA ExpI RPAREN SEMICOLON crea_cuadruplo_pos .

    IF              reduce using rule 155 (Position -> TUR POINT POS LPAREN ExpI COMMA ExpI RPAREN SEMICOLON crea_cuadruplo_pos .)
    RETURN          reduce using rule 155 (Position -> TUR POINT POS LPAREN ExpI COMMA ExpI RPAREN SEMICOLON crea_cuadruplo_pos .)
    VAR_ID          reduce using rule 155 (Position -> TUR POINT POS LPAREN ExpI COMMA ExpI RPAREN SEMICOLON crea_cuadruplo_pos .)
    PRINT           reduce using rule 155 (Position -> TUR POINT POS LPAREN ExpI COMMA ExpI RPAREN SEMICOLON crea_cuadruplo_pos .)
    FOR             reduce using rule 155 (Position -> TUR POINT POS LPAREN ExpI COMMA ExpI RPAREN SEMICOLON crea_cuadruplo_pos .)
    WHILE           reduce using rule 155 (Position -> TUR POINT POS LPAREN ExpI COMMA ExpI RPAREN SEMICOLON crea_cuadruplo_pos .)
    DO              reduce using rule 155 (Position -> TUR POINT POS LPAREN ExpI COMMA ExpI RPAREN SEMICOLON crea_cuadruplo_pos .)
    TUR             reduce using rule 155 (Position -> TUR POINT POS LPAREN ExpI COMMA ExpI RPAREN SEMICOLON crea_cuadruplo_pos .)
    RET             reduce using rule 155 (Position -> TUR POINT POS LPAREN ExpI COMMA ExpI RPAREN SEMICOLON crea_cuadruplo_pos .)
    RBRACKET        reduce using rule 155 (Position -> TUR POINT POS LPAREN ExpI COMMA ExpI RPAREN SEMICOLON crea_cuadruplo_pos .)


state 325

    (143) Rectangle -> TUR POINT RECTANGLE LPAREN ExpI COMMA ExpI RPAREN SEMICOLON crea_cuadruplo_rectangle .

    IF              reduce using rule 143 (Rectangle -> TUR POINT RECTANGLE LPAREN ExpI COMMA ExpI RPAREN SEMICOLON crea_cuadruplo_rectangle .)
    RETURN          reduce using rule 143 (Rectangle -> TUR POINT RECTANGLE LPAREN ExpI COMMA ExpI RPAREN SEMICOLON crea_cuadruplo_rectangle .)
    VAR_ID          reduce using rule 143 (Rectangle -> TUR POINT RECTANGLE LPAREN ExpI COMMA ExpI RPAREN SEMICOLON crea_cuadruplo_rectangle .)
    PRINT           reduce using rule 143 (Rectangle -> TUR POINT RECTANGLE LPAREN ExpI COMMA ExpI RPAREN SEMICOLON crea_cuadruplo_rectangle .)
    FOR             reduce using rule 143 (Rectangle -> TUR POINT RECTANGLE LPAREN ExpI COMMA ExpI RPAREN SEMICOLON crea_cuadruplo_rectangle .)
    WHILE           reduce using rule 143 (Rectangle -> TUR POINT RECTANGLE LPAREN ExpI COMMA ExpI RPAREN SEMICOLON crea_cuadruplo_rectangle .)
    DO              reduce using rule 143 (Rectangle -> TUR POINT RECTANGLE LPAREN ExpI COMMA ExpI RPAREN SEMICOLON crea_cuadruplo_rectangle .)
    TUR             reduce using rule 143 (Rectangle -> TUR POINT RECTANGLE LPAREN ExpI COMMA ExpI RPAREN SEMICOLON crea_cuadruplo_rectangle .)
    RET             reduce using rule 143 (Rectangle -> TUR POINT RECTANGLE LPAREN ExpI COMMA ExpI RPAREN SEMICOLON crea_cuadruplo_rectangle .)
    RBRACKET        reduce using rule 143 (Rectangle -> TUR POINT RECTANGLE LPAREN ExpI COMMA ExpI RPAREN SEMICOLON crea_cuadruplo_rectangle .)


state 326

    (93) pos_else -> ELSE crea_else_cuadruplo LBRACKET . reg_brack RBRACKET
    (81) reg_brack -> . Estatutos reg_brack
    (82) reg_brack -> .
    (83) Estatutos -> . Condicion
    (84) Estatutos -> . Ciclo
    (85) Estatutos -> . Return
    (86) Estatutos -> . Asignacion
    (87) Estatutos -> . Print
    (88) Estatutos -> . Llamada_Func
    (89) Estatutos -> . Turtle
    (90) Condicion -> . IF LPAREN ExpI RPAREN crea_GOTOF LBRACKET reg_brack RBRACKET pos_else llena_cuadruplo_if
    (102) Ciclo -> . For
    (103) Ciclo -> . While
    (104) Ciclo -> . DoWhile
    (96) Return -> . RETURN ExpI SEMICOLON resuelve_return
    (17) Asignacion -> . VAR_ID push_var_PilaOperandos pos_arreglo ASSIGN push_operador_PilaOperadores ExpI SEMICOLON resuelve_asignacion
    (18) Asignacion -> . VAR_ID push_var_PilaOperandos pos_arreglo ASSIGN push_operador_PilaOperadores READ LPAREN ExpI RPAREN crea_cuadruplo_read SEMICOLON resuelve_asignacion
    (98) Print -> . PRINT LPAREN ExpI RPAREN SEMICOLON crea_print
    (100) Llamada_Func -> . VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion SEMICOLON checa_void
    (119) Turtle -> . Forward
    (120) Turtle -> . Right
    (121) Turtle -> . Left
    (122) Turtle -> . Circle
    (123) Turtle -> . Position
    (124) Turtle -> . IniciaTurtle
    (125) Turtle -> . TerminaTurtle
    (126) Turtle -> . iniciaFill
    (127) Turtle -> . Square
    (128) Turtle -> . Rectangle
    (129) Turtle -> . Triangle
    (130) Turtle -> . terminaFill
    (131) Turtle -> . colorFill
    (132) Turtle -> . colorPen
    (110) For -> . FOR LPAREN VAR_ID ASSIGN ExpI SEMICOLON ExpI SEMICOLON VAR_ID Exp_ciclo RPAREN LBRACKET reg_brack RBRACKET
    (105) While -> . WHILE guarda_numero_cuadruplo LPAREN ExpI RPAREN crea_GOTOF LBRACKET reg_brack RBRACKET regresa_inicio_while
    (108) DoWhile -> . DO guarda_numero_cuadruplo LBRACKET reg_brack RBRACKET WHILE LPAREN ExpI RPAREN SEMICOLON crea_GOTOV
    (133) Forward -> . TUR POINT FORWARD LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_forward
    (135) Right -> . TUR POINT RIGHT LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_right
    (137) Left -> . TUR POINT LEFT LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_left
    (139) Circle -> . TUR POINT CIRCLE LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_circle
    (155) Position -> . TUR POINT POS LPAREN ExpI COMMA ExpI RPAREN SEMICOLON crea_cuadruplo_pos
    (157) IniciaTurtle -> . TUR POINT TURTLE LPAREN RPAREN SEMICOLON crea_cuadruplo_inicia
    (159) TerminaTurtle -> . TUR POINT FINISH LPAREN RPAREN SEMICOLON crea_cuadruplo_termina
    (147) iniciaFill -> . TUR POINT BEGIN_FILL LPAREN RPAREN SEMICOLON crea_cuadruplo_iniciafill
    (141) Square -> . TUR POINT SQUARE LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_square
    (143) Rectangle -> . TUR POINT RECTANGLE LPAREN ExpI COMMA ExpI RPAREN SEMICOLON crea_cuadruplo_rectangle
    (145) Triangle -> . TUR POINT TRIANGLE LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_triangle
    (149) terminaFill -> . TUR POINT END_FILL LPAREN RPAREN SEMICOLON crea_cuadruplo_terminafill
    (151) colorFill -> . TUR POINT COLOR LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_colorFill
    (153) colorPen -> . TUR POINT PENCOLOR LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_colorPen

    RBRACKET        reduce using rule 82 (reg_brack -> .)
    IF              shift and go to state 59
    RETURN          shift and go to state 63
    VAR_ID          shift and go to state 64
    PRINT           shift and go to state 65
    FOR             shift and go to state 80
    WHILE           shift and go to state 81
    DO              shift and go to state 82
    TUR             shift and go to state 83

    reg_brack                      shift and go to state 334
    Estatutos                      shift and go to state 51
    Condicion                      shift and go to state 52
    Ciclo                          shift and go to state 53
    Return                         shift and go to state 54
    Asignacion                     shift and go to state 55
    Print                          shift and go to state 56
    Llamada_Func                   shift and go to state 57
    Turtle                         shift and go to state 58
    For                            shift and go to state 60
    While                          shift and go to state 61
    DoWhile                        shift and go to state 62
    Forward                        shift and go to state 66
    Right                          shift and go to state 67
    Left                           shift and go to state 68
    Circle                         shift and go to state 69
    Position                       shift and go to state 70
    IniciaTurtle                   shift and go to state 71
    TerminaTurtle                  shift and go to state 72
    iniciaFill                     shift and go to state 73
    Square                         shift and go to state 74
    Rectangle                      shift and go to state 75
    Triangle                       shift and go to state 76
    terminaFill                    shift and go to state 77
    colorFill                      shift and go to state 78
    colorPen                       shift and go to state 79

state 327

    (18) Asignacion -> VAR_ID push_var_PilaOperandos pos_arreglo ASSIGN push_operador_PilaOperadores READ LPAREN ExpI RPAREN crea_cuadruplo_read SEMICOLON . resuelve_asignacion
    (22) resuelve_asignacion -> .

    IF              reduce using rule 22 (resuelve_asignacion -> .)
    RETURN          reduce using rule 22 (resuelve_asignacion -> .)
    VAR_ID          reduce using rule 22 (resuelve_asignacion -> .)
    PRINT           reduce using rule 22 (resuelve_asignacion -> .)
    FOR             reduce using rule 22 (resuelve_asignacion -> .)
    WHILE           reduce using rule 22 (resuelve_asignacion -> .)
    DO              reduce using rule 22 (resuelve_asignacion -> .)
    TUR             reduce using rule 22 (resuelve_asignacion -> .)
    RET             reduce using rule 22 (resuelve_asignacion -> .)
    RBRACKET        reduce using rule 22 (resuelve_asignacion -> .)

    resuelve_asignacion            shift and go to state 335

state 328

    (110) For -> FOR LPAREN VAR_ID ASSIGN ExpI SEMICOLON ExpI SEMICOLON VAR_ID Exp_ciclo RPAREN . LBRACKET reg_brack RBRACKET

    LBRACKET        shift and go to state 336


state 329

    (111) Exp_ciclo -> PLUS VAR_INT .

    RPAREN          reduce using rule 111 (Exp_ciclo -> PLUS VAR_INT .)


state 330

    (112) Exp_ciclo -> MINUS VAR_INT .

    RPAREN          reduce using rule 112 (Exp_ciclo -> MINUS VAR_INT .)


state 331

    (113) Exp_ciclo -> MULT VAR_INT .

    RPAREN          reduce using rule 113 (Exp_ciclo -> MULT VAR_INT .)


state 332

    (114) Exp_ciclo -> DIV VAR_INT .

    RPAREN          reduce using rule 114 (Exp_ciclo -> DIV VAR_INT .)


state 333

    (108) DoWhile -> DO guarda_numero_cuadruplo LBRACKET reg_brack RBRACKET WHILE LPAREN ExpI RPAREN SEMICOLON crea_GOTOV .

    IF              reduce using rule 108 (DoWhile -> DO guarda_numero_cuadruplo LBRACKET reg_brack RBRACKET WHILE LPAREN ExpI RPAREN SEMICOLON crea_GOTOV .)
    RETURN          reduce using rule 108 (DoWhile -> DO guarda_numero_cuadruplo LBRACKET reg_brack RBRACKET WHILE LPAREN ExpI RPAREN SEMICOLON crea_GOTOV .)
    VAR_ID          reduce using rule 108 (DoWhile -> DO guarda_numero_cuadruplo LBRACKET reg_brack RBRACKET WHILE LPAREN ExpI RPAREN SEMICOLON crea_GOTOV .)
    PRINT           reduce using rule 108 (DoWhile -> DO guarda_numero_cuadruplo LBRACKET reg_brack RBRACKET WHILE LPAREN ExpI RPAREN SEMICOLON crea_GOTOV .)
    FOR             reduce using rule 108 (DoWhile -> DO guarda_numero_cuadruplo LBRACKET reg_brack RBRACKET WHILE LPAREN ExpI RPAREN SEMICOLON crea_GOTOV .)
    WHILE           reduce using rule 108 (DoWhile -> DO guarda_numero_cuadruplo LBRACKET reg_brack RBRACKET WHILE LPAREN ExpI RPAREN SEMICOLON crea_GOTOV .)
    DO              reduce using rule 108 (DoWhile -> DO guarda_numero_cuadruplo LBRACKET reg_brack RBRACKET WHILE LPAREN ExpI RPAREN SEMICOLON crea_GOTOV .)
    TUR             reduce using rule 108 (DoWhile -> DO guarda_numero_cuadruplo LBRACKET reg_brack RBRACKET WHILE LPAREN ExpI RPAREN SEMICOLON crea_GOTOV .)
    RET             reduce using rule 108 (DoWhile -> DO guarda_numero_cuadruplo LBRACKET reg_brack RBRACKET WHILE LPAREN ExpI RPAREN SEMICOLON crea_GOTOV .)
    RBRACKET        reduce using rule 108 (DoWhile -> DO guarda_numero_cuadruplo LBRACKET reg_brack RBRACKET WHILE LPAREN ExpI RPAREN SEMICOLON crea_GOTOV .)


state 334

    (93) pos_else -> ELSE crea_else_cuadruplo LBRACKET reg_brack . RBRACKET

    RBRACKET        shift and go to state 337


state 335

    (18) Asignacion -> VAR_ID push_var_PilaOperandos pos_arreglo ASSIGN push_operador_PilaOperadores READ LPAREN ExpI RPAREN crea_cuadruplo_read SEMICOLON resuelve_asignacion .

    IF              reduce using rule 18 (Asignacion -> VAR_ID push_var_PilaOperandos pos_arreglo ASSIGN push_operador_PilaOperadores READ LPAREN ExpI RPAREN crea_cuadruplo_read SEMICOLON resuelve_asignacion .)
    RETURN          reduce using rule 18 (Asignacion -> VAR_ID push_var_PilaOperandos pos_arreglo ASSIGN push_operador_PilaOperadores READ LPAREN ExpI RPAREN crea_cuadruplo_read SEMICOLON resuelve_asignacion .)
    VAR_ID          reduce using rule 18 (Asignacion -> VAR_ID push_var_PilaOperandos pos_arreglo ASSIGN push_operador_PilaOperadores READ LPAREN ExpI RPAREN crea_cuadruplo_read SEMICOLON resuelve_asignacion .)
    PRINT           reduce using rule 18 (Asignacion -> VAR_ID push_var_PilaOperandos pos_arreglo ASSIGN push_operador_PilaOperadores READ LPAREN ExpI RPAREN crea_cuadruplo_read SEMICOLON resuelve_asignacion .)
    FOR             reduce using rule 18 (Asignacion -> VAR_ID push_var_PilaOperandos pos_arreglo ASSIGN push_operador_PilaOperadores READ LPAREN ExpI RPAREN crea_cuadruplo_read SEMICOLON resuelve_asignacion .)
    WHILE           reduce using rule 18 (Asignacion -> VAR_ID push_var_PilaOperandos pos_arreglo ASSIGN push_operador_PilaOperadores READ LPAREN ExpI RPAREN crea_cuadruplo_read SEMICOLON resuelve_asignacion .)
    DO              reduce using rule 18 (Asignacion -> VAR_ID push_var_PilaOperandos pos_arreglo ASSIGN push_operador_PilaOperadores READ LPAREN ExpI RPAREN crea_cuadruplo_read SEMICOLON resuelve_asignacion .)
    TUR             reduce using rule 18 (Asignacion -> VAR_ID push_var_PilaOperandos pos_arreglo ASSIGN push_operador_PilaOperadores READ LPAREN ExpI RPAREN crea_cuadruplo_read SEMICOLON resuelve_asignacion .)
    RET             reduce using rule 18 (Asignacion -> VAR_ID push_var_PilaOperandos pos_arreglo ASSIGN push_operador_PilaOperadores READ LPAREN ExpI RPAREN crea_cuadruplo_read SEMICOLON resuelve_asignacion .)
    RBRACKET        reduce using rule 18 (Asignacion -> VAR_ID push_var_PilaOperandos pos_arreglo ASSIGN push_operador_PilaOperadores READ LPAREN ExpI RPAREN crea_cuadruplo_read SEMICOLON resuelve_asignacion .)


state 336

    (110) For -> FOR LPAREN VAR_ID ASSIGN ExpI SEMICOLON ExpI SEMICOLON VAR_ID Exp_ciclo RPAREN LBRACKET . reg_brack RBRACKET
    (81) reg_brack -> . Estatutos reg_brack
    (82) reg_brack -> .
    (83) Estatutos -> . Condicion
    (84) Estatutos -> . Ciclo
    (85) Estatutos -> . Return
    (86) Estatutos -> . Asignacion
    (87) Estatutos -> . Print
    (88) Estatutos -> . Llamada_Func
    (89) Estatutos -> . Turtle
    (90) Condicion -> . IF LPAREN ExpI RPAREN crea_GOTOF LBRACKET reg_brack RBRACKET pos_else llena_cuadruplo_if
    (102) Ciclo -> . For
    (103) Ciclo -> . While
    (104) Ciclo -> . DoWhile
    (96) Return -> . RETURN ExpI SEMICOLON resuelve_return
    (17) Asignacion -> . VAR_ID push_var_PilaOperandos pos_arreglo ASSIGN push_operador_PilaOperadores ExpI SEMICOLON resuelve_asignacion
    (18) Asignacion -> . VAR_ID push_var_PilaOperandos pos_arreglo ASSIGN push_operador_PilaOperadores READ LPAREN ExpI RPAREN crea_cuadruplo_read SEMICOLON resuelve_asignacion
    (98) Print -> . PRINT LPAREN ExpI RPAREN SEMICOLON crea_print
    (100) Llamada_Func -> . VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion SEMICOLON checa_void
    (119) Turtle -> . Forward
    (120) Turtle -> . Right
    (121) Turtle -> . Left
    (122) Turtle -> . Circle
    (123) Turtle -> . Position
    (124) Turtle -> . IniciaTurtle
    (125) Turtle -> . TerminaTurtle
    (126) Turtle -> . iniciaFill
    (127) Turtle -> . Square
    (128) Turtle -> . Rectangle
    (129) Turtle -> . Triangle
    (130) Turtle -> . terminaFill
    (131) Turtle -> . colorFill
    (132) Turtle -> . colorPen
    (110) For -> . FOR LPAREN VAR_ID ASSIGN ExpI SEMICOLON ExpI SEMICOLON VAR_ID Exp_ciclo RPAREN LBRACKET reg_brack RBRACKET
    (105) While -> . WHILE guarda_numero_cuadruplo LPAREN ExpI RPAREN crea_GOTOF LBRACKET reg_brack RBRACKET regresa_inicio_while
    (108) DoWhile -> . DO guarda_numero_cuadruplo LBRACKET reg_brack RBRACKET WHILE LPAREN ExpI RPAREN SEMICOLON crea_GOTOV
    (133) Forward -> . TUR POINT FORWARD LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_forward
    (135) Right -> . TUR POINT RIGHT LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_right
    (137) Left -> . TUR POINT LEFT LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_left
    (139) Circle -> . TUR POINT CIRCLE LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_circle
    (155) Position -> . TUR POINT POS LPAREN ExpI COMMA ExpI RPAREN SEMICOLON crea_cuadruplo_pos
    (157) IniciaTurtle -> . TUR POINT TURTLE LPAREN RPAREN SEMICOLON crea_cuadruplo_inicia
    (159) TerminaTurtle -> . TUR POINT FINISH LPAREN RPAREN SEMICOLON crea_cuadruplo_termina
    (147) iniciaFill -> . TUR POINT BEGIN_FILL LPAREN RPAREN SEMICOLON crea_cuadruplo_iniciafill
    (141) Square -> . TUR POINT SQUARE LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_square
    (143) Rectangle -> . TUR POINT RECTANGLE LPAREN ExpI COMMA ExpI RPAREN SEMICOLON crea_cuadruplo_rectangle
    (145) Triangle -> . TUR POINT TRIANGLE LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_triangle
    (149) terminaFill -> . TUR POINT END_FILL LPAREN RPAREN SEMICOLON crea_cuadruplo_terminafill
    (151) colorFill -> . TUR POINT COLOR LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_colorFill
    (153) colorPen -> . TUR POINT PENCOLOR LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_colorPen

    RBRACKET        reduce using rule 82 (reg_brack -> .)
    IF              shift and go to state 59
    RETURN          shift and go to state 63
    VAR_ID          shift and go to state 64
    PRINT           shift and go to state 65
    FOR             shift and go to state 80
    WHILE           shift and go to state 81
    DO              shift and go to state 82
    TUR             shift and go to state 83

    reg_brack                      shift and go to state 338
    Estatutos                      shift and go to state 51
    Condicion                      shift and go to state 52
    Ciclo                          shift and go to state 53
    Return                         shift and go to state 54
    Asignacion                     shift and go to state 55
    Print                          shift and go to state 56
    Llamada_Func                   shift and go to state 57
    Turtle                         shift and go to state 58
    For                            shift and go to state 60
    While                          shift and go to state 61
    DoWhile                        shift and go to state 62
    Forward                        shift and go to state 66
    Right                          shift and go to state 67
    Left                           shift and go to state 68
    Circle                         shift and go to state 69
    Position                       shift and go to state 70
    IniciaTurtle                   shift and go to state 71
    TerminaTurtle                  shift and go to state 72
    iniciaFill                     shift and go to state 73
    Square                         shift and go to state 74
    Rectangle                      shift and go to state 75
    Triangle                       shift and go to state 76
    terminaFill                    shift and go to state 77
    colorFill                      shift and go to state 78
    colorPen                       shift and go to state 79

state 337

    (93) pos_else -> ELSE crea_else_cuadruplo LBRACKET reg_brack RBRACKET .

    IF              reduce using rule 93 (pos_else -> ELSE crea_else_cuadruplo LBRACKET reg_brack RBRACKET .)
    RETURN          reduce using rule 93 (pos_else -> ELSE crea_else_cuadruplo LBRACKET reg_brack RBRACKET .)
    VAR_ID          reduce using rule 93 (pos_else -> ELSE crea_else_cuadruplo LBRACKET reg_brack RBRACKET .)
    PRINT           reduce using rule 93 (pos_else -> ELSE crea_else_cuadruplo LBRACKET reg_brack RBRACKET .)
    FOR             reduce using rule 93 (pos_else -> ELSE crea_else_cuadruplo LBRACKET reg_brack RBRACKET .)
    WHILE           reduce using rule 93 (pos_else -> ELSE crea_else_cuadruplo LBRACKET reg_brack RBRACKET .)
    DO              reduce using rule 93 (pos_else -> ELSE crea_else_cuadruplo LBRACKET reg_brack RBRACKET .)
    TUR             reduce using rule 93 (pos_else -> ELSE crea_else_cuadruplo LBRACKET reg_brack RBRACKET .)
    RET             reduce using rule 93 (pos_else -> ELSE crea_else_cuadruplo LBRACKET reg_brack RBRACKET .)
    RBRACKET        reduce using rule 93 (pos_else -> ELSE crea_else_cuadruplo LBRACKET reg_brack RBRACKET .)


state 338

    (110) For -> FOR LPAREN VAR_ID ASSIGN ExpI SEMICOLON ExpI SEMICOLON VAR_ID Exp_ciclo RPAREN LBRACKET reg_brack . RBRACKET

    RBRACKET        shift and go to state 339


state 339

    (110) For -> FOR LPAREN VAR_ID ASSIGN ExpI SEMICOLON ExpI SEMICOLON VAR_ID Exp_ciclo RPAREN LBRACKET reg_brack RBRACKET .

    IF              reduce using rule 110 (For -> FOR LPAREN VAR_ID ASSIGN ExpI SEMICOLON ExpI SEMICOLON VAR_ID Exp_ciclo RPAREN LBRACKET reg_brack RBRACKET .)
    RETURN          reduce using rule 110 (For -> FOR LPAREN VAR_ID ASSIGN ExpI SEMICOLON ExpI SEMICOLON VAR_ID Exp_ciclo RPAREN LBRACKET reg_brack RBRACKET .)
    VAR_ID          reduce using rule 110 (For -> FOR LPAREN VAR_ID ASSIGN ExpI SEMICOLON ExpI SEMICOLON VAR_ID Exp_ciclo RPAREN LBRACKET reg_brack RBRACKET .)
    PRINT           reduce using rule 110 (For -> FOR LPAREN VAR_ID ASSIGN ExpI SEMICOLON ExpI SEMICOLON VAR_ID Exp_ciclo RPAREN LBRACKET reg_brack RBRACKET .)
    FOR             reduce using rule 110 (For -> FOR LPAREN VAR_ID ASSIGN ExpI SEMICOLON ExpI SEMICOLON VAR_ID Exp_ciclo RPAREN LBRACKET reg_brack RBRACKET .)
    WHILE           reduce using rule 110 (For -> FOR LPAREN VAR_ID ASSIGN ExpI SEMICOLON ExpI SEMICOLON VAR_ID Exp_ciclo RPAREN LBRACKET reg_brack RBRACKET .)
    DO              reduce using rule 110 (For -> FOR LPAREN VAR_ID ASSIGN ExpI SEMICOLON ExpI SEMICOLON VAR_ID Exp_ciclo RPAREN LBRACKET reg_brack RBRACKET .)
    TUR             reduce using rule 110 (For -> FOR LPAREN VAR_ID ASSIGN ExpI SEMICOLON ExpI SEMICOLON VAR_ID Exp_ciclo RPAREN LBRACKET reg_brack RBRACKET .)
    RET             reduce using rule 110 (For -> FOR LPAREN VAR_ID ASSIGN ExpI SEMICOLON ExpI SEMICOLON VAR_ID Exp_ciclo RPAREN LBRACKET reg_brack RBRACKET .)
    RBRACKET        reduce using rule 110 (For -> FOR LPAREN VAR_ID ASSIGN ExpI SEMICOLON ExpI SEMICOLON VAR_ID Exp_ciclo RPAREN LBRACKET reg_brack RBRACKET .)

