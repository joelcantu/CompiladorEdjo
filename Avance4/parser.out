Created by PLY version 3.10 (http://www.dabeaz.com/ply)

Unused terminals:

    IFELSE
    VAR_CHAR
    IMPORT
    FROM

Grammar

Rule 0     S' -> program
Rule 1     program -> START EDJO VAR_ID crea_primer_cuadruplo crea_funcion_global SEMICOLON Vars funciones Main
Rule 2     crea_primer_cuadruplo -> <empty>
Rule 3     crea_funcion_global -> <empty>
Rule 4     Vars -> Tipo VAR_ID mas_vars agrega_var_funcion SEMICOLON Vars
Rule 5     Vars -> <empty>
Rule 6     Tipo -> INT
Rule 7     Tipo -> DECIMAL
Rule 8     Tipo -> STRING
Rule 9     Tipo -> CHAR
Rule 10    Tipo -> BOOL
Rule 11    mas_vars -> COMMA VAR_ID mas_vars
Rule 12    mas_vars -> <empty>
Rule 13    agrega_var_funcion -> <empty>
Rule 14    Asignacion -> VAR_ID push_var_PilaOperandos ASSIGN push_operador_PilaOperadores ExpI SEMICOLON resuelve_asignacion
Rule 15    push_var_PilaOperandos -> <empty>
Rule 16    push_operador_PilaOperadores -> <empty>
Rule 17    resuelve_asignacion -> <empty>
Rule 18    ExpI -> ExpK resuelve_operadores_relacionales
Rule 19    ExpI -> ExpK Operandos push_operador_PilaOperadores ExpK resuelve_operadores_relacionales
Rule 20    Operandos -> LT
Rule 21    Operandos -> GT
Rule 22    Operandos -> NE
Rule 23    Operandos -> LE
Rule 24    Operandos -> GE
Rule 25    Operandos -> EQ
Rule 26    resuelve_operadores_relacionales -> <empty>
Rule 27    ExpK -> ExpT resuelve_termino
Rule 28    ExpK -> ExpT resuelve_termino pos_SUMRES push_operador_PilaOperadores ExpK
Rule 29    resuelve_termino -> <empty>
Rule 30    pos_SUMRES -> PLUS
Rule 31    pos_SUMRES -> MINUS
Rule 32    ExpT -> ExpF resuelve_factor
Rule 33    ExpT -> ExpF resuelve_factor pos_MULTDIV push_operador_PilaOperadores ExpT
Rule 34    resuelve_factor -> <empty>
Rule 35    pos_MULTDIV -> MULT
Rule 36    pos_MULTDIV -> DIV
Rule 37    ExpF -> VAR_CTE
Rule 38    ExpF -> LPAREN agrega_falso ExpI RPAREN quita_falso
Rule 39    ExpF -> VAR_ID push_var_PilaOperandos pos_arreglo
Rule 40    ExpF -> llama_funcion
Rule 41    VAR_CTE -> VAR_INT push_int_PilaOperandos
Rule 42    VAR_CTE -> VAR_DECIMAL push_decimal_PilaOperandos
Rule 43    VAR_CTE -> VAR_STRING push_string_PilaOperandos
Rule 44    VAR_CTE -> VAR_BOOL push_bool_PilaOperandos
Rule 45    VAR_BOOL -> FALSE
Rule 46    VAR_BOOL -> TRUE
Rule 47    push_int_PilaOperandos -> <empty>
Rule 48    push_decimal_PilaOperandos -> <empty>
Rule 49    push_string_PilaOperandos -> <empty>
Rule 50    push_bool_PilaOperandos -> <empty>
Rule 51    agrega_falso -> <empty>
Rule 52    quita_falso -> <empty>
Rule 53    llama_funcion -> VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion guarda_resultado_funcion
Rule 54    checa_funcion_si_existe -> <empty>
Rule 55    argumentos -> ExpI resuelve_argumentos mas_argumentos
Rule 56    argumentos -> <empty>
Rule 57    mas_argumentos -> COMMA ExpI resuelve_argumentos mas_argumentos
Rule 58    mas_argumentos -> <empty>
Rule 59    resuelve_argumentos -> <empty>
Rule 60    resuelve_llamada_funcion -> <empty>
Rule 61    guarda_resultado_funcion -> <empty>
Rule 62    pos_arreglo -> SLBRACKET ExpI SRBRACKET
Rule 63    pos_arreglo -> <empty>
Rule 64    funciones -> FUNC tipo_funcion VAR_ID LPAREN param RPAREN agrega_funcion LBRACKET Vars reg_brack RBRACKET fin_func_quad funciones
Rule 65    funciones -> <empty>
Rule 66    tipo_funcion -> VOID
Rule 67    tipo_funcion -> Tipo
Rule 68    param -> Tipo VAR_ID pos_commaf
Rule 69    param -> <empty>
Rule 70    pos_commaf -> COMMA Tipo VAR_ID pos_commaf
Rule 71    pos_commaf -> <empty>
Rule 72    agrega_funcion -> <empty>
Rule 73    fin_func_quad -> <empty>
Rule 74    reg_brack -> Estatutos reg_brack
Rule 75    reg_brack -> <empty>
Rule 76    Estatutos -> Condicion
Rule 77    Estatutos -> Ciclo
Rule 78    Estatutos -> Return
Rule 79    Estatutos -> Asignacion
Rule 80    Estatutos -> Print
Rule 81    Estatutos -> Llamada_Func
Rule 82    Estatutos -> Turtle
Rule 83    Condicion -> IF LPAREN ExpI RPAREN crea_GOTOF LBRACKET reg_brack RBRACKET pos_else llena_cuadruplo_if
Rule 84    crea_GOTOF -> <empty>
Rule 85    llena_cuadruplo_if -> <empty>
Rule 86    pos_else -> ELSE crea_else_cuadruplo LBRACKET reg_brack RBRACKET
Rule 87    pos_else -> <empty>
Rule 88    crea_else_cuadruplo -> <empty>
Rule 89    Return -> RETURN ExpI SEMICOLON resuelve_return
Rule 90    resuelve_return -> <empty>
Rule 91    Print -> PRINT LPAREN VAR_STRING RPAREN SEMICOLON
Rule 92    Print -> PRINT LPAREN ExpI RPAREN SEMICOLON crea_print
Rule 93    crea_print -> <empty>
Rule 94    Llamada_Func -> VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion SEMICOLON checa_void
Rule 95    checa_void -> <empty>
Rule 96    Ciclo -> For
Rule 97    Ciclo -> While
Rule 98    Ciclo -> DoWhile
Rule 99    While -> WHILE guarda_numero_cuadruplo LPAREN ExpI RPAREN crea_GOTOF LBRACKET reg_brack RBRACKET regresa_inicio_while
Rule 100   guarda_numero_cuadruplo -> <empty>
Rule 101   regresa_inicio_while -> <empty>
Rule 102   DoWhile -> DO LBRACKET reg_brack RBRACKET WHILE LPAREN ExpI RPAREN SEMICOLON
Rule 103   For -> FOR LPAREN VAR_ID ASSIGN ExpI SEMICOLON ExpI SEMICOLON VAR_ID Exp_ciclo RPAREN LBRACKET reg_brack RBRACKET
Rule 104   Exp_ciclo -> PLUS VAR_INT
Rule 105   Exp_ciclo -> MINUS VAR_INT
Rule 106   Exp_ciclo -> MULT VAR_INT
Rule 107   Exp_ciclo -> DIV VAR_INT
Rule 108   Exp_ciclo -> PLUSPLUS
Rule 109   Exp_ciclo -> MINUSMINUS
Rule 110   Main -> MAIN agrega_main_funcion LPAREN RPAREN LBRACKET Vars reg_brack RET ZERO SEMICOLON RBRACKET
Rule 111   agrega_main_funcion -> <empty>
Rule 112   Turtle -> Forward
Rule 113   Turtle -> Right
Rule 114   Turtle -> Left
Rule 115   Turtle -> Circle
Rule 116   Turtle -> Position
Rule 117   Turtle -> IniciaTurtle
Rule 118   Turtle -> TerminaTurtle
Rule 119   Forward -> TUR POINT FORWARD LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_forward
Rule 120   crea_cuadruplo_forward -> <empty>
Rule 121   Right -> TUR POINT RIGHT LPAREN ExpI RPAREN SEMICOLON crea_quadruplo_right
Rule 122   crea_quadruplo_right -> <empty>
Rule 123   Left -> TUR POINT LEFT LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_left
Rule 124   crea_cuadruplo_left -> <empty>
Rule 125   Circle -> TUR POINT CIRCLE LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_circle
Rule 126   crea_cuadruplo_circle -> <empty>
Rule 127   Position -> TUR POINT POS LPAREN ExpI COMMA ExpI RPAREN SEMICOLON crea_cuadruplo_pos
Rule 128   crea_cuadruplo_pos -> <empty>
Rule 129   IniciaTurtle -> TUR POINT TURTLE LPAREN RPAREN SEMICOLON crea_cuadruplo_inicia
Rule 130   crea_cuadruplo_inicia -> <empty>
Rule 131   TerminaTurtle -> TUR POINT FINISH LPAREN RPAREN SEMICOLON crea_cuadruplo_termina
Rule 132   crea_cuadruplo_termina -> <empty>

Terminals, with rules where they appear

ASSIGN               : 14 103
BOOL                 : 10
CHAR                 : 9
CIRCLE               : 125
COMMA                : 11 57 70 127
DECIMAL              : 7
DIV                  : 36 107
DO                   : 102
EDJO                 : 1
ELSE                 : 86
EQ                   : 25
FALSE                : 45
FINISH               : 131
FOR                  : 103
FORWARD              : 119
FROM                 : 
FUNC                 : 64
GE                   : 24
GT                   : 21
IF                   : 83
IFELSE               : 
IMPORT               : 
INT                  : 6
LBRACKET             : 64 83 86 99 102 103 110
LE                   : 23
LEFT                 : 123
LPAREN               : 38 53 64 83 91 92 94 99 102 103 110 119 121 123 125 127 129 131
LT                   : 20
MAIN                 : 110
MINUS                : 31 105
MINUSMINUS           : 109
MULT                 : 35 106
NE                   : 22
PLUS                 : 30 104
PLUSPLUS             : 108
POINT                : 119 121 123 125 127 129 131
POS                  : 127
PRINT                : 91 92
RBRACKET             : 64 83 86 99 102 103 110
RET                  : 110
RETURN               : 89
RIGHT                : 121
RPAREN               : 38 53 64 83 91 92 94 99 102 103 110 119 121 123 125 127 129 131
SEMICOLON            : 1 4 14 89 91 92 94 102 103 103 110 119 121 123 125 127 129 131
SLBRACKET            : 62
SRBRACKET            : 62
START                : 1
STRING               : 8
TRUE                 : 46
TUR                  : 119 121 123 125 127 129 131
TURTLE               : 129
VAR_CHAR             : 
VAR_DECIMAL          : 42
VAR_ID               : 1 4 11 14 39 53 64 68 70 94 103 103
VAR_INT              : 41 104 105 106 107
VAR_STRING           : 43 91
VOID                 : 66
WHILE                : 99 102
ZERO                 : 110
error                : 

Nonterminals, with rules where they appear

Asignacion           : 79
Ciclo                : 77
Circle               : 115
Condicion            : 76
DoWhile              : 98
Estatutos            : 74
ExpF                 : 32 33
ExpI                 : 14 38 55 57 62 83 89 92 99 102 103 103 119 121 123 125 127 127
ExpK                 : 18 19 19 28
ExpT                 : 27 28 33
Exp_ciclo            : 103
For                  : 96
Forward              : 112
IniciaTurtle         : 117
Left                 : 114
Llamada_Func         : 81
Main                 : 1
Operandos            : 19
Position             : 116
Print                : 80
Return               : 78
Right                : 113
TerminaTurtle        : 118
Tipo                 : 4 67 68 70
Turtle               : 82
VAR_BOOL             : 44
VAR_CTE              : 37
Vars                 : 1 4 64 110
While                : 97
agrega_falso         : 38 53 94
agrega_funcion       : 64
agrega_main_funcion  : 110
agrega_var_funcion   : 4
argumentos           : 53 94
checa_funcion_si_existe : 53 94
checa_void           : 94
crea_GOTOF           : 83 99
crea_cuadruplo_circle : 125
crea_cuadruplo_forward : 119
crea_cuadruplo_inicia : 129
crea_cuadruplo_left  : 123
crea_cuadruplo_pos   : 127
crea_cuadruplo_termina : 131
crea_else_cuadruplo  : 86
crea_funcion_global  : 1
crea_primer_cuadruplo : 1
crea_print           : 92
crea_quadruplo_right : 121
fin_func_quad        : 64
funciones            : 1 64
guarda_numero_cuadruplo : 99
guarda_resultado_funcion : 53
llama_funcion        : 40
llena_cuadruplo_if   : 83
mas_argumentos       : 55 57
mas_vars             : 4 11
param                : 64
pos_MULTDIV          : 33
pos_SUMRES           : 28
pos_arreglo          : 39
pos_commaf           : 68 70
pos_else             : 83
program              : 0
push_bool_PilaOperandos : 44
push_decimal_PilaOperandos : 42
push_int_PilaOperandos : 41
push_operador_PilaOperadores : 14 19 28 33
push_string_PilaOperandos : 43
push_var_PilaOperandos : 14 39
quita_falso          : 38 53 94
reg_brack            : 64 74 83 86 99 102 103 110
regresa_inicio_while : 99
resuelve_argumentos  : 55 57
resuelve_asignacion  : 14
resuelve_factor      : 32 33
resuelve_llamada_funcion : 53 94
resuelve_operadores_relacionales : 18 19
resuelve_return      : 89
resuelve_termino     : 27 28
tipo_funcion         : 64

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . START EDJO VAR_ID crea_primer_cuadruplo crea_funcion_global SEMICOLON Vars funciones Main

    START           shift and go to state 2

    program                        shift and go to state 1

state 1

    (0) S' -> program .



state 2

    (1) program -> START . EDJO VAR_ID crea_primer_cuadruplo crea_funcion_global SEMICOLON Vars funciones Main

    EDJO            shift and go to state 3


state 3

    (1) program -> START EDJO . VAR_ID crea_primer_cuadruplo crea_funcion_global SEMICOLON Vars funciones Main

    VAR_ID          shift and go to state 4


state 4

    (1) program -> START EDJO VAR_ID . crea_primer_cuadruplo crea_funcion_global SEMICOLON Vars funciones Main
    (2) crea_primer_cuadruplo -> .

    SEMICOLON       reduce using rule 2 (crea_primer_cuadruplo -> .)

    crea_primer_cuadruplo          shift and go to state 5

state 5

    (1) program -> START EDJO VAR_ID crea_primer_cuadruplo . crea_funcion_global SEMICOLON Vars funciones Main
    (3) crea_funcion_global -> .

    SEMICOLON       reduce using rule 3 (crea_funcion_global -> .)

    crea_funcion_global            shift and go to state 6

state 6

    (1) program -> START EDJO VAR_ID crea_primer_cuadruplo crea_funcion_global . SEMICOLON Vars funciones Main

    SEMICOLON       shift and go to state 7


state 7

    (1) program -> START EDJO VAR_ID crea_primer_cuadruplo crea_funcion_global SEMICOLON . Vars funciones Main
    (4) Vars -> . Tipo VAR_ID mas_vars agrega_var_funcion SEMICOLON Vars
    (5) Vars -> .
    (6) Tipo -> . INT
    (7) Tipo -> . DECIMAL
    (8) Tipo -> . STRING
    (9) Tipo -> . CHAR
    (10) Tipo -> . BOOL

    FUNC            reduce using rule 5 (Vars -> .)
    MAIN            reduce using rule 5 (Vars -> .)
    INT             shift and go to state 14
    DECIMAL         shift and go to state 8
    STRING          shift and go to state 12
    CHAR            shift and go to state 10
    BOOL            shift and go to state 9

    Vars                           shift and go to state 11
    Tipo                           shift and go to state 13

state 8

    (7) Tipo -> DECIMAL .

    VAR_ID          reduce using rule 7 (Tipo -> DECIMAL .)


state 9

    (10) Tipo -> BOOL .

    VAR_ID          reduce using rule 10 (Tipo -> BOOL .)


state 10

    (9) Tipo -> CHAR .

    VAR_ID          reduce using rule 9 (Tipo -> CHAR .)


state 11

    (1) program -> START EDJO VAR_ID crea_primer_cuadruplo crea_funcion_global SEMICOLON Vars . funciones Main
    (64) funciones -> . FUNC tipo_funcion VAR_ID LPAREN param RPAREN agrega_funcion LBRACKET Vars reg_brack RBRACKET fin_func_quad funciones
    (65) funciones -> .

    FUNC            shift and go to state 15
    MAIN            reduce using rule 65 (funciones -> .)

    funciones                      shift and go to state 16

state 12

    (8) Tipo -> STRING .

    VAR_ID          reduce using rule 8 (Tipo -> STRING .)


state 13

    (4) Vars -> Tipo . VAR_ID mas_vars agrega_var_funcion SEMICOLON Vars

    VAR_ID          shift and go to state 17


state 14

    (6) Tipo -> INT .

    VAR_ID          reduce using rule 6 (Tipo -> INT .)


state 15

    (64) funciones -> FUNC . tipo_funcion VAR_ID LPAREN param RPAREN agrega_funcion LBRACKET Vars reg_brack RBRACKET fin_func_quad funciones
    (66) tipo_funcion -> . VOID
    (67) tipo_funcion -> . Tipo
    (6) Tipo -> . INT
    (7) Tipo -> . DECIMAL
    (8) Tipo -> . STRING
    (9) Tipo -> . CHAR
    (10) Tipo -> . BOOL

    VOID            shift and go to state 20
    INT             shift and go to state 14
    DECIMAL         shift and go to state 8
    STRING          shift and go to state 12
    CHAR            shift and go to state 10
    BOOL            shift and go to state 9

    tipo_funcion                   shift and go to state 18
    Tipo                           shift and go to state 19

state 16

    (1) program -> START EDJO VAR_ID crea_primer_cuadruplo crea_funcion_global SEMICOLON Vars funciones . Main
    (110) Main -> . MAIN agrega_main_funcion LPAREN RPAREN LBRACKET Vars reg_brack RET ZERO SEMICOLON RBRACKET

    MAIN            shift and go to state 21

    Main                           shift and go to state 22

state 17

    (4) Vars -> Tipo VAR_ID . mas_vars agrega_var_funcion SEMICOLON Vars
    (11) mas_vars -> . COMMA VAR_ID mas_vars
    (12) mas_vars -> .

    COMMA           shift and go to state 23
    SEMICOLON       reduce using rule 12 (mas_vars -> .)

    mas_vars                       shift and go to state 24

state 18

    (64) funciones -> FUNC tipo_funcion . VAR_ID LPAREN param RPAREN agrega_funcion LBRACKET Vars reg_brack RBRACKET fin_func_quad funciones

    VAR_ID          shift and go to state 25


state 19

    (67) tipo_funcion -> Tipo .

    VAR_ID          reduce using rule 67 (tipo_funcion -> Tipo .)


state 20

    (66) tipo_funcion -> VOID .

    VAR_ID          reduce using rule 66 (tipo_funcion -> VOID .)


state 21

    (110) Main -> MAIN . agrega_main_funcion LPAREN RPAREN LBRACKET Vars reg_brack RET ZERO SEMICOLON RBRACKET
    (111) agrega_main_funcion -> .

    LPAREN          reduce using rule 111 (agrega_main_funcion -> .)

    agrega_main_funcion            shift and go to state 26

state 22

    (1) program -> START EDJO VAR_ID crea_primer_cuadruplo crea_funcion_global SEMICOLON Vars funciones Main .

    $end            reduce using rule 1 (program -> START EDJO VAR_ID crea_primer_cuadruplo crea_funcion_global SEMICOLON Vars funciones Main .)


state 23

    (11) mas_vars -> COMMA . VAR_ID mas_vars

    VAR_ID          shift and go to state 27


state 24

    (4) Vars -> Tipo VAR_ID mas_vars . agrega_var_funcion SEMICOLON Vars
    (13) agrega_var_funcion -> .

    SEMICOLON       reduce using rule 13 (agrega_var_funcion -> .)

    agrega_var_funcion             shift and go to state 28

state 25

    (64) funciones -> FUNC tipo_funcion VAR_ID . LPAREN param RPAREN agrega_funcion LBRACKET Vars reg_brack RBRACKET fin_func_quad funciones

    LPAREN          shift and go to state 29


state 26

    (110) Main -> MAIN agrega_main_funcion . LPAREN RPAREN LBRACKET Vars reg_brack RET ZERO SEMICOLON RBRACKET

    LPAREN          shift and go to state 30


state 27

    (11) mas_vars -> COMMA VAR_ID . mas_vars
    (11) mas_vars -> . COMMA VAR_ID mas_vars
    (12) mas_vars -> .

    COMMA           shift and go to state 23
    SEMICOLON       reduce using rule 12 (mas_vars -> .)

    mas_vars                       shift and go to state 31

state 28

    (4) Vars -> Tipo VAR_ID mas_vars agrega_var_funcion . SEMICOLON Vars

    SEMICOLON       shift and go to state 32


state 29

    (64) funciones -> FUNC tipo_funcion VAR_ID LPAREN . param RPAREN agrega_funcion LBRACKET Vars reg_brack RBRACKET fin_func_quad funciones
    (68) param -> . Tipo VAR_ID pos_commaf
    (69) param -> .
    (6) Tipo -> . INT
    (7) Tipo -> . DECIMAL
    (8) Tipo -> . STRING
    (9) Tipo -> . CHAR
    (10) Tipo -> . BOOL

    RPAREN          reduce using rule 69 (param -> .)
    INT             shift and go to state 14
    DECIMAL         shift and go to state 8
    STRING          shift and go to state 12
    CHAR            shift and go to state 10
    BOOL            shift and go to state 9

    param                          shift and go to state 33
    Tipo                           shift and go to state 34

state 30

    (110) Main -> MAIN agrega_main_funcion LPAREN . RPAREN LBRACKET Vars reg_brack RET ZERO SEMICOLON RBRACKET

    RPAREN          shift and go to state 35


state 31

    (11) mas_vars -> COMMA VAR_ID mas_vars .

    SEMICOLON       reduce using rule 11 (mas_vars -> COMMA VAR_ID mas_vars .)


state 32

    (4) Vars -> Tipo VAR_ID mas_vars agrega_var_funcion SEMICOLON . Vars
    (4) Vars -> . Tipo VAR_ID mas_vars agrega_var_funcion SEMICOLON Vars
    (5) Vars -> .
    (6) Tipo -> . INT
    (7) Tipo -> . DECIMAL
    (8) Tipo -> . STRING
    (9) Tipo -> . CHAR
    (10) Tipo -> . BOOL

    FUNC            reduce using rule 5 (Vars -> .)
    MAIN            reduce using rule 5 (Vars -> .)
    IF              reduce using rule 5 (Vars -> .)
    RETURN          reduce using rule 5 (Vars -> .)
    VAR_ID          reduce using rule 5 (Vars -> .)
    PRINT           reduce using rule 5 (Vars -> .)
    FOR             reduce using rule 5 (Vars -> .)
    WHILE           reduce using rule 5 (Vars -> .)
    DO              reduce using rule 5 (Vars -> .)
    TUR             reduce using rule 5 (Vars -> .)
    RET             reduce using rule 5 (Vars -> .)
    RBRACKET        reduce using rule 5 (Vars -> .)
    INT             shift and go to state 14
    DECIMAL         shift and go to state 8
    STRING          shift and go to state 12
    CHAR            shift and go to state 10
    BOOL            shift and go to state 9

    Vars                           shift and go to state 36
    Tipo                           shift and go to state 13

state 33

    (64) funciones -> FUNC tipo_funcion VAR_ID LPAREN param . RPAREN agrega_funcion LBRACKET Vars reg_brack RBRACKET fin_func_quad funciones

    RPAREN          shift and go to state 37


state 34

    (68) param -> Tipo . VAR_ID pos_commaf

    VAR_ID          shift and go to state 38


state 35

    (110) Main -> MAIN agrega_main_funcion LPAREN RPAREN . LBRACKET Vars reg_brack RET ZERO SEMICOLON RBRACKET

    LBRACKET        shift and go to state 39


state 36

    (4) Vars -> Tipo VAR_ID mas_vars agrega_var_funcion SEMICOLON Vars .

    IF              reduce using rule 4 (Vars -> Tipo VAR_ID mas_vars agrega_var_funcion SEMICOLON Vars .)
    RETURN          reduce using rule 4 (Vars -> Tipo VAR_ID mas_vars agrega_var_funcion SEMICOLON Vars .)
    VAR_ID          reduce using rule 4 (Vars -> Tipo VAR_ID mas_vars agrega_var_funcion SEMICOLON Vars .)
    PRINT           reduce using rule 4 (Vars -> Tipo VAR_ID mas_vars agrega_var_funcion SEMICOLON Vars .)
    FOR             reduce using rule 4 (Vars -> Tipo VAR_ID mas_vars agrega_var_funcion SEMICOLON Vars .)
    WHILE           reduce using rule 4 (Vars -> Tipo VAR_ID mas_vars agrega_var_funcion SEMICOLON Vars .)
    DO              reduce using rule 4 (Vars -> Tipo VAR_ID mas_vars agrega_var_funcion SEMICOLON Vars .)
    TUR             reduce using rule 4 (Vars -> Tipo VAR_ID mas_vars agrega_var_funcion SEMICOLON Vars .)
    RET             reduce using rule 4 (Vars -> Tipo VAR_ID mas_vars agrega_var_funcion SEMICOLON Vars .)
    FUNC            reduce using rule 4 (Vars -> Tipo VAR_ID mas_vars agrega_var_funcion SEMICOLON Vars .)
    MAIN            reduce using rule 4 (Vars -> Tipo VAR_ID mas_vars agrega_var_funcion SEMICOLON Vars .)
    RBRACKET        reduce using rule 4 (Vars -> Tipo VAR_ID mas_vars agrega_var_funcion SEMICOLON Vars .)


state 37

    (64) funciones -> FUNC tipo_funcion VAR_ID LPAREN param RPAREN . agrega_funcion LBRACKET Vars reg_brack RBRACKET fin_func_quad funciones
    (72) agrega_funcion -> .

    LBRACKET        reduce using rule 72 (agrega_funcion -> .)

    agrega_funcion                 shift and go to state 40

state 38

    (68) param -> Tipo VAR_ID . pos_commaf
    (70) pos_commaf -> . COMMA Tipo VAR_ID pos_commaf
    (71) pos_commaf -> .

    COMMA           shift and go to state 41
    RPAREN          reduce using rule 71 (pos_commaf -> .)

    pos_commaf                     shift and go to state 42

state 39

    (110) Main -> MAIN agrega_main_funcion LPAREN RPAREN LBRACKET . Vars reg_brack RET ZERO SEMICOLON RBRACKET
    (4) Vars -> . Tipo VAR_ID mas_vars agrega_var_funcion SEMICOLON Vars
    (5) Vars -> .
    (6) Tipo -> . INT
    (7) Tipo -> . DECIMAL
    (8) Tipo -> . STRING
    (9) Tipo -> . CHAR
    (10) Tipo -> . BOOL

    IF              reduce using rule 5 (Vars -> .)
    RETURN          reduce using rule 5 (Vars -> .)
    VAR_ID          reduce using rule 5 (Vars -> .)
    PRINT           reduce using rule 5 (Vars -> .)
    FOR             reduce using rule 5 (Vars -> .)
    WHILE           reduce using rule 5 (Vars -> .)
    DO              reduce using rule 5 (Vars -> .)
    TUR             reduce using rule 5 (Vars -> .)
    RET             reduce using rule 5 (Vars -> .)
    INT             shift and go to state 14
    DECIMAL         shift and go to state 8
    STRING          shift and go to state 12
    CHAR            shift and go to state 10
    BOOL            shift and go to state 9

    Vars                           shift and go to state 43
    Tipo                           shift and go to state 13

state 40

    (64) funciones -> FUNC tipo_funcion VAR_ID LPAREN param RPAREN agrega_funcion . LBRACKET Vars reg_brack RBRACKET fin_func_quad funciones

    LBRACKET        shift and go to state 44


state 41

    (70) pos_commaf -> COMMA . Tipo VAR_ID pos_commaf
    (6) Tipo -> . INT
    (7) Tipo -> . DECIMAL
    (8) Tipo -> . STRING
    (9) Tipo -> . CHAR
    (10) Tipo -> . BOOL

    INT             shift and go to state 14
    DECIMAL         shift and go to state 8
    STRING          shift and go to state 12
    CHAR            shift and go to state 10
    BOOL            shift and go to state 9

    Tipo                           shift and go to state 45

state 42

    (68) param -> Tipo VAR_ID pos_commaf .

    RPAREN          reduce using rule 68 (param -> Tipo VAR_ID pos_commaf .)


state 43

    (110) Main -> MAIN agrega_main_funcion LPAREN RPAREN LBRACKET Vars . reg_brack RET ZERO SEMICOLON RBRACKET
    (74) reg_brack -> . Estatutos reg_brack
    (75) reg_brack -> .
    (76) Estatutos -> . Condicion
    (77) Estatutos -> . Ciclo
    (78) Estatutos -> . Return
    (79) Estatutos -> . Asignacion
    (80) Estatutos -> . Print
    (81) Estatutos -> . Llamada_Func
    (82) Estatutos -> . Turtle
    (83) Condicion -> . IF LPAREN ExpI RPAREN crea_GOTOF LBRACKET reg_brack RBRACKET pos_else llena_cuadruplo_if
    (96) Ciclo -> . For
    (97) Ciclo -> . While
    (98) Ciclo -> . DoWhile
    (89) Return -> . RETURN ExpI SEMICOLON resuelve_return
    (14) Asignacion -> . VAR_ID push_var_PilaOperandos ASSIGN push_operador_PilaOperadores ExpI SEMICOLON resuelve_asignacion
    (91) Print -> . PRINT LPAREN VAR_STRING RPAREN SEMICOLON
    (92) Print -> . PRINT LPAREN ExpI RPAREN SEMICOLON crea_print
    (94) Llamada_Func -> . VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion SEMICOLON checa_void
    (112) Turtle -> . Forward
    (113) Turtle -> . Right
    (114) Turtle -> . Left
    (115) Turtle -> . Circle
    (116) Turtle -> . Position
    (117) Turtle -> . IniciaTurtle
    (118) Turtle -> . TerminaTurtle
    (103) For -> . FOR LPAREN VAR_ID ASSIGN ExpI SEMICOLON ExpI SEMICOLON VAR_ID Exp_ciclo RPAREN LBRACKET reg_brack RBRACKET
    (99) While -> . WHILE guarda_numero_cuadruplo LPAREN ExpI RPAREN crea_GOTOF LBRACKET reg_brack RBRACKET regresa_inicio_while
    (102) DoWhile -> . DO LBRACKET reg_brack RBRACKET WHILE LPAREN ExpI RPAREN SEMICOLON
    (119) Forward -> . TUR POINT FORWARD LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_forward
    (121) Right -> . TUR POINT RIGHT LPAREN ExpI RPAREN SEMICOLON crea_quadruplo_right
    (123) Left -> . TUR POINT LEFT LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_left
    (125) Circle -> . TUR POINT CIRCLE LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_circle
    (127) Position -> . TUR POINT POS LPAREN ExpI COMMA ExpI RPAREN SEMICOLON crea_cuadruplo_pos
    (129) IniciaTurtle -> . TUR POINT TURTLE LPAREN RPAREN SEMICOLON crea_cuadruplo_inicia
    (131) TerminaTurtle -> . TUR POINT FINISH LPAREN RPAREN SEMICOLON crea_cuadruplo_termina

    RET             reduce using rule 75 (reg_brack -> .)
    IF              shift and go to state 48
    RETURN          shift and go to state 62
    VAR_ID          shift and go to state 49
    PRINT           shift and go to state 56
    FOR             shift and go to state 67
    WHILE           shift and go to state 69
    DO              shift and go to state 61
    TUR             shift and go to state 58

    Turtle                         shift and go to state 46
    reg_brack                      shift and go to state 47
    For                            shift and go to state 57
    Asignacion                     shift and go to state 51
    Position                       shift and go to state 66
    While                          shift and go to state 52
    Estatutos                      shift and go to state 53
    Condicion                      shift and go to state 65
    IniciaTurtle                   shift and go to state 54
    Llamada_Func                   shift and go to state 71
    DoWhile                        shift and go to state 55
    Return                         shift and go to state 50
    Left                           shift and go to state 59
    Circle                         shift and go to state 60
    Forward                        shift and go to state 63
    Print                          shift and go to state 64
    Right                          shift and go to state 68
    TerminaTurtle                  shift and go to state 72
    Ciclo                          shift and go to state 70

state 44

    (64) funciones -> FUNC tipo_funcion VAR_ID LPAREN param RPAREN agrega_funcion LBRACKET . Vars reg_brack RBRACKET fin_func_quad funciones
    (4) Vars -> . Tipo VAR_ID mas_vars agrega_var_funcion SEMICOLON Vars
    (5) Vars -> .
    (6) Tipo -> . INT
    (7) Tipo -> . DECIMAL
    (8) Tipo -> . STRING
    (9) Tipo -> . CHAR
    (10) Tipo -> . BOOL

    IF              reduce using rule 5 (Vars -> .)
    RETURN          reduce using rule 5 (Vars -> .)
    VAR_ID          reduce using rule 5 (Vars -> .)
    PRINT           reduce using rule 5 (Vars -> .)
    FOR             reduce using rule 5 (Vars -> .)
    WHILE           reduce using rule 5 (Vars -> .)
    DO              reduce using rule 5 (Vars -> .)
    TUR             reduce using rule 5 (Vars -> .)
    RBRACKET        reduce using rule 5 (Vars -> .)
    INT             shift and go to state 14
    DECIMAL         shift and go to state 8
    STRING          shift and go to state 12
    CHAR            shift and go to state 10
    BOOL            shift and go to state 9

    Vars                           shift and go to state 73
    Tipo                           shift and go to state 13

state 45

    (70) pos_commaf -> COMMA Tipo . VAR_ID pos_commaf

    VAR_ID          shift and go to state 74


state 46

    (82) Estatutos -> Turtle .

    IF              reduce using rule 82 (Estatutos -> Turtle .)
    RETURN          reduce using rule 82 (Estatutos -> Turtle .)
    VAR_ID          reduce using rule 82 (Estatutos -> Turtle .)
    PRINT           reduce using rule 82 (Estatutos -> Turtle .)
    FOR             reduce using rule 82 (Estatutos -> Turtle .)
    WHILE           reduce using rule 82 (Estatutos -> Turtle .)
    DO              reduce using rule 82 (Estatutos -> Turtle .)
    TUR             reduce using rule 82 (Estatutos -> Turtle .)
    RET             reduce using rule 82 (Estatutos -> Turtle .)
    RBRACKET        reduce using rule 82 (Estatutos -> Turtle .)


state 47

    (110) Main -> MAIN agrega_main_funcion LPAREN RPAREN LBRACKET Vars reg_brack . RET ZERO SEMICOLON RBRACKET

    RET             shift and go to state 75


state 48

    (83) Condicion -> IF . LPAREN ExpI RPAREN crea_GOTOF LBRACKET reg_brack RBRACKET pos_else llena_cuadruplo_if

    LPAREN          shift and go to state 76


state 49

    (14) Asignacion -> VAR_ID . push_var_PilaOperandos ASSIGN push_operador_PilaOperadores ExpI SEMICOLON resuelve_asignacion
    (94) Llamada_Func -> VAR_ID . LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion SEMICOLON checa_void
    (15) push_var_PilaOperandos -> .

    LPAREN          shift and go to state 78
    ASSIGN          reduce using rule 15 (push_var_PilaOperandos -> .)

    push_var_PilaOperandos         shift and go to state 77

state 50

    (78) Estatutos -> Return .

    IF              reduce using rule 78 (Estatutos -> Return .)
    RETURN          reduce using rule 78 (Estatutos -> Return .)
    VAR_ID          reduce using rule 78 (Estatutos -> Return .)
    PRINT           reduce using rule 78 (Estatutos -> Return .)
    FOR             reduce using rule 78 (Estatutos -> Return .)
    WHILE           reduce using rule 78 (Estatutos -> Return .)
    DO              reduce using rule 78 (Estatutos -> Return .)
    TUR             reduce using rule 78 (Estatutos -> Return .)
    RET             reduce using rule 78 (Estatutos -> Return .)
    RBRACKET        reduce using rule 78 (Estatutos -> Return .)


state 51

    (79) Estatutos -> Asignacion .

    IF              reduce using rule 79 (Estatutos -> Asignacion .)
    RETURN          reduce using rule 79 (Estatutos -> Asignacion .)
    VAR_ID          reduce using rule 79 (Estatutos -> Asignacion .)
    PRINT           reduce using rule 79 (Estatutos -> Asignacion .)
    FOR             reduce using rule 79 (Estatutos -> Asignacion .)
    WHILE           reduce using rule 79 (Estatutos -> Asignacion .)
    DO              reduce using rule 79 (Estatutos -> Asignacion .)
    TUR             reduce using rule 79 (Estatutos -> Asignacion .)
    RET             reduce using rule 79 (Estatutos -> Asignacion .)
    RBRACKET        reduce using rule 79 (Estatutos -> Asignacion .)


state 52

    (97) Ciclo -> While .

    IF              reduce using rule 97 (Ciclo -> While .)
    RETURN          reduce using rule 97 (Ciclo -> While .)
    VAR_ID          reduce using rule 97 (Ciclo -> While .)
    PRINT           reduce using rule 97 (Ciclo -> While .)
    FOR             reduce using rule 97 (Ciclo -> While .)
    WHILE           reduce using rule 97 (Ciclo -> While .)
    DO              reduce using rule 97 (Ciclo -> While .)
    TUR             reduce using rule 97 (Ciclo -> While .)
    RET             reduce using rule 97 (Ciclo -> While .)
    RBRACKET        reduce using rule 97 (Ciclo -> While .)


state 53

    (74) reg_brack -> Estatutos . reg_brack
    (74) reg_brack -> . Estatutos reg_brack
    (75) reg_brack -> .
    (76) Estatutos -> . Condicion
    (77) Estatutos -> . Ciclo
    (78) Estatutos -> . Return
    (79) Estatutos -> . Asignacion
    (80) Estatutos -> . Print
    (81) Estatutos -> . Llamada_Func
    (82) Estatutos -> . Turtle
    (83) Condicion -> . IF LPAREN ExpI RPAREN crea_GOTOF LBRACKET reg_brack RBRACKET pos_else llena_cuadruplo_if
    (96) Ciclo -> . For
    (97) Ciclo -> . While
    (98) Ciclo -> . DoWhile
    (89) Return -> . RETURN ExpI SEMICOLON resuelve_return
    (14) Asignacion -> . VAR_ID push_var_PilaOperandos ASSIGN push_operador_PilaOperadores ExpI SEMICOLON resuelve_asignacion
    (91) Print -> . PRINT LPAREN VAR_STRING RPAREN SEMICOLON
    (92) Print -> . PRINT LPAREN ExpI RPAREN SEMICOLON crea_print
    (94) Llamada_Func -> . VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion SEMICOLON checa_void
    (112) Turtle -> . Forward
    (113) Turtle -> . Right
    (114) Turtle -> . Left
    (115) Turtle -> . Circle
    (116) Turtle -> . Position
    (117) Turtle -> . IniciaTurtle
    (118) Turtle -> . TerminaTurtle
    (103) For -> . FOR LPAREN VAR_ID ASSIGN ExpI SEMICOLON ExpI SEMICOLON VAR_ID Exp_ciclo RPAREN LBRACKET reg_brack RBRACKET
    (99) While -> . WHILE guarda_numero_cuadruplo LPAREN ExpI RPAREN crea_GOTOF LBRACKET reg_brack RBRACKET regresa_inicio_while
    (102) DoWhile -> . DO LBRACKET reg_brack RBRACKET WHILE LPAREN ExpI RPAREN SEMICOLON
    (119) Forward -> . TUR POINT FORWARD LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_forward
    (121) Right -> . TUR POINT RIGHT LPAREN ExpI RPAREN SEMICOLON crea_quadruplo_right
    (123) Left -> . TUR POINT LEFT LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_left
    (125) Circle -> . TUR POINT CIRCLE LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_circle
    (127) Position -> . TUR POINT POS LPAREN ExpI COMMA ExpI RPAREN SEMICOLON crea_cuadruplo_pos
    (129) IniciaTurtle -> . TUR POINT TURTLE LPAREN RPAREN SEMICOLON crea_cuadruplo_inicia
    (131) TerminaTurtle -> . TUR POINT FINISH LPAREN RPAREN SEMICOLON crea_cuadruplo_termina

    RET             reduce using rule 75 (reg_brack -> .)
    RBRACKET        reduce using rule 75 (reg_brack -> .)
    IF              shift and go to state 48
    RETURN          shift and go to state 62
    VAR_ID          shift and go to state 49
    PRINT           shift and go to state 56
    FOR             shift and go to state 67
    WHILE           shift and go to state 69
    DO              shift and go to state 61
    TUR             shift and go to state 58

    Turtle                         shift and go to state 46
    reg_brack                      shift and go to state 79
    For                            shift and go to state 57
    Asignacion                     shift and go to state 51
    Position                       shift and go to state 66
    While                          shift and go to state 52
    Estatutos                      shift and go to state 53
    Right                          shift and go to state 68
    IniciaTurtle                   shift and go to state 54
    Llamada_Func                   shift and go to state 71
    DoWhile                        shift and go to state 55
    Return                         shift and go to state 50
    Left                           shift and go to state 59
    Circle                         shift and go to state 60
    Forward                        shift and go to state 63
    Print                          shift and go to state 64
    Condicion                      shift and go to state 65
    TerminaTurtle                  shift and go to state 72
    Ciclo                          shift and go to state 70

state 54

    (117) Turtle -> IniciaTurtle .

    IF              reduce using rule 117 (Turtle -> IniciaTurtle .)
    RETURN          reduce using rule 117 (Turtle -> IniciaTurtle .)
    VAR_ID          reduce using rule 117 (Turtle -> IniciaTurtle .)
    PRINT           reduce using rule 117 (Turtle -> IniciaTurtle .)
    FOR             reduce using rule 117 (Turtle -> IniciaTurtle .)
    WHILE           reduce using rule 117 (Turtle -> IniciaTurtle .)
    DO              reduce using rule 117 (Turtle -> IniciaTurtle .)
    TUR             reduce using rule 117 (Turtle -> IniciaTurtle .)
    RET             reduce using rule 117 (Turtle -> IniciaTurtle .)
    RBRACKET        reduce using rule 117 (Turtle -> IniciaTurtle .)


state 55

    (98) Ciclo -> DoWhile .

    IF              reduce using rule 98 (Ciclo -> DoWhile .)
    RETURN          reduce using rule 98 (Ciclo -> DoWhile .)
    VAR_ID          reduce using rule 98 (Ciclo -> DoWhile .)
    PRINT           reduce using rule 98 (Ciclo -> DoWhile .)
    FOR             reduce using rule 98 (Ciclo -> DoWhile .)
    WHILE           reduce using rule 98 (Ciclo -> DoWhile .)
    DO              reduce using rule 98 (Ciclo -> DoWhile .)
    TUR             reduce using rule 98 (Ciclo -> DoWhile .)
    RET             reduce using rule 98 (Ciclo -> DoWhile .)
    RBRACKET        reduce using rule 98 (Ciclo -> DoWhile .)


state 56

    (91) Print -> PRINT . LPAREN VAR_STRING RPAREN SEMICOLON
    (92) Print -> PRINT . LPAREN ExpI RPAREN SEMICOLON crea_print

    LPAREN          shift and go to state 80


state 57

    (96) Ciclo -> For .

    IF              reduce using rule 96 (Ciclo -> For .)
    RETURN          reduce using rule 96 (Ciclo -> For .)
    VAR_ID          reduce using rule 96 (Ciclo -> For .)
    PRINT           reduce using rule 96 (Ciclo -> For .)
    FOR             reduce using rule 96 (Ciclo -> For .)
    WHILE           reduce using rule 96 (Ciclo -> For .)
    DO              reduce using rule 96 (Ciclo -> For .)
    TUR             reduce using rule 96 (Ciclo -> For .)
    RET             reduce using rule 96 (Ciclo -> For .)
    RBRACKET        reduce using rule 96 (Ciclo -> For .)


state 58

    (119) Forward -> TUR . POINT FORWARD LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_forward
    (121) Right -> TUR . POINT RIGHT LPAREN ExpI RPAREN SEMICOLON crea_quadruplo_right
    (123) Left -> TUR . POINT LEFT LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_left
    (125) Circle -> TUR . POINT CIRCLE LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_circle
    (127) Position -> TUR . POINT POS LPAREN ExpI COMMA ExpI RPAREN SEMICOLON crea_cuadruplo_pos
    (129) IniciaTurtle -> TUR . POINT TURTLE LPAREN RPAREN SEMICOLON crea_cuadruplo_inicia
    (131) TerminaTurtle -> TUR . POINT FINISH LPAREN RPAREN SEMICOLON crea_cuadruplo_termina

    POINT           shift and go to state 81


state 59

    (114) Turtle -> Left .

    IF              reduce using rule 114 (Turtle -> Left .)
    RETURN          reduce using rule 114 (Turtle -> Left .)
    VAR_ID          reduce using rule 114 (Turtle -> Left .)
    PRINT           reduce using rule 114 (Turtle -> Left .)
    FOR             reduce using rule 114 (Turtle -> Left .)
    WHILE           reduce using rule 114 (Turtle -> Left .)
    DO              reduce using rule 114 (Turtle -> Left .)
    TUR             reduce using rule 114 (Turtle -> Left .)
    RET             reduce using rule 114 (Turtle -> Left .)
    RBRACKET        reduce using rule 114 (Turtle -> Left .)


state 60

    (115) Turtle -> Circle .

    IF              reduce using rule 115 (Turtle -> Circle .)
    RETURN          reduce using rule 115 (Turtle -> Circle .)
    VAR_ID          reduce using rule 115 (Turtle -> Circle .)
    PRINT           reduce using rule 115 (Turtle -> Circle .)
    FOR             reduce using rule 115 (Turtle -> Circle .)
    WHILE           reduce using rule 115 (Turtle -> Circle .)
    DO              reduce using rule 115 (Turtle -> Circle .)
    TUR             reduce using rule 115 (Turtle -> Circle .)
    RET             reduce using rule 115 (Turtle -> Circle .)
    RBRACKET        reduce using rule 115 (Turtle -> Circle .)


state 61

    (102) DoWhile -> DO . LBRACKET reg_brack RBRACKET WHILE LPAREN ExpI RPAREN SEMICOLON

    LBRACKET        shift and go to state 82


state 62

    (89) Return -> RETURN . ExpI SEMICOLON resuelve_return
    (18) ExpI -> . ExpK resuelve_operadores_relacionales
    (19) ExpI -> . ExpK Operandos push_operador_PilaOperadores ExpK resuelve_operadores_relacionales
    (27) ExpK -> . ExpT resuelve_termino
    (28) ExpK -> . ExpT resuelve_termino pos_SUMRES push_operador_PilaOperadores ExpK
    (32) ExpT -> . ExpF resuelve_factor
    (33) ExpT -> . ExpF resuelve_factor pos_MULTDIV push_operador_PilaOperadores ExpT
    (37) ExpF -> . VAR_CTE
    (38) ExpF -> . LPAREN agrega_falso ExpI RPAREN quita_falso
    (39) ExpF -> . VAR_ID push_var_PilaOperandos pos_arreglo
    (40) ExpF -> . llama_funcion
    (41) VAR_CTE -> . VAR_INT push_int_PilaOperandos
    (42) VAR_CTE -> . VAR_DECIMAL push_decimal_PilaOperandos
    (43) VAR_CTE -> . VAR_STRING push_string_PilaOperandos
    (44) VAR_CTE -> . VAR_BOOL push_bool_PilaOperandos
    (53) llama_funcion -> . VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion guarda_resultado_funcion
    (45) VAR_BOOL -> . FALSE
    (46) VAR_BOOL -> . TRUE

    LPAREN          shift and go to state 95
    VAR_ID          shift and go to state 89
    VAR_INT         shift and go to state 96
    VAR_DECIMAL     shift and go to state 88
    VAR_STRING      shift and go to state 93
    FALSE           shift and go to state 94
    TRUE            shift and go to state 83

    VAR_CTE                        shift and go to state 84
    llama_funcion                  shift and go to state 90
    ExpI                           shift and go to state 91
    ExpT                           shift and go to state 92
    ExpK                           shift and go to state 85
    VAR_BOOL                       shift and go to state 86
    ExpF                           shift and go to state 87

state 63

    (112) Turtle -> Forward .

    IF              reduce using rule 112 (Turtle -> Forward .)
    RETURN          reduce using rule 112 (Turtle -> Forward .)
    VAR_ID          reduce using rule 112 (Turtle -> Forward .)
    PRINT           reduce using rule 112 (Turtle -> Forward .)
    FOR             reduce using rule 112 (Turtle -> Forward .)
    WHILE           reduce using rule 112 (Turtle -> Forward .)
    DO              reduce using rule 112 (Turtle -> Forward .)
    TUR             reduce using rule 112 (Turtle -> Forward .)
    RET             reduce using rule 112 (Turtle -> Forward .)
    RBRACKET        reduce using rule 112 (Turtle -> Forward .)


state 64

    (80) Estatutos -> Print .

    IF              reduce using rule 80 (Estatutos -> Print .)
    RETURN          reduce using rule 80 (Estatutos -> Print .)
    VAR_ID          reduce using rule 80 (Estatutos -> Print .)
    PRINT           reduce using rule 80 (Estatutos -> Print .)
    FOR             reduce using rule 80 (Estatutos -> Print .)
    WHILE           reduce using rule 80 (Estatutos -> Print .)
    DO              reduce using rule 80 (Estatutos -> Print .)
    TUR             reduce using rule 80 (Estatutos -> Print .)
    RET             reduce using rule 80 (Estatutos -> Print .)
    RBRACKET        reduce using rule 80 (Estatutos -> Print .)


state 65

    (76) Estatutos -> Condicion .

    IF              reduce using rule 76 (Estatutos -> Condicion .)
    RETURN          reduce using rule 76 (Estatutos -> Condicion .)
    VAR_ID          reduce using rule 76 (Estatutos -> Condicion .)
    PRINT           reduce using rule 76 (Estatutos -> Condicion .)
    FOR             reduce using rule 76 (Estatutos -> Condicion .)
    WHILE           reduce using rule 76 (Estatutos -> Condicion .)
    DO              reduce using rule 76 (Estatutos -> Condicion .)
    TUR             reduce using rule 76 (Estatutos -> Condicion .)
    RET             reduce using rule 76 (Estatutos -> Condicion .)
    RBRACKET        reduce using rule 76 (Estatutos -> Condicion .)


state 66

    (116) Turtle -> Position .

    IF              reduce using rule 116 (Turtle -> Position .)
    RETURN          reduce using rule 116 (Turtle -> Position .)
    VAR_ID          reduce using rule 116 (Turtle -> Position .)
    PRINT           reduce using rule 116 (Turtle -> Position .)
    FOR             reduce using rule 116 (Turtle -> Position .)
    WHILE           reduce using rule 116 (Turtle -> Position .)
    DO              reduce using rule 116 (Turtle -> Position .)
    TUR             reduce using rule 116 (Turtle -> Position .)
    RET             reduce using rule 116 (Turtle -> Position .)
    RBRACKET        reduce using rule 116 (Turtle -> Position .)


state 67

    (103) For -> FOR . LPAREN VAR_ID ASSIGN ExpI SEMICOLON ExpI SEMICOLON VAR_ID Exp_ciclo RPAREN LBRACKET reg_brack RBRACKET

    LPAREN          shift and go to state 97


state 68

    (113) Turtle -> Right .

    IF              reduce using rule 113 (Turtle -> Right .)
    RETURN          reduce using rule 113 (Turtle -> Right .)
    VAR_ID          reduce using rule 113 (Turtle -> Right .)
    PRINT           reduce using rule 113 (Turtle -> Right .)
    FOR             reduce using rule 113 (Turtle -> Right .)
    WHILE           reduce using rule 113 (Turtle -> Right .)
    DO              reduce using rule 113 (Turtle -> Right .)
    TUR             reduce using rule 113 (Turtle -> Right .)
    RET             reduce using rule 113 (Turtle -> Right .)
    RBRACKET        reduce using rule 113 (Turtle -> Right .)


state 69

    (99) While -> WHILE . guarda_numero_cuadruplo LPAREN ExpI RPAREN crea_GOTOF LBRACKET reg_brack RBRACKET regresa_inicio_while
    (100) guarda_numero_cuadruplo -> .

    LPAREN          reduce using rule 100 (guarda_numero_cuadruplo -> .)

    guarda_numero_cuadruplo        shift and go to state 98

state 70

    (77) Estatutos -> Ciclo .

    IF              reduce using rule 77 (Estatutos -> Ciclo .)
    RETURN          reduce using rule 77 (Estatutos -> Ciclo .)
    VAR_ID          reduce using rule 77 (Estatutos -> Ciclo .)
    PRINT           reduce using rule 77 (Estatutos -> Ciclo .)
    FOR             reduce using rule 77 (Estatutos -> Ciclo .)
    WHILE           reduce using rule 77 (Estatutos -> Ciclo .)
    DO              reduce using rule 77 (Estatutos -> Ciclo .)
    TUR             reduce using rule 77 (Estatutos -> Ciclo .)
    RET             reduce using rule 77 (Estatutos -> Ciclo .)
    RBRACKET        reduce using rule 77 (Estatutos -> Ciclo .)


state 71

    (81) Estatutos -> Llamada_Func .

    IF              reduce using rule 81 (Estatutos -> Llamada_Func .)
    RETURN          reduce using rule 81 (Estatutos -> Llamada_Func .)
    VAR_ID          reduce using rule 81 (Estatutos -> Llamada_Func .)
    PRINT           reduce using rule 81 (Estatutos -> Llamada_Func .)
    FOR             reduce using rule 81 (Estatutos -> Llamada_Func .)
    WHILE           reduce using rule 81 (Estatutos -> Llamada_Func .)
    DO              reduce using rule 81 (Estatutos -> Llamada_Func .)
    TUR             reduce using rule 81 (Estatutos -> Llamada_Func .)
    RET             reduce using rule 81 (Estatutos -> Llamada_Func .)
    RBRACKET        reduce using rule 81 (Estatutos -> Llamada_Func .)


state 72

    (118) Turtle -> TerminaTurtle .

    IF              reduce using rule 118 (Turtle -> TerminaTurtle .)
    RETURN          reduce using rule 118 (Turtle -> TerminaTurtle .)
    VAR_ID          reduce using rule 118 (Turtle -> TerminaTurtle .)
    PRINT           reduce using rule 118 (Turtle -> TerminaTurtle .)
    FOR             reduce using rule 118 (Turtle -> TerminaTurtle .)
    WHILE           reduce using rule 118 (Turtle -> TerminaTurtle .)
    DO              reduce using rule 118 (Turtle -> TerminaTurtle .)
    TUR             reduce using rule 118 (Turtle -> TerminaTurtle .)
    RET             reduce using rule 118 (Turtle -> TerminaTurtle .)
    RBRACKET        reduce using rule 118 (Turtle -> TerminaTurtle .)


state 73

    (64) funciones -> FUNC tipo_funcion VAR_ID LPAREN param RPAREN agrega_funcion LBRACKET Vars . reg_brack RBRACKET fin_func_quad funciones
    (74) reg_brack -> . Estatutos reg_brack
    (75) reg_brack -> .
    (76) Estatutos -> . Condicion
    (77) Estatutos -> . Ciclo
    (78) Estatutos -> . Return
    (79) Estatutos -> . Asignacion
    (80) Estatutos -> . Print
    (81) Estatutos -> . Llamada_Func
    (82) Estatutos -> . Turtle
    (83) Condicion -> . IF LPAREN ExpI RPAREN crea_GOTOF LBRACKET reg_brack RBRACKET pos_else llena_cuadruplo_if
    (96) Ciclo -> . For
    (97) Ciclo -> . While
    (98) Ciclo -> . DoWhile
    (89) Return -> . RETURN ExpI SEMICOLON resuelve_return
    (14) Asignacion -> . VAR_ID push_var_PilaOperandos ASSIGN push_operador_PilaOperadores ExpI SEMICOLON resuelve_asignacion
    (91) Print -> . PRINT LPAREN VAR_STRING RPAREN SEMICOLON
    (92) Print -> . PRINT LPAREN ExpI RPAREN SEMICOLON crea_print
    (94) Llamada_Func -> . VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion SEMICOLON checa_void
    (112) Turtle -> . Forward
    (113) Turtle -> . Right
    (114) Turtle -> . Left
    (115) Turtle -> . Circle
    (116) Turtle -> . Position
    (117) Turtle -> . IniciaTurtle
    (118) Turtle -> . TerminaTurtle
    (103) For -> . FOR LPAREN VAR_ID ASSIGN ExpI SEMICOLON ExpI SEMICOLON VAR_ID Exp_ciclo RPAREN LBRACKET reg_brack RBRACKET
    (99) While -> . WHILE guarda_numero_cuadruplo LPAREN ExpI RPAREN crea_GOTOF LBRACKET reg_brack RBRACKET regresa_inicio_while
    (102) DoWhile -> . DO LBRACKET reg_brack RBRACKET WHILE LPAREN ExpI RPAREN SEMICOLON
    (119) Forward -> . TUR POINT FORWARD LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_forward
    (121) Right -> . TUR POINT RIGHT LPAREN ExpI RPAREN SEMICOLON crea_quadruplo_right
    (123) Left -> . TUR POINT LEFT LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_left
    (125) Circle -> . TUR POINT CIRCLE LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_circle
    (127) Position -> . TUR POINT POS LPAREN ExpI COMMA ExpI RPAREN SEMICOLON crea_cuadruplo_pos
    (129) IniciaTurtle -> . TUR POINT TURTLE LPAREN RPAREN SEMICOLON crea_cuadruplo_inicia
    (131) TerminaTurtle -> . TUR POINT FINISH LPAREN RPAREN SEMICOLON crea_cuadruplo_termina

    RBRACKET        reduce using rule 75 (reg_brack -> .)
    IF              shift and go to state 48
    RETURN          shift and go to state 62
    VAR_ID          shift and go to state 49
    PRINT           shift and go to state 56
    FOR             shift and go to state 67
    WHILE           shift and go to state 69
    DO              shift and go to state 61
    TUR             shift and go to state 58

    Turtle                         shift and go to state 46
    reg_brack                      shift and go to state 99
    For                            shift and go to state 57
    Asignacion                     shift and go to state 51
    While                          shift and go to state 52
    Estatutos                      shift and go to state 53
    Condicion                      shift and go to state 65
    IniciaTurtle                   shift and go to state 54
    Llamada_Func                   shift and go to state 71
    DoWhile                        shift and go to state 55
    Return                         shift and go to state 50
    Left                           shift and go to state 59
    Circle                         shift and go to state 60
    Forward                        shift and go to state 63
    Print                          shift and go to state 64
    Right                          shift and go to state 68
    Position                       shift and go to state 66
    TerminaTurtle                  shift and go to state 72
    Ciclo                          shift and go to state 70

state 74

    (70) pos_commaf -> COMMA Tipo VAR_ID . pos_commaf
    (70) pos_commaf -> . COMMA Tipo VAR_ID pos_commaf
    (71) pos_commaf -> .

    COMMA           shift and go to state 41
    RPAREN          reduce using rule 71 (pos_commaf -> .)

    pos_commaf                     shift and go to state 100

state 75

    (110) Main -> MAIN agrega_main_funcion LPAREN RPAREN LBRACKET Vars reg_brack RET . ZERO SEMICOLON RBRACKET

    ZERO            shift and go to state 101


state 76

    (83) Condicion -> IF LPAREN . ExpI RPAREN crea_GOTOF LBRACKET reg_brack RBRACKET pos_else llena_cuadruplo_if
    (18) ExpI -> . ExpK resuelve_operadores_relacionales
    (19) ExpI -> . ExpK Operandos push_operador_PilaOperadores ExpK resuelve_operadores_relacionales
    (27) ExpK -> . ExpT resuelve_termino
    (28) ExpK -> . ExpT resuelve_termino pos_SUMRES push_operador_PilaOperadores ExpK
    (32) ExpT -> . ExpF resuelve_factor
    (33) ExpT -> . ExpF resuelve_factor pos_MULTDIV push_operador_PilaOperadores ExpT
    (37) ExpF -> . VAR_CTE
    (38) ExpF -> . LPAREN agrega_falso ExpI RPAREN quita_falso
    (39) ExpF -> . VAR_ID push_var_PilaOperandos pos_arreglo
    (40) ExpF -> . llama_funcion
    (41) VAR_CTE -> . VAR_INT push_int_PilaOperandos
    (42) VAR_CTE -> . VAR_DECIMAL push_decimal_PilaOperandos
    (43) VAR_CTE -> . VAR_STRING push_string_PilaOperandos
    (44) VAR_CTE -> . VAR_BOOL push_bool_PilaOperandos
    (53) llama_funcion -> . VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion guarda_resultado_funcion
    (45) VAR_BOOL -> . FALSE
    (46) VAR_BOOL -> . TRUE

    LPAREN          shift and go to state 95
    VAR_ID          shift and go to state 89
    VAR_INT         shift and go to state 96
    VAR_DECIMAL     shift and go to state 88
    VAR_STRING      shift and go to state 93
    FALSE           shift and go to state 94
    TRUE            shift and go to state 83

    VAR_CTE                        shift and go to state 84
    ExpF                           shift and go to state 87
    llama_funcion                  shift and go to state 90
    ExpI                           shift and go to state 102
    ExpT                           shift and go to state 92
    ExpK                           shift and go to state 85
    VAR_BOOL                       shift and go to state 86

state 77

    (14) Asignacion -> VAR_ID push_var_PilaOperandos . ASSIGN push_operador_PilaOperadores ExpI SEMICOLON resuelve_asignacion

    ASSIGN          shift and go to state 103


state 78

    (94) Llamada_Func -> VAR_ID LPAREN . agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion SEMICOLON checa_void
    (51) agrega_falso -> .

    LPAREN          reduce using rule 51 (agrega_falso -> .)
    VAR_ID          reduce using rule 51 (agrega_falso -> .)
    VAR_INT         reduce using rule 51 (agrega_falso -> .)
    VAR_DECIMAL     reduce using rule 51 (agrega_falso -> .)
    VAR_STRING      reduce using rule 51 (agrega_falso -> .)
    FALSE           reduce using rule 51 (agrega_falso -> .)
    TRUE            reduce using rule 51 (agrega_falso -> .)
    RPAREN          reduce using rule 51 (agrega_falso -> .)

    agrega_falso                   shift and go to state 104

state 79

    (74) reg_brack -> Estatutos reg_brack .

    RBRACKET        reduce using rule 74 (reg_brack -> Estatutos reg_brack .)
    RET             reduce using rule 74 (reg_brack -> Estatutos reg_brack .)


state 80

    (91) Print -> PRINT LPAREN . VAR_STRING RPAREN SEMICOLON
    (92) Print -> PRINT LPAREN . ExpI RPAREN SEMICOLON crea_print
    (18) ExpI -> . ExpK resuelve_operadores_relacionales
    (19) ExpI -> . ExpK Operandos push_operador_PilaOperadores ExpK resuelve_operadores_relacionales
    (27) ExpK -> . ExpT resuelve_termino
    (28) ExpK -> . ExpT resuelve_termino pos_SUMRES push_operador_PilaOperadores ExpK
    (32) ExpT -> . ExpF resuelve_factor
    (33) ExpT -> . ExpF resuelve_factor pos_MULTDIV push_operador_PilaOperadores ExpT
    (37) ExpF -> . VAR_CTE
    (38) ExpF -> . LPAREN agrega_falso ExpI RPAREN quita_falso
    (39) ExpF -> . VAR_ID push_var_PilaOperandos pos_arreglo
    (40) ExpF -> . llama_funcion
    (41) VAR_CTE -> . VAR_INT push_int_PilaOperandos
    (42) VAR_CTE -> . VAR_DECIMAL push_decimal_PilaOperandos
    (43) VAR_CTE -> . VAR_STRING push_string_PilaOperandos
    (44) VAR_CTE -> . VAR_BOOL push_bool_PilaOperandos
    (53) llama_funcion -> . VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion guarda_resultado_funcion
    (45) VAR_BOOL -> . FALSE
    (46) VAR_BOOL -> . TRUE

    VAR_STRING      shift and go to state 106
    LPAREN          shift and go to state 95
    VAR_ID          shift and go to state 89
    VAR_INT         shift and go to state 96
    VAR_DECIMAL     shift and go to state 88
    FALSE           shift and go to state 94
    TRUE            shift and go to state 83

    VAR_CTE                        shift and go to state 84
    ExpF                           shift and go to state 87
    llama_funcion                  shift and go to state 90
    ExpI                           shift and go to state 105
    ExpT                           shift and go to state 92
    ExpK                           shift and go to state 85
    VAR_BOOL                       shift and go to state 86

state 81

    (119) Forward -> TUR POINT . FORWARD LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_forward
    (121) Right -> TUR POINT . RIGHT LPAREN ExpI RPAREN SEMICOLON crea_quadruplo_right
    (123) Left -> TUR POINT . LEFT LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_left
    (125) Circle -> TUR POINT . CIRCLE LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_circle
    (127) Position -> TUR POINT . POS LPAREN ExpI COMMA ExpI RPAREN SEMICOLON crea_cuadruplo_pos
    (129) IniciaTurtle -> TUR POINT . TURTLE LPAREN RPAREN SEMICOLON crea_cuadruplo_inicia
    (131) TerminaTurtle -> TUR POINT . FINISH LPAREN RPAREN SEMICOLON crea_cuadruplo_termina

    FORWARD         shift and go to state 113
    RIGHT           shift and go to state 112
    LEFT            shift and go to state 110
    CIRCLE          shift and go to state 107
    POS             shift and go to state 108
    TURTLE          shift and go to state 111
    FINISH          shift and go to state 109


state 82

    (102) DoWhile -> DO LBRACKET . reg_brack RBRACKET WHILE LPAREN ExpI RPAREN SEMICOLON
    (74) reg_brack -> . Estatutos reg_brack
    (75) reg_brack -> .
    (76) Estatutos -> . Condicion
    (77) Estatutos -> . Ciclo
    (78) Estatutos -> . Return
    (79) Estatutos -> . Asignacion
    (80) Estatutos -> . Print
    (81) Estatutos -> . Llamada_Func
    (82) Estatutos -> . Turtle
    (83) Condicion -> . IF LPAREN ExpI RPAREN crea_GOTOF LBRACKET reg_brack RBRACKET pos_else llena_cuadruplo_if
    (96) Ciclo -> . For
    (97) Ciclo -> . While
    (98) Ciclo -> . DoWhile
    (89) Return -> . RETURN ExpI SEMICOLON resuelve_return
    (14) Asignacion -> . VAR_ID push_var_PilaOperandos ASSIGN push_operador_PilaOperadores ExpI SEMICOLON resuelve_asignacion
    (91) Print -> . PRINT LPAREN VAR_STRING RPAREN SEMICOLON
    (92) Print -> . PRINT LPAREN ExpI RPAREN SEMICOLON crea_print
    (94) Llamada_Func -> . VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion SEMICOLON checa_void
    (112) Turtle -> . Forward
    (113) Turtle -> . Right
    (114) Turtle -> . Left
    (115) Turtle -> . Circle
    (116) Turtle -> . Position
    (117) Turtle -> . IniciaTurtle
    (118) Turtle -> . TerminaTurtle
    (103) For -> . FOR LPAREN VAR_ID ASSIGN ExpI SEMICOLON ExpI SEMICOLON VAR_ID Exp_ciclo RPAREN LBRACKET reg_brack RBRACKET
    (99) While -> . WHILE guarda_numero_cuadruplo LPAREN ExpI RPAREN crea_GOTOF LBRACKET reg_brack RBRACKET regresa_inicio_while
    (102) DoWhile -> . DO LBRACKET reg_brack RBRACKET WHILE LPAREN ExpI RPAREN SEMICOLON
    (119) Forward -> . TUR POINT FORWARD LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_forward
    (121) Right -> . TUR POINT RIGHT LPAREN ExpI RPAREN SEMICOLON crea_quadruplo_right
    (123) Left -> . TUR POINT LEFT LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_left
    (125) Circle -> . TUR POINT CIRCLE LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_circle
    (127) Position -> . TUR POINT POS LPAREN ExpI COMMA ExpI RPAREN SEMICOLON crea_cuadruplo_pos
    (129) IniciaTurtle -> . TUR POINT TURTLE LPAREN RPAREN SEMICOLON crea_cuadruplo_inicia
    (131) TerminaTurtle -> . TUR POINT FINISH LPAREN RPAREN SEMICOLON crea_cuadruplo_termina

    RBRACKET        reduce using rule 75 (reg_brack -> .)
    IF              shift and go to state 48
    RETURN          shift and go to state 62
    VAR_ID          shift and go to state 49
    PRINT           shift and go to state 56
    FOR             shift and go to state 67
    WHILE           shift and go to state 69
    DO              shift and go to state 61
    TUR             shift and go to state 58

    Turtle                         shift and go to state 46
    reg_brack                      shift and go to state 114
    For                            shift and go to state 57
    Asignacion                     shift and go to state 51
    Position                       shift and go to state 66
    While                          shift and go to state 52
    Estatutos                      shift and go to state 53
    Right                          shift and go to state 68
    IniciaTurtle                   shift and go to state 54
    Llamada_Func                   shift and go to state 71
    DoWhile                        shift and go to state 55
    Return                         shift and go to state 50
    Left                           shift and go to state 59
    Circle                         shift and go to state 60
    Forward                        shift and go to state 63
    Print                          shift and go to state 64
    Condicion                      shift and go to state 65
    TerminaTurtle                  shift and go to state 72
    Ciclo                          shift and go to state 70

state 83

    (46) VAR_BOOL -> TRUE .

    MULT            reduce using rule 46 (VAR_BOOL -> TRUE .)
    DIV             reduce using rule 46 (VAR_BOOL -> TRUE .)
    PLUS            reduce using rule 46 (VAR_BOOL -> TRUE .)
    MINUS           reduce using rule 46 (VAR_BOOL -> TRUE .)
    LT              reduce using rule 46 (VAR_BOOL -> TRUE .)
    GT              reduce using rule 46 (VAR_BOOL -> TRUE .)
    NE              reduce using rule 46 (VAR_BOOL -> TRUE .)
    LE              reduce using rule 46 (VAR_BOOL -> TRUE .)
    GE              reduce using rule 46 (VAR_BOOL -> TRUE .)
    EQ              reduce using rule 46 (VAR_BOOL -> TRUE .)
    RPAREN          reduce using rule 46 (VAR_BOOL -> TRUE .)
    COMMA           reduce using rule 46 (VAR_BOOL -> TRUE .)
    SEMICOLON       reduce using rule 46 (VAR_BOOL -> TRUE .)
    SRBRACKET       reduce using rule 46 (VAR_BOOL -> TRUE .)


state 84

    (37) ExpF -> VAR_CTE .

    MULT            reduce using rule 37 (ExpF -> VAR_CTE .)
    DIV             reduce using rule 37 (ExpF -> VAR_CTE .)
    PLUS            reduce using rule 37 (ExpF -> VAR_CTE .)
    MINUS           reduce using rule 37 (ExpF -> VAR_CTE .)
    LT              reduce using rule 37 (ExpF -> VAR_CTE .)
    GT              reduce using rule 37 (ExpF -> VAR_CTE .)
    NE              reduce using rule 37 (ExpF -> VAR_CTE .)
    LE              reduce using rule 37 (ExpF -> VAR_CTE .)
    GE              reduce using rule 37 (ExpF -> VAR_CTE .)
    EQ              reduce using rule 37 (ExpF -> VAR_CTE .)
    SRBRACKET       reduce using rule 37 (ExpF -> VAR_CTE .)
    RPAREN          reduce using rule 37 (ExpF -> VAR_CTE .)
    COMMA           reduce using rule 37 (ExpF -> VAR_CTE .)
    SEMICOLON       reduce using rule 37 (ExpF -> VAR_CTE .)


state 85

    (18) ExpI -> ExpK . resuelve_operadores_relacionales
    (19) ExpI -> ExpK . Operandos push_operador_PilaOperadores ExpK resuelve_operadores_relacionales
    (26) resuelve_operadores_relacionales -> .
    (20) Operandos -> . LT
    (21) Operandos -> . GT
    (22) Operandos -> . NE
    (23) Operandos -> . LE
    (24) Operandos -> . GE
    (25) Operandos -> . EQ

    SEMICOLON       reduce using rule 26 (resuelve_operadores_relacionales -> .)
    RPAREN          reduce using rule 26 (resuelve_operadores_relacionales -> .)
    COMMA           reduce using rule 26 (resuelve_operadores_relacionales -> .)
    SRBRACKET       reduce using rule 26 (resuelve_operadores_relacionales -> .)
    LT              shift and go to state 119
    GT              shift and go to state 115
    NE              shift and go to state 118
    LE              shift and go to state 116
    GE              shift and go to state 122
    EQ              shift and go to state 120

    resuelve_operadores_relacionales shift and go to state 117
    Operandos                      shift and go to state 121

state 86

    (44) VAR_CTE -> VAR_BOOL . push_bool_PilaOperandos
    (50) push_bool_PilaOperandos -> .

    MULT            reduce using rule 50 (push_bool_PilaOperandos -> .)
    DIV             reduce using rule 50 (push_bool_PilaOperandos -> .)
    PLUS            reduce using rule 50 (push_bool_PilaOperandos -> .)
    MINUS           reduce using rule 50 (push_bool_PilaOperandos -> .)
    LT              reduce using rule 50 (push_bool_PilaOperandos -> .)
    GT              reduce using rule 50 (push_bool_PilaOperandos -> .)
    NE              reduce using rule 50 (push_bool_PilaOperandos -> .)
    LE              reduce using rule 50 (push_bool_PilaOperandos -> .)
    GE              reduce using rule 50 (push_bool_PilaOperandos -> .)
    EQ              reduce using rule 50 (push_bool_PilaOperandos -> .)
    SEMICOLON       reduce using rule 50 (push_bool_PilaOperandos -> .)
    RPAREN          reduce using rule 50 (push_bool_PilaOperandos -> .)
    COMMA           reduce using rule 50 (push_bool_PilaOperandos -> .)
    SRBRACKET       reduce using rule 50 (push_bool_PilaOperandos -> .)

    push_bool_PilaOperandos        shift and go to state 123

state 87

    (32) ExpT -> ExpF . resuelve_factor
    (33) ExpT -> ExpF . resuelve_factor pos_MULTDIV push_operador_PilaOperadores ExpT
    (34) resuelve_factor -> .

    MULT            reduce using rule 34 (resuelve_factor -> .)
    DIV             reduce using rule 34 (resuelve_factor -> .)
    PLUS            reduce using rule 34 (resuelve_factor -> .)
    MINUS           reduce using rule 34 (resuelve_factor -> .)
    LT              reduce using rule 34 (resuelve_factor -> .)
    GT              reduce using rule 34 (resuelve_factor -> .)
    NE              reduce using rule 34 (resuelve_factor -> .)
    LE              reduce using rule 34 (resuelve_factor -> .)
    GE              reduce using rule 34 (resuelve_factor -> .)
    EQ              reduce using rule 34 (resuelve_factor -> .)
    SEMICOLON       reduce using rule 34 (resuelve_factor -> .)
    RPAREN          reduce using rule 34 (resuelve_factor -> .)
    COMMA           reduce using rule 34 (resuelve_factor -> .)
    SRBRACKET       reduce using rule 34 (resuelve_factor -> .)

    resuelve_factor                shift and go to state 124

state 88

    (42) VAR_CTE -> VAR_DECIMAL . push_decimal_PilaOperandos
    (48) push_decimal_PilaOperandos -> .

    MULT            reduce using rule 48 (push_decimal_PilaOperandos -> .)
    DIV             reduce using rule 48 (push_decimal_PilaOperandos -> .)
    PLUS            reduce using rule 48 (push_decimal_PilaOperandos -> .)
    MINUS           reduce using rule 48 (push_decimal_PilaOperandos -> .)
    LT              reduce using rule 48 (push_decimal_PilaOperandos -> .)
    GT              reduce using rule 48 (push_decimal_PilaOperandos -> .)
    NE              reduce using rule 48 (push_decimal_PilaOperandos -> .)
    LE              reduce using rule 48 (push_decimal_PilaOperandos -> .)
    GE              reduce using rule 48 (push_decimal_PilaOperandos -> .)
    EQ              reduce using rule 48 (push_decimal_PilaOperandos -> .)
    SEMICOLON       reduce using rule 48 (push_decimal_PilaOperandos -> .)
    RPAREN          reduce using rule 48 (push_decimal_PilaOperandos -> .)
    COMMA           reduce using rule 48 (push_decimal_PilaOperandos -> .)
    SRBRACKET       reduce using rule 48 (push_decimal_PilaOperandos -> .)

    push_decimal_PilaOperandos     shift and go to state 125

state 89

    (39) ExpF -> VAR_ID . push_var_PilaOperandos pos_arreglo
    (53) llama_funcion -> VAR_ID . LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion guarda_resultado_funcion
    (15) push_var_PilaOperandos -> .

    LPAREN          shift and go to state 126
    SLBRACKET       reduce using rule 15 (push_var_PilaOperandos -> .)
    MULT            reduce using rule 15 (push_var_PilaOperandos -> .)
    DIV             reduce using rule 15 (push_var_PilaOperandos -> .)
    PLUS            reduce using rule 15 (push_var_PilaOperandos -> .)
    MINUS           reduce using rule 15 (push_var_PilaOperandos -> .)
    LT              reduce using rule 15 (push_var_PilaOperandos -> .)
    GT              reduce using rule 15 (push_var_PilaOperandos -> .)
    NE              reduce using rule 15 (push_var_PilaOperandos -> .)
    LE              reduce using rule 15 (push_var_PilaOperandos -> .)
    GE              reduce using rule 15 (push_var_PilaOperandos -> .)
    EQ              reduce using rule 15 (push_var_PilaOperandos -> .)
    SEMICOLON       reduce using rule 15 (push_var_PilaOperandos -> .)
    RPAREN          reduce using rule 15 (push_var_PilaOperandos -> .)
    COMMA           reduce using rule 15 (push_var_PilaOperandos -> .)
    SRBRACKET       reduce using rule 15 (push_var_PilaOperandos -> .)

    push_var_PilaOperandos         shift and go to state 127

state 90

    (40) ExpF -> llama_funcion .

    MULT            reduce using rule 40 (ExpF -> llama_funcion .)
    DIV             reduce using rule 40 (ExpF -> llama_funcion .)
    PLUS            reduce using rule 40 (ExpF -> llama_funcion .)
    MINUS           reduce using rule 40 (ExpF -> llama_funcion .)
    LT              reduce using rule 40 (ExpF -> llama_funcion .)
    GT              reduce using rule 40 (ExpF -> llama_funcion .)
    NE              reduce using rule 40 (ExpF -> llama_funcion .)
    LE              reduce using rule 40 (ExpF -> llama_funcion .)
    GE              reduce using rule 40 (ExpF -> llama_funcion .)
    EQ              reduce using rule 40 (ExpF -> llama_funcion .)
    SRBRACKET       reduce using rule 40 (ExpF -> llama_funcion .)
    RPAREN          reduce using rule 40 (ExpF -> llama_funcion .)
    COMMA           reduce using rule 40 (ExpF -> llama_funcion .)
    SEMICOLON       reduce using rule 40 (ExpF -> llama_funcion .)


state 91

    (89) Return -> RETURN ExpI . SEMICOLON resuelve_return

    SEMICOLON       shift and go to state 128


state 92

    (27) ExpK -> ExpT . resuelve_termino
    (28) ExpK -> ExpT . resuelve_termino pos_SUMRES push_operador_PilaOperadores ExpK
    (29) resuelve_termino -> .

    PLUS            reduce using rule 29 (resuelve_termino -> .)
    MINUS           reduce using rule 29 (resuelve_termino -> .)
    LT              reduce using rule 29 (resuelve_termino -> .)
    GT              reduce using rule 29 (resuelve_termino -> .)
    NE              reduce using rule 29 (resuelve_termino -> .)
    LE              reduce using rule 29 (resuelve_termino -> .)
    GE              reduce using rule 29 (resuelve_termino -> .)
    EQ              reduce using rule 29 (resuelve_termino -> .)
    SEMICOLON       reduce using rule 29 (resuelve_termino -> .)
    RPAREN          reduce using rule 29 (resuelve_termino -> .)
    COMMA           reduce using rule 29 (resuelve_termino -> .)
    SRBRACKET       reduce using rule 29 (resuelve_termino -> .)

    resuelve_termino               shift and go to state 129

state 93

    (43) VAR_CTE -> VAR_STRING . push_string_PilaOperandos
    (49) push_string_PilaOperandos -> .

    MULT            reduce using rule 49 (push_string_PilaOperandos -> .)
    DIV             reduce using rule 49 (push_string_PilaOperandos -> .)
    PLUS            reduce using rule 49 (push_string_PilaOperandos -> .)
    MINUS           reduce using rule 49 (push_string_PilaOperandos -> .)
    LT              reduce using rule 49 (push_string_PilaOperandos -> .)
    GT              reduce using rule 49 (push_string_PilaOperandos -> .)
    NE              reduce using rule 49 (push_string_PilaOperandos -> .)
    LE              reduce using rule 49 (push_string_PilaOperandos -> .)
    GE              reduce using rule 49 (push_string_PilaOperandos -> .)
    EQ              reduce using rule 49 (push_string_PilaOperandos -> .)
    SEMICOLON       reduce using rule 49 (push_string_PilaOperandos -> .)
    RPAREN          reduce using rule 49 (push_string_PilaOperandos -> .)
    COMMA           reduce using rule 49 (push_string_PilaOperandos -> .)
    SRBRACKET       reduce using rule 49 (push_string_PilaOperandos -> .)

    push_string_PilaOperandos      shift and go to state 130

state 94

    (45) VAR_BOOL -> FALSE .

    MULT            reduce using rule 45 (VAR_BOOL -> FALSE .)
    DIV             reduce using rule 45 (VAR_BOOL -> FALSE .)
    PLUS            reduce using rule 45 (VAR_BOOL -> FALSE .)
    MINUS           reduce using rule 45 (VAR_BOOL -> FALSE .)
    LT              reduce using rule 45 (VAR_BOOL -> FALSE .)
    GT              reduce using rule 45 (VAR_BOOL -> FALSE .)
    NE              reduce using rule 45 (VAR_BOOL -> FALSE .)
    LE              reduce using rule 45 (VAR_BOOL -> FALSE .)
    GE              reduce using rule 45 (VAR_BOOL -> FALSE .)
    EQ              reduce using rule 45 (VAR_BOOL -> FALSE .)
    RPAREN          reduce using rule 45 (VAR_BOOL -> FALSE .)
    COMMA           reduce using rule 45 (VAR_BOOL -> FALSE .)
    SEMICOLON       reduce using rule 45 (VAR_BOOL -> FALSE .)
    SRBRACKET       reduce using rule 45 (VAR_BOOL -> FALSE .)


state 95

    (38) ExpF -> LPAREN . agrega_falso ExpI RPAREN quita_falso
    (51) agrega_falso -> .

    LPAREN          reduce using rule 51 (agrega_falso -> .)
    VAR_ID          reduce using rule 51 (agrega_falso -> .)
    VAR_INT         reduce using rule 51 (agrega_falso -> .)
    VAR_DECIMAL     reduce using rule 51 (agrega_falso -> .)
    VAR_STRING      reduce using rule 51 (agrega_falso -> .)
    FALSE           reduce using rule 51 (agrega_falso -> .)
    TRUE            reduce using rule 51 (agrega_falso -> .)

    agrega_falso                   shift and go to state 131

state 96

    (41) VAR_CTE -> VAR_INT . push_int_PilaOperandos
    (47) push_int_PilaOperandos -> .

    MULT            reduce using rule 47 (push_int_PilaOperandos -> .)
    DIV             reduce using rule 47 (push_int_PilaOperandos -> .)
    PLUS            reduce using rule 47 (push_int_PilaOperandos -> .)
    MINUS           reduce using rule 47 (push_int_PilaOperandos -> .)
    LT              reduce using rule 47 (push_int_PilaOperandos -> .)
    GT              reduce using rule 47 (push_int_PilaOperandos -> .)
    NE              reduce using rule 47 (push_int_PilaOperandos -> .)
    LE              reduce using rule 47 (push_int_PilaOperandos -> .)
    GE              reduce using rule 47 (push_int_PilaOperandos -> .)
    EQ              reduce using rule 47 (push_int_PilaOperandos -> .)
    SEMICOLON       reduce using rule 47 (push_int_PilaOperandos -> .)
    RPAREN          reduce using rule 47 (push_int_PilaOperandos -> .)
    COMMA           reduce using rule 47 (push_int_PilaOperandos -> .)
    SRBRACKET       reduce using rule 47 (push_int_PilaOperandos -> .)

    push_int_PilaOperandos         shift and go to state 132

state 97

    (103) For -> FOR LPAREN . VAR_ID ASSIGN ExpI SEMICOLON ExpI SEMICOLON VAR_ID Exp_ciclo RPAREN LBRACKET reg_brack RBRACKET

    VAR_ID          shift and go to state 133


state 98

    (99) While -> WHILE guarda_numero_cuadruplo . LPAREN ExpI RPAREN crea_GOTOF LBRACKET reg_brack RBRACKET regresa_inicio_while

    LPAREN          shift and go to state 134


state 99

    (64) funciones -> FUNC tipo_funcion VAR_ID LPAREN param RPAREN agrega_funcion LBRACKET Vars reg_brack . RBRACKET fin_func_quad funciones

    RBRACKET        shift and go to state 135


state 100

    (70) pos_commaf -> COMMA Tipo VAR_ID pos_commaf .

    RPAREN          reduce using rule 70 (pos_commaf -> COMMA Tipo VAR_ID pos_commaf .)


state 101

    (110) Main -> MAIN agrega_main_funcion LPAREN RPAREN LBRACKET Vars reg_brack RET ZERO . SEMICOLON RBRACKET

    SEMICOLON       shift and go to state 136


state 102

    (83) Condicion -> IF LPAREN ExpI . RPAREN crea_GOTOF LBRACKET reg_brack RBRACKET pos_else llena_cuadruplo_if

    RPAREN          shift and go to state 137


state 103

    (14) Asignacion -> VAR_ID push_var_PilaOperandos ASSIGN . push_operador_PilaOperadores ExpI SEMICOLON resuelve_asignacion
    (16) push_operador_PilaOperadores -> .

    LPAREN          reduce using rule 16 (push_operador_PilaOperadores -> .)
    VAR_ID          reduce using rule 16 (push_operador_PilaOperadores -> .)
    VAR_INT         reduce using rule 16 (push_operador_PilaOperadores -> .)
    VAR_DECIMAL     reduce using rule 16 (push_operador_PilaOperadores -> .)
    VAR_STRING      reduce using rule 16 (push_operador_PilaOperadores -> .)
    FALSE           reduce using rule 16 (push_operador_PilaOperadores -> .)
    TRUE            reduce using rule 16 (push_operador_PilaOperadores -> .)

    push_operador_PilaOperadores   shift and go to state 138

state 104

    (94) Llamada_Func -> VAR_ID LPAREN agrega_falso . checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion SEMICOLON checa_void
    (54) checa_funcion_si_existe -> .

    LPAREN          reduce using rule 54 (checa_funcion_si_existe -> .)
    VAR_ID          reduce using rule 54 (checa_funcion_si_existe -> .)
    VAR_INT         reduce using rule 54 (checa_funcion_si_existe -> .)
    VAR_DECIMAL     reduce using rule 54 (checa_funcion_si_existe -> .)
    VAR_STRING      reduce using rule 54 (checa_funcion_si_existe -> .)
    FALSE           reduce using rule 54 (checa_funcion_si_existe -> .)
    TRUE            reduce using rule 54 (checa_funcion_si_existe -> .)
    RPAREN          reduce using rule 54 (checa_funcion_si_existe -> .)

    checa_funcion_si_existe        shift and go to state 139

state 105

    (92) Print -> PRINT LPAREN ExpI . RPAREN SEMICOLON crea_print

    RPAREN          shift and go to state 140


state 106

    (91) Print -> PRINT LPAREN VAR_STRING . RPAREN SEMICOLON
    (43) VAR_CTE -> VAR_STRING . push_string_PilaOperandos
    (49) push_string_PilaOperandos -> .

  ! shift/reduce conflict for RPAREN resolved as shift
    RPAREN          shift and go to state 141
    MULT            reduce using rule 49 (push_string_PilaOperandos -> .)
    DIV             reduce using rule 49 (push_string_PilaOperandos -> .)
    PLUS            reduce using rule 49 (push_string_PilaOperandos -> .)
    MINUS           reduce using rule 49 (push_string_PilaOperandos -> .)
    LT              reduce using rule 49 (push_string_PilaOperandos -> .)
    GT              reduce using rule 49 (push_string_PilaOperandos -> .)
    NE              reduce using rule 49 (push_string_PilaOperandos -> .)
    LE              reduce using rule 49 (push_string_PilaOperandos -> .)
    GE              reduce using rule 49 (push_string_PilaOperandos -> .)
    EQ              reduce using rule 49 (push_string_PilaOperandos -> .)

  ! RPAREN          [ reduce using rule 49 (push_string_PilaOperandos -> .) ]

    push_string_PilaOperandos      shift and go to state 130

state 107

    (125) Circle -> TUR POINT CIRCLE . LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_circle

    LPAREN          shift and go to state 142


state 108

    (127) Position -> TUR POINT POS . LPAREN ExpI COMMA ExpI RPAREN SEMICOLON crea_cuadruplo_pos

    LPAREN          shift and go to state 143


state 109

    (131) TerminaTurtle -> TUR POINT FINISH . LPAREN RPAREN SEMICOLON crea_cuadruplo_termina

    LPAREN          shift and go to state 144


state 110

    (123) Left -> TUR POINT LEFT . LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_left

    LPAREN          shift and go to state 145


state 111

    (129) IniciaTurtle -> TUR POINT TURTLE . LPAREN RPAREN SEMICOLON crea_cuadruplo_inicia

    LPAREN          shift and go to state 146


state 112

    (121) Right -> TUR POINT RIGHT . LPAREN ExpI RPAREN SEMICOLON crea_quadruplo_right

    LPAREN          shift and go to state 147


state 113

    (119) Forward -> TUR POINT FORWARD . LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_forward

    LPAREN          shift and go to state 148


state 114

    (102) DoWhile -> DO LBRACKET reg_brack . RBRACKET WHILE LPAREN ExpI RPAREN SEMICOLON

    RBRACKET        shift and go to state 149


state 115

    (21) Operandos -> GT .

    LPAREN          reduce using rule 21 (Operandos -> GT .)
    VAR_ID          reduce using rule 21 (Operandos -> GT .)
    VAR_INT         reduce using rule 21 (Operandos -> GT .)
    VAR_DECIMAL     reduce using rule 21 (Operandos -> GT .)
    VAR_STRING      reduce using rule 21 (Operandos -> GT .)
    FALSE           reduce using rule 21 (Operandos -> GT .)
    TRUE            reduce using rule 21 (Operandos -> GT .)


state 116

    (23) Operandos -> LE .

    LPAREN          reduce using rule 23 (Operandos -> LE .)
    VAR_ID          reduce using rule 23 (Operandos -> LE .)
    VAR_INT         reduce using rule 23 (Operandos -> LE .)
    VAR_DECIMAL     reduce using rule 23 (Operandos -> LE .)
    VAR_STRING      reduce using rule 23 (Operandos -> LE .)
    FALSE           reduce using rule 23 (Operandos -> LE .)
    TRUE            reduce using rule 23 (Operandos -> LE .)


state 117

    (18) ExpI -> ExpK resuelve_operadores_relacionales .

    RPAREN          reduce using rule 18 (ExpI -> ExpK resuelve_operadores_relacionales .)
    COMMA           reduce using rule 18 (ExpI -> ExpK resuelve_operadores_relacionales .)
    SEMICOLON       reduce using rule 18 (ExpI -> ExpK resuelve_operadores_relacionales .)
    SRBRACKET       reduce using rule 18 (ExpI -> ExpK resuelve_operadores_relacionales .)


state 118

    (22) Operandos -> NE .

    LPAREN          reduce using rule 22 (Operandos -> NE .)
    VAR_ID          reduce using rule 22 (Operandos -> NE .)
    VAR_INT         reduce using rule 22 (Operandos -> NE .)
    VAR_DECIMAL     reduce using rule 22 (Operandos -> NE .)
    VAR_STRING      reduce using rule 22 (Operandos -> NE .)
    FALSE           reduce using rule 22 (Operandos -> NE .)
    TRUE            reduce using rule 22 (Operandos -> NE .)


state 119

    (20) Operandos -> LT .

    LPAREN          reduce using rule 20 (Operandos -> LT .)
    VAR_ID          reduce using rule 20 (Operandos -> LT .)
    VAR_INT         reduce using rule 20 (Operandos -> LT .)
    VAR_DECIMAL     reduce using rule 20 (Operandos -> LT .)
    VAR_STRING      reduce using rule 20 (Operandos -> LT .)
    FALSE           reduce using rule 20 (Operandos -> LT .)
    TRUE            reduce using rule 20 (Operandos -> LT .)


state 120

    (25) Operandos -> EQ .

    LPAREN          reduce using rule 25 (Operandos -> EQ .)
    VAR_ID          reduce using rule 25 (Operandos -> EQ .)
    VAR_INT         reduce using rule 25 (Operandos -> EQ .)
    VAR_DECIMAL     reduce using rule 25 (Operandos -> EQ .)
    VAR_STRING      reduce using rule 25 (Operandos -> EQ .)
    FALSE           reduce using rule 25 (Operandos -> EQ .)
    TRUE            reduce using rule 25 (Operandos -> EQ .)


state 121

    (19) ExpI -> ExpK Operandos . push_operador_PilaOperadores ExpK resuelve_operadores_relacionales
    (16) push_operador_PilaOperadores -> .

    LPAREN          reduce using rule 16 (push_operador_PilaOperadores -> .)
    VAR_ID          reduce using rule 16 (push_operador_PilaOperadores -> .)
    VAR_INT         reduce using rule 16 (push_operador_PilaOperadores -> .)
    VAR_DECIMAL     reduce using rule 16 (push_operador_PilaOperadores -> .)
    VAR_STRING      reduce using rule 16 (push_operador_PilaOperadores -> .)
    FALSE           reduce using rule 16 (push_operador_PilaOperadores -> .)
    TRUE            reduce using rule 16 (push_operador_PilaOperadores -> .)

    push_operador_PilaOperadores   shift and go to state 150

state 122

    (24) Operandos -> GE .

    LPAREN          reduce using rule 24 (Operandos -> GE .)
    VAR_ID          reduce using rule 24 (Operandos -> GE .)
    VAR_INT         reduce using rule 24 (Operandos -> GE .)
    VAR_DECIMAL     reduce using rule 24 (Operandos -> GE .)
    VAR_STRING      reduce using rule 24 (Operandos -> GE .)
    FALSE           reduce using rule 24 (Operandos -> GE .)
    TRUE            reduce using rule 24 (Operandos -> GE .)


state 123

    (44) VAR_CTE -> VAR_BOOL push_bool_PilaOperandos .

    MULT            reduce using rule 44 (VAR_CTE -> VAR_BOOL push_bool_PilaOperandos .)
    DIV             reduce using rule 44 (VAR_CTE -> VAR_BOOL push_bool_PilaOperandos .)
    PLUS            reduce using rule 44 (VAR_CTE -> VAR_BOOL push_bool_PilaOperandos .)
    MINUS           reduce using rule 44 (VAR_CTE -> VAR_BOOL push_bool_PilaOperandos .)
    LT              reduce using rule 44 (VAR_CTE -> VAR_BOOL push_bool_PilaOperandos .)
    GT              reduce using rule 44 (VAR_CTE -> VAR_BOOL push_bool_PilaOperandos .)
    NE              reduce using rule 44 (VAR_CTE -> VAR_BOOL push_bool_PilaOperandos .)
    LE              reduce using rule 44 (VAR_CTE -> VAR_BOOL push_bool_PilaOperandos .)
    GE              reduce using rule 44 (VAR_CTE -> VAR_BOOL push_bool_PilaOperandos .)
    EQ              reduce using rule 44 (VAR_CTE -> VAR_BOOL push_bool_PilaOperandos .)
    RPAREN          reduce using rule 44 (VAR_CTE -> VAR_BOOL push_bool_PilaOperandos .)
    SRBRACKET       reduce using rule 44 (VAR_CTE -> VAR_BOOL push_bool_PilaOperandos .)
    SEMICOLON       reduce using rule 44 (VAR_CTE -> VAR_BOOL push_bool_PilaOperandos .)
    COMMA           reduce using rule 44 (VAR_CTE -> VAR_BOOL push_bool_PilaOperandos .)


state 124

    (32) ExpT -> ExpF resuelve_factor .
    (33) ExpT -> ExpF resuelve_factor . pos_MULTDIV push_operador_PilaOperadores ExpT
    (35) pos_MULTDIV -> . MULT
    (36) pos_MULTDIV -> . DIV

    PLUS            reduce using rule 32 (ExpT -> ExpF resuelve_factor .)
    MINUS           reduce using rule 32 (ExpT -> ExpF resuelve_factor .)
    LT              reduce using rule 32 (ExpT -> ExpF resuelve_factor .)
    GT              reduce using rule 32 (ExpT -> ExpF resuelve_factor .)
    NE              reduce using rule 32 (ExpT -> ExpF resuelve_factor .)
    LE              reduce using rule 32 (ExpT -> ExpF resuelve_factor .)
    GE              reduce using rule 32 (ExpT -> ExpF resuelve_factor .)
    EQ              reduce using rule 32 (ExpT -> ExpF resuelve_factor .)
    SRBRACKET       reduce using rule 32 (ExpT -> ExpF resuelve_factor .)
    RPAREN          reduce using rule 32 (ExpT -> ExpF resuelve_factor .)
    COMMA           reduce using rule 32 (ExpT -> ExpF resuelve_factor .)
    SEMICOLON       reduce using rule 32 (ExpT -> ExpF resuelve_factor .)
    MULT            shift and go to state 153
    DIV             shift and go to state 152

    pos_MULTDIV                    shift and go to state 151

state 125

    (42) VAR_CTE -> VAR_DECIMAL push_decimal_PilaOperandos .

    MULT            reduce using rule 42 (VAR_CTE -> VAR_DECIMAL push_decimal_PilaOperandos .)
    DIV             reduce using rule 42 (VAR_CTE -> VAR_DECIMAL push_decimal_PilaOperandos .)
    PLUS            reduce using rule 42 (VAR_CTE -> VAR_DECIMAL push_decimal_PilaOperandos .)
    MINUS           reduce using rule 42 (VAR_CTE -> VAR_DECIMAL push_decimal_PilaOperandos .)
    LT              reduce using rule 42 (VAR_CTE -> VAR_DECIMAL push_decimal_PilaOperandos .)
    GT              reduce using rule 42 (VAR_CTE -> VAR_DECIMAL push_decimal_PilaOperandos .)
    NE              reduce using rule 42 (VAR_CTE -> VAR_DECIMAL push_decimal_PilaOperandos .)
    LE              reduce using rule 42 (VAR_CTE -> VAR_DECIMAL push_decimal_PilaOperandos .)
    GE              reduce using rule 42 (VAR_CTE -> VAR_DECIMAL push_decimal_PilaOperandos .)
    EQ              reduce using rule 42 (VAR_CTE -> VAR_DECIMAL push_decimal_PilaOperandos .)
    RPAREN          reduce using rule 42 (VAR_CTE -> VAR_DECIMAL push_decimal_PilaOperandos .)
    SRBRACKET       reduce using rule 42 (VAR_CTE -> VAR_DECIMAL push_decimal_PilaOperandos .)
    SEMICOLON       reduce using rule 42 (VAR_CTE -> VAR_DECIMAL push_decimal_PilaOperandos .)
    COMMA           reduce using rule 42 (VAR_CTE -> VAR_DECIMAL push_decimal_PilaOperandos .)


state 126

    (53) llama_funcion -> VAR_ID LPAREN . agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion guarda_resultado_funcion
    (51) agrega_falso -> .

    LPAREN          reduce using rule 51 (agrega_falso -> .)
    VAR_ID          reduce using rule 51 (agrega_falso -> .)
    VAR_INT         reduce using rule 51 (agrega_falso -> .)
    VAR_DECIMAL     reduce using rule 51 (agrega_falso -> .)
    VAR_STRING      reduce using rule 51 (agrega_falso -> .)
    FALSE           reduce using rule 51 (agrega_falso -> .)
    TRUE            reduce using rule 51 (agrega_falso -> .)
    RPAREN          reduce using rule 51 (agrega_falso -> .)

    agrega_falso                   shift and go to state 154

state 127

    (39) ExpF -> VAR_ID push_var_PilaOperandos . pos_arreglo
    (62) pos_arreglo -> . SLBRACKET ExpI SRBRACKET
    (63) pos_arreglo -> .

    SLBRACKET       shift and go to state 155
    MULT            reduce using rule 63 (pos_arreglo -> .)
    DIV             reduce using rule 63 (pos_arreglo -> .)
    PLUS            reduce using rule 63 (pos_arreglo -> .)
    MINUS           reduce using rule 63 (pos_arreglo -> .)
    LT              reduce using rule 63 (pos_arreglo -> .)
    GT              reduce using rule 63 (pos_arreglo -> .)
    NE              reduce using rule 63 (pos_arreglo -> .)
    LE              reduce using rule 63 (pos_arreglo -> .)
    GE              reduce using rule 63 (pos_arreglo -> .)
    EQ              reduce using rule 63 (pos_arreglo -> .)
    SEMICOLON       reduce using rule 63 (pos_arreglo -> .)
    RPAREN          reduce using rule 63 (pos_arreglo -> .)
    COMMA           reduce using rule 63 (pos_arreglo -> .)
    SRBRACKET       reduce using rule 63 (pos_arreglo -> .)

    pos_arreglo                    shift and go to state 156

state 128

    (89) Return -> RETURN ExpI SEMICOLON . resuelve_return
    (90) resuelve_return -> .

    IF              reduce using rule 90 (resuelve_return -> .)
    RETURN          reduce using rule 90 (resuelve_return -> .)
    VAR_ID          reduce using rule 90 (resuelve_return -> .)
    PRINT           reduce using rule 90 (resuelve_return -> .)
    FOR             reduce using rule 90 (resuelve_return -> .)
    WHILE           reduce using rule 90 (resuelve_return -> .)
    DO              reduce using rule 90 (resuelve_return -> .)
    TUR             reduce using rule 90 (resuelve_return -> .)
    RET             reduce using rule 90 (resuelve_return -> .)
    RBRACKET        reduce using rule 90 (resuelve_return -> .)

    resuelve_return                shift and go to state 157

state 129

    (27) ExpK -> ExpT resuelve_termino .
    (28) ExpK -> ExpT resuelve_termino . pos_SUMRES push_operador_PilaOperadores ExpK
    (30) pos_SUMRES -> . PLUS
    (31) pos_SUMRES -> . MINUS

    LT              reduce using rule 27 (ExpK -> ExpT resuelve_termino .)
    GT              reduce using rule 27 (ExpK -> ExpT resuelve_termino .)
    NE              reduce using rule 27 (ExpK -> ExpT resuelve_termino .)
    LE              reduce using rule 27 (ExpK -> ExpT resuelve_termino .)
    GE              reduce using rule 27 (ExpK -> ExpT resuelve_termino .)
    EQ              reduce using rule 27 (ExpK -> ExpT resuelve_termino .)
    RPAREN          reduce using rule 27 (ExpK -> ExpT resuelve_termino .)
    COMMA           reduce using rule 27 (ExpK -> ExpT resuelve_termino .)
    SEMICOLON       reduce using rule 27 (ExpK -> ExpT resuelve_termino .)
    SRBRACKET       reduce using rule 27 (ExpK -> ExpT resuelve_termino .)
    PLUS            shift and go to state 158
    MINUS           shift and go to state 160

    pos_SUMRES                     shift and go to state 159

state 130

    (43) VAR_CTE -> VAR_STRING push_string_PilaOperandos .

    MULT            reduce using rule 43 (VAR_CTE -> VAR_STRING push_string_PilaOperandos .)
    DIV             reduce using rule 43 (VAR_CTE -> VAR_STRING push_string_PilaOperandos .)
    PLUS            reduce using rule 43 (VAR_CTE -> VAR_STRING push_string_PilaOperandos .)
    MINUS           reduce using rule 43 (VAR_CTE -> VAR_STRING push_string_PilaOperandos .)
    LT              reduce using rule 43 (VAR_CTE -> VAR_STRING push_string_PilaOperandos .)
    GT              reduce using rule 43 (VAR_CTE -> VAR_STRING push_string_PilaOperandos .)
    NE              reduce using rule 43 (VAR_CTE -> VAR_STRING push_string_PilaOperandos .)
    LE              reduce using rule 43 (VAR_CTE -> VAR_STRING push_string_PilaOperandos .)
    GE              reduce using rule 43 (VAR_CTE -> VAR_STRING push_string_PilaOperandos .)
    EQ              reduce using rule 43 (VAR_CTE -> VAR_STRING push_string_PilaOperandos .)
    RPAREN          reduce using rule 43 (VAR_CTE -> VAR_STRING push_string_PilaOperandos .)
    SRBRACKET       reduce using rule 43 (VAR_CTE -> VAR_STRING push_string_PilaOperandos .)
    SEMICOLON       reduce using rule 43 (VAR_CTE -> VAR_STRING push_string_PilaOperandos .)
    COMMA           reduce using rule 43 (VAR_CTE -> VAR_STRING push_string_PilaOperandos .)


state 131

    (38) ExpF -> LPAREN agrega_falso . ExpI RPAREN quita_falso
    (18) ExpI -> . ExpK resuelve_operadores_relacionales
    (19) ExpI -> . ExpK Operandos push_operador_PilaOperadores ExpK resuelve_operadores_relacionales
    (27) ExpK -> . ExpT resuelve_termino
    (28) ExpK -> . ExpT resuelve_termino pos_SUMRES push_operador_PilaOperadores ExpK
    (32) ExpT -> . ExpF resuelve_factor
    (33) ExpT -> . ExpF resuelve_factor pos_MULTDIV push_operador_PilaOperadores ExpT
    (37) ExpF -> . VAR_CTE
    (38) ExpF -> . LPAREN agrega_falso ExpI RPAREN quita_falso
    (39) ExpF -> . VAR_ID push_var_PilaOperandos pos_arreglo
    (40) ExpF -> . llama_funcion
    (41) VAR_CTE -> . VAR_INT push_int_PilaOperandos
    (42) VAR_CTE -> . VAR_DECIMAL push_decimal_PilaOperandos
    (43) VAR_CTE -> . VAR_STRING push_string_PilaOperandos
    (44) VAR_CTE -> . VAR_BOOL push_bool_PilaOperandos
    (53) llama_funcion -> . VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion guarda_resultado_funcion
    (45) VAR_BOOL -> . FALSE
    (46) VAR_BOOL -> . TRUE

    LPAREN          shift and go to state 95
    VAR_ID          shift and go to state 89
    VAR_INT         shift and go to state 96
    VAR_DECIMAL     shift and go to state 88
    VAR_STRING      shift and go to state 93
    FALSE           shift and go to state 94
    TRUE            shift and go to state 83

    VAR_CTE                        shift and go to state 84
    ExpF                           shift and go to state 87
    llama_funcion                  shift and go to state 90
    ExpI                           shift and go to state 161
    ExpT                           shift and go to state 92
    ExpK                           shift and go to state 85
    VAR_BOOL                       shift and go to state 86

state 132

    (41) VAR_CTE -> VAR_INT push_int_PilaOperandos .

    MULT            reduce using rule 41 (VAR_CTE -> VAR_INT push_int_PilaOperandos .)
    DIV             reduce using rule 41 (VAR_CTE -> VAR_INT push_int_PilaOperandos .)
    PLUS            reduce using rule 41 (VAR_CTE -> VAR_INT push_int_PilaOperandos .)
    MINUS           reduce using rule 41 (VAR_CTE -> VAR_INT push_int_PilaOperandos .)
    LT              reduce using rule 41 (VAR_CTE -> VAR_INT push_int_PilaOperandos .)
    GT              reduce using rule 41 (VAR_CTE -> VAR_INT push_int_PilaOperandos .)
    NE              reduce using rule 41 (VAR_CTE -> VAR_INT push_int_PilaOperandos .)
    LE              reduce using rule 41 (VAR_CTE -> VAR_INT push_int_PilaOperandos .)
    GE              reduce using rule 41 (VAR_CTE -> VAR_INT push_int_PilaOperandos .)
    EQ              reduce using rule 41 (VAR_CTE -> VAR_INT push_int_PilaOperandos .)
    RPAREN          reduce using rule 41 (VAR_CTE -> VAR_INT push_int_PilaOperandos .)
    SRBRACKET       reduce using rule 41 (VAR_CTE -> VAR_INT push_int_PilaOperandos .)
    SEMICOLON       reduce using rule 41 (VAR_CTE -> VAR_INT push_int_PilaOperandos .)
    COMMA           reduce using rule 41 (VAR_CTE -> VAR_INT push_int_PilaOperandos .)


state 133

    (103) For -> FOR LPAREN VAR_ID . ASSIGN ExpI SEMICOLON ExpI SEMICOLON VAR_ID Exp_ciclo RPAREN LBRACKET reg_brack RBRACKET

    ASSIGN          shift and go to state 162


state 134

    (99) While -> WHILE guarda_numero_cuadruplo LPAREN . ExpI RPAREN crea_GOTOF LBRACKET reg_brack RBRACKET regresa_inicio_while
    (18) ExpI -> . ExpK resuelve_operadores_relacionales
    (19) ExpI -> . ExpK Operandos push_operador_PilaOperadores ExpK resuelve_operadores_relacionales
    (27) ExpK -> . ExpT resuelve_termino
    (28) ExpK -> . ExpT resuelve_termino pos_SUMRES push_operador_PilaOperadores ExpK
    (32) ExpT -> . ExpF resuelve_factor
    (33) ExpT -> . ExpF resuelve_factor pos_MULTDIV push_operador_PilaOperadores ExpT
    (37) ExpF -> . VAR_CTE
    (38) ExpF -> . LPAREN agrega_falso ExpI RPAREN quita_falso
    (39) ExpF -> . VAR_ID push_var_PilaOperandos pos_arreglo
    (40) ExpF -> . llama_funcion
    (41) VAR_CTE -> . VAR_INT push_int_PilaOperandos
    (42) VAR_CTE -> . VAR_DECIMAL push_decimal_PilaOperandos
    (43) VAR_CTE -> . VAR_STRING push_string_PilaOperandos
    (44) VAR_CTE -> . VAR_BOOL push_bool_PilaOperandos
    (53) llama_funcion -> . VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion guarda_resultado_funcion
    (45) VAR_BOOL -> . FALSE
    (46) VAR_BOOL -> . TRUE

    LPAREN          shift and go to state 95
    VAR_ID          shift and go to state 89
    VAR_INT         shift and go to state 96
    VAR_DECIMAL     shift and go to state 88
    VAR_STRING      shift and go to state 93
    FALSE           shift and go to state 94
    TRUE            shift and go to state 83

    VAR_CTE                        shift and go to state 84
    ExpF                           shift and go to state 87
    llama_funcion                  shift and go to state 90
    ExpI                           shift and go to state 163
    ExpT                           shift and go to state 92
    ExpK                           shift and go to state 85
    VAR_BOOL                       shift and go to state 86

state 135

    (64) funciones -> FUNC tipo_funcion VAR_ID LPAREN param RPAREN agrega_funcion LBRACKET Vars reg_brack RBRACKET . fin_func_quad funciones
    (73) fin_func_quad -> .

    FUNC            reduce using rule 73 (fin_func_quad -> .)
    MAIN            reduce using rule 73 (fin_func_quad -> .)

    fin_func_quad                  shift and go to state 164

state 136

    (110) Main -> MAIN agrega_main_funcion LPAREN RPAREN LBRACKET Vars reg_brack RET ZERO SEMICOLON . RBRACKET

    RBRACKET        shift and go to state 165


state 137

    (83) Condicion -> IF LPAREN ExpI RPAREN . crea_GOTOF LBRACKET reg_brack RBRACKET pos_else llena_cuadruplo_if
    (84) crea_GOTOF -> .

    LBRACKET        reduce using rule 84 (crea_GOTOF -> .)

    crea_GOTOF                     shift and go to state 166

state 138

    (14) Asignacion -> VAR_ID push_var_PilaOperandos ASSIGN push_operador_PilaOperadores . ExpI SEMICOLON resuelve_asignacion
    (18) ExpI -> . ExpK resuelve_operadores_relacionales
    (19) ExpI -> . ExpK Operandos push_operador_PilaOperadores ExpK resuelve_operadores_relacionales
    (27) ExpK -> . ExpT resuelve_termino
    (28) ExpK -> . ExpT resuelve_termino pos_SUMRES push_operador_PilaOperadores ExpK
    (32) ExpT -> . ExpF resuelve_factor
    (33) ExpT -> . ExpF resuelve_factor pos_MULTDIV push_operador_PilaOperadores ExpT
    (37) ExpF -> . VAR_CTE
    (38) ExpF -> . LPAREN agrega_falso ExpI RPAREN quita_falso
    (39) ExpF -> . VAR_ID push_var_PilaOperandos pos_arreglo
    (40) ExpF -> . llama_funcion
    (41) VAR_CTE -> . VAR_INT push_int_PilaOperandos
    (42) VAR_CTE -> . VAR_DECIMAL push_decimal_PilaOperandos
    (43) VAR_CTE -> . VAR_STRING push_string_PilaOperandos
    (44) VAR_CTE -> . VAR_BOOL push_bool_PilaOperandos
    (53) llama_funcion -> . VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion guarda_resultado_funcion
    (45) VAR_BOOL -> . FALSE
    (46) VAR_BOOL -> . TRUE

    LPAREN          shift and go to state 95
    VAR_ID          shift and go to state 89
    VAR_INT         shift and go to state 96
    VAR_DECIMAL     shift and go to state 88
    VAR_STRING      shift and go to state 93
    FALSE           shift and go to state 94
    TRUE            shift and go to state 83

    VAR_CTE                        shift and go to state 84
    ExpF                           shift and go to state 87
    llama_funcion                  shift and go to state 90
    ExpI                           shift and go to state 167
    ExpT                           shift and go to state 92
    ExpK                           shift and go to state 85
    VAR_BOOL                       shift and go to state 86

state 139

    (94) Llamada_Func -> VAR_ID LPAREN agrega_falso checa_funcion_si_existe . argumentos RPAREN quita_falso resuelve_llamada_funcion SEMICOLON checa_void
    (55) argumentos -> . ExpI resuelve_argumentos mas_argumentos
    (56) argumentos -> .
    (18) ExpI -> . ExpK resuelve_operadores_relacionales
    (19) ExpI -> . ExpK Operandos push_operador_PilaOperadores ExpK resuelve_operadores_relacionales
    (27) ExpK -> . ExpT resuelve_termino
    (28) ExpK -> . ExpT resuelve_termino pos_SUMRES push_operador_PilaOperadores ExpK
    (32) ExpT -> . ExpF resuelve_factor
    (33) ExpT -> . ExpF resuelve_factor pos_MULTDIV push_operador_PilaOperadores ExpT
    (37) ExpF -> . VAR_CTE
    (38) ExpF -> . LPAREN agrega_falso ExpI RPAREN quita_falso
    (39) ExpF -> . VAR_ID push_var_PilaOperandos pos_arreglo
    (40) ExpF -> . llama_funcion
    (41) VAR_CTE -> . VAR_INT push_int_PilaOperandos
    (42) VAR_CTE -> . VAR_DECIMAL push_decimal_PilaOperandos
    (43) VAR_CTE -> . VAR_STRING push_string_PilaOperandos
    (44) VAR_CTE -> . VAR_BOOL push_bool_PilaOperandos
    (53) llama_funcion -> . VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion guarda_resultado_funcion
    (45) VAR_BOOL -> . FALSE
    (46) VAR_BOOL -> . TRUE

    RPAREN          reduce using rule 56 (argumentos -> .)
    LPAREN          shift and go to state 95
    VAR_ID          shift and go to state 89
    VAR_INT         shift and go to state 96
    VAR_DECIMAL     shift and go to state 88
    VAR_STRING      shift and go to state 93
    FALSE           shift and go to state 94
    TRUE            shift and go to state 83

    VAR_CTE                        shift and go to state 84
    argumentos                     shift and go to state 168
    ExpF                           shift and go to state 87
    llama_funcion                  shift and go to state 90
    ExpI                           shift and go to state 169
    ExpT                           shift and go to state 92
    ExpK                           shift and go to state 85
    VAR_BOOL                       shift and go to state 86

state 140

    (92) Print -> PRINT LPAREN ExpI RPAREN . SEMICOLON crea_print

    SEMICOLON       shift and go to state 170


state 141

    (91) Print -> PRINT LPAREN VAR_STRING RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 171


state 142

    (125) Circle -> TUR POINT CIRCLE LPAREN . ExpI RPAREN SEMICOLON crea_cuadruplo_circle
    (18) ExpI -> . ExpK resuelve_operadores_relacionales
    (19) ExpI -> . ExpK Operandos push_operador_PilaOperadores ExpK resuelve_operadores_relacionales
    (27) ExpK -> . ExpT resuelve_termino
    (28) ExpK -> . ExpT resuelve_termino pos_SUMRES push_operador_PilaOperadores ExpK
    (32) ExpT -> . ExpF resuelve_factor
    (33) ExpT -> . ExpF resuelve_factor pos_MULTDIV push_operador_PilaOperadores ExpT
    (37) ExpF -> . VAR_CTE
    (38) ExpF -> . LPAREN agrega_falso ExpI RPAREN quita_falso
    (39) ExpF -> . VAR_ID push_var_PilaOperandos pos_arreglo
    (40) ExpF -> . llama_funcion
    (41) VAR_CTE -> . VAR_INT push_int_PilaOperandos
    (42) VAR_CTE -> . VAR_DECIMAL push_decimal_PilaOperandos
    (43) VAR_CTE -> . VAR_STRING push_string_PilaOperandos
    (44) VAR_CTE -> . VAR_BOOL push_bool_PilaOperandos
    (53) llama_funcion -> . VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion guarda_resultado_funcion
    (45) VAR_BOOL -> . FALSE
    (46) VAR_BOOL -> . TRUE

    LPAREN          shift and go to state 95
    VAR_ID          shift and go to state 89
    VAR_INT         shift and go to state 96
    VAR_DECIMAL     shift and go to state 88
    VAR_STRING      shift and go to state 93
    FALSE           shift and go to state 94
    TRUE            shift and go to state 83

    VAR_CTE                        shift and go to state 84
    ExpF                           shift and go to state 87
    llama_funcion                  shift and go to state 90
    ExpI                           shift and go to state 172
    ExpT                           shift and go to state 92
    ExpK                           shift and go to state 85
    VAR_BOOL                       shift and go to state 86

state 143

    (127) Position -> TUR POINT POS LPAREN . ExpI COMMA ExpI RPAREN SEMICOLON crea_cuadruplo_pos
    (18) ExpI -> . ExpK resuelve_operadores_relacionales
    (19) ExpI -> . ExpK Operandos push_operador_PilaOperadores ExpK resuelve_operadores_relacionales
    (27) ExpK -> . ExpT resuelve_termino
    (28) ExpK -> . ExpT resuelve_termino pos_SUMRES push_operador_PilaOperadores ExpK
    (32) ExpT -> . ExpF resuelve_factor
    (33) ExpT -> . ExpF resuelve_factor pos_MULTDIV push_operador_PilaOperadores ExpT
    (37) ExpF -> . VAR_CTE
    (38) ExpF -> . LPAREN agrega_falso ExpI RPAREN quita_falso
    (39) ExpF -> . VAR_ID push_var_PilaOperandos pos_arreglo
    (40) ExpF -> . llama_funcion
    (41) VAR_CTE -> . VAR_INT push_int_PilaOperandos
    (42) VAR_CTE -> . VAR_DECIMAL push_decimal_PilaOperandos
    (43) VAR_CTE -> . VAR_STRING push_string_PilaOperandos
    (44) VAR_CTE -> . VAR_BOOL push_bool_PilaOperandos
    (53) llama_funcion -> . VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion guarda_resultado_funcion
    (45) VAR_BOOL -> . FALSE
    (46) VAR_BOOL -> . TRUE

    LPAREN          shift and go to state 95
    VAR_ID          shift and go to state 89
    VAR_INT         shift and go to state 96
    VAR_DECIMAL     shift and go to state 88
    VAR_STRING      shift and go to state 93
    FALSE           shift and go to state 94
    TRUE            shift and go to state 83

    VAR_CTE                        shift and go to state 84
    ExpF                           shift and go to state 87
    llama_funcion                  shift and go to state 90
    ExpI                           shift and go to state 173
    ExpT                           shift and go to state 92
    ExpK                           shift and go to state 85
    VAR_BOOL                       shift and go to state 86

state 144

    (131) TerminaTurtle -> TUR POINT FINISH LPAREN . RPAREN SEMICOLON crea_cuadruplo_termina

    RPAREN          shift and go to state 174


state 145

    (123) Left -> TUR POINT LEFT LPAREN . ExpI RPAREN SEMICOLON crea_cuadruplo_left
    (18) ExpI -> . ExpK resuelve_operadores_relacionales
    (19) ExpI -> . ExpK Operandos push_operador_PilaOperadores ExpK resuelve_operadores_relacionales
    (27) ExpK -> . ExpT resuelve_termino
    (28) ExpK -> . ExpT resuelve_termino pos_SUMRES push_operador_PilaOperadores ExpK
    (32) ExpT -> . ExpF resuelve_factor
    (33) ExpT -> . ExpF resuelve_factor pos_MULTDIV push_operador_PilaOperadores ExpT
    (37) ExpF -> . VAR_CTE
    (38) ExpF -> . LPAREN agrega_falso ExpI RPAREN quita_falso
    (39) ExpF -> . VAR_ID push_var_PilaOperandos pos_arreglo
    (40) ExpF -> . llama_funcion
    (41) VAR_CTE -> . VAR_INT push_int_PilaOperandos
    (42) VAR_CTE -> . VAR_DECIMAL push_decimal_PilaOperandos
    (43) VAR_CTE -> . VAR_STRING push_string_PilaOperandos
    (44) VAR_CTE -> . VAR_BOOL push_bool_PilaOperandos
    (53) llama_funcion -> . VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion guarda_resultado_funcion
    (45) VAR_BOOL -> . FALSE
    (46) VAR_BOOL -> . TRUE

    LPAREN          shift and go to state 95
    VAR_ID          shift and go to state 89
    VAR_INT         shift and go to state 96
    VAR_DECIMAL     shift and go to state 88
    VAR_STRING      shift and go to state 93
    FALSE           shift and go to state 94
    TRUE            shift and go to state 83

    VAR_CTE                        shift and go to state 84
    ExpF                           shift and go to state 87
    llama_funcion                  shift and go to state 90
    ExpI                           shift and go to state 175
    ExpT                           shift and go to state 92
    ExpK                           shift and go to state 85
    VAR_BOOL                       shift and go to state 86

state 146

    (129) IniciaTurtle -> TUR POINT TURTLE LPAREN . RPAREN SEMICOLON crea_cuadruplo_inicia

    RPAREN          shift and go to state 176


state 147

    (121) Right -> TUR POINT RIGHT LPAREN . ExpI RPAREN SEMICOLON crea_quadruplo_right
    (18) ExpI -> . ExpK resuelve_operadores_relacionales
    (19) ExpI -> . ExpK Operandos push_operador_PilaOperadores ExpK resuelve_operadores_relacionales
    (27) ExpK -> . ExpT resuelve_termino
    (28) ExpK -> . ExpT resuelve_termino pos_SUMRES push_operador_PilaOperadores ExpK
    (32) ExpT -> . ExpF resuelve_factor
    (33) ExpT -> . ExpF resuelve_factor pos_MULTDIV push_operador_PilaOperadores ExpT
    (37) ExpF -> . VAR_CTE
    (38) ExpF -> . LPAREN agrega_falso ExpI RPAREN quita_falso
    (39) ExpF -> . VAR_ID push_var_PilaOperandos pos_arreglo
    (40) ExpF -> . llama_funcion
    (41) VAR_CTE -> . VAR_INT push_int_PilaOperandos
    (42) VAR_CTE -> . VAR_DECIMAL push_decimal_PilaOperandos
    (43) VAR_CTE -> . VAR_STRING push_string_PilaOperandos
    (44) VAR_CTE -> . VAR_BOOL push_bool_PilaOperandos
    (53) llama_funcion -> . VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion guarda_resultado_funcion
    (45) VAR_BOOL -> . FALSE
    (46) VAR_BOOL -> . TRUE

    LPAREN          shift and go to state 95
    VAR_ID          shift and go to state 89
    VAR_INT         shift and go to state 96
    VAR_DECIMAL     shift and go to state 88
    VAR_STRING      shift and go to state 93
    FALSE           shift and go to state 94
    TRUE            shift and go to state 83

    VAR_CTE                        shift and go to state 84
    ExpF                           shift and go to state 87
    llama_funcion                  shift and go to state 90
    ExpI                           shift and go to state 177
    ExpT                           shift and go to state 92
    ExpK                           shift and go to state 85
    VAR_BOOL                       shift and go to state 86

state 148

    (119) Forward -> TUR POINT FORWARD LPAREN . ExpI RPAREN SEMICOLON crea_cuadruplo_forward
    (18) ExpI -> . ExpK resuelve_operadores_relacionales
    (19) ExpI -> . ExpK Operandos push_operador_PilaOperadores ExpK resuelve_operadores_relacionales
    (27) ExpK -> . ExpT resuelve_termino
    (28) ExpK -> . ExpT resuelve_termino pos_SUMRES push_operador_PilaOperadores ExpK
    (32) ExpT -> . ExpF resuelve_factor
    (33) ExpT -> . ExpF resuelve_factor pos_MULTDIV push_operador_PilaOperadores ExpT
    (37) ExpF -> . VAR_CTE
    (38) ExpF -> . LPAREN agrega_falso ExpI RPAREN quita_falso
    (39) ExpF -> . VAR_ID push_var_PilaOperandos pos_arreglo
    (40) ExpF -> . llama_funcion
    (41) VAR_CTE -> . VAR_INT push_int_PilaOperandos
    (42) VAR_CTE -> . VAR_DECIMAL push_decimal_PilaOperandos
    (43) VAR_CTE -> . VAR_STRING push_string_PilaOperandos
    (44) VAR_CTE -> . VAR_BOOL push_bool_PilaOperandos
    (53) llama_funcion -> . VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion guarda_resultado_funcion
    (45) VAR_BOOL -> . FALSE
    (46) VAR_BOOL -> . TRUE

    LPAREN          shift and go to state 95
    VAR_ID          shift and go to state 89
    VAR_INT         shift and go to state 96
    VAR_DECIMAL     shift and go to state 88
    VAR_STRING      shift and go to state 93
    FALSE           shift and go to state 94
    TRUE            shift and go to state 83

    VAR_CTE                        shift and go to state 84
    ExpF                           shift and go to state 87
    llama_funcion                  shift and go to state 90
    ExpI                           shift and go to state 178
    ExpT                           shift and go to state 92
    ExpK                           shift and go to state 85
    VAR_BOOL                       shift and go to state 86

state 149

    (102) DoWhile -> DO LBRACKET reg_brack RBRACKET . WHILE LPAREN ExpI RPAREN SEMICOLON

    WHILE           shift and go to state 179


state 150

    (19) ExpI -> ExpK Operandos push_operador_PilaOperadores . ExpK resuelve_operadores_relacionales
    (27) ExpK -> . ExpT resuelve_termino
    (28) ExpK -> . ExpT resuelve_termino pos_SUMRES push_operador_PilaOperadores ExpK
    (32) ExpT -> . ExpF resuelve_factor
    (33) ExpT -> . ExpF resuelve_factor pos_MULTDIV push_operador_PilaOperadores ExpT
    (37) ExpF -> . VAR_CTE
    (38) ExpF -> . LPAREN agrega_falso ExpI RPAREN quita_falso
    (39) ExpF -> . VAR_ID push_var_PilaOperandos pos_arreglo
    (40) ExpF -> . llama_funcion
    (41) VAR_CTE -> . VAR_INT push_int_PilaOperandos
    (42) VAR_CTE -> . VAR_DECIMAL push_decimal_PilaOperandos
    (43) VAR_CTE -> . VAR_STRING push_string_PilaOperandos
    (44) VAR_CTE -> . VAR_BOOL push_bool_PilaOperandos
    (53) llama_funcion -> . VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion guarda_resultado_funcion
    (45) VAR_BOOL -> . FALSE
    (46) VAR_BOOL -> . TRUE

    LPAREN          shift and go to state 95
    VAR_ID          shift and go to state 89
    VAR_INT         shift and go to state 96
    VAR_DECIMAL     shift and go to state 88
    VAR_STRING      shift and go to state 93
    FALSE           shift and go to state 94
    TRUE            shift and go to state 83

    VAR_CTE                        shift and go to state 84
    ExpF                           shift and go to state 87
    llama_funcion                  shift and go to state 90
    ExpT                           shift and go to state 92
    ExpK                           shift and go to state 180
    VAR_BOOL                       shift and go to state 86

state 151

    (33) ExpT -> ExpF resuelve_factor pos_MULTDIV . push_operador_PilaOperadores ExpT
    (16) push_operador_PilaOperadores -> .

    LPAREN          reduce using rule 16 (push_operador_PilaOperadores -> .)
    VAR_ID          reduce using rule 16 (push_operador_PilaOperadores -> .)
    VAR_INT         reduce using rule 16 (push_operador_PilaOperadores -> .)
    VAR_DECIMAL     reduce using rule 16 (push_operador_PilaOperadores -> .)
    VAR_STRING      reduce using rule 16 (push_operador_PilaOperadores -> .)
    FALSE           reduce using rule 16 (push_operador_PilaOperadores -> .)
    TRUE            reduce using rule 16 (push_operador_PilaOperadores -> .)

    push_operador_PilaOperadores   shift and go to state 181

state 152

    (36) pos_MULTDIV -> DIV .

    LPAREN          reduce using rule 36 (pos_MULTDIV -> DIV .)
    VAR_ID          reduce using rule 36 (pos_MULTDIV -> DIV .)
    VAR_INT         reduce using rule 36 (pos_MULTDIV -> DIV .)
    VAR_DECIMAL     reduce using rule 36 (pos_MULTDIV -> DIV .)
    VAR_STRING      reduce using rule 36 (pos_MULTDIV -> DIV .)
    FALSE           reduce using rule 36 (pos_MULTDIV -> DIV .)
    TRUE            reduce using rule 36 (pos_MULTDIV -> DIV .)


state 153

    (35) pos_MULTDIV -> MULT .

    LPAREN          reduce using rule 35 (pos_MULTDIV -> MULT .)
    VAR_ID          reduce using rule 35 (pos_MULTDIV -> MULT .)
    VAR_INT         reduce using rule 35 (pos_MULTDIV -> MULT .)
    VAR_DECIMAL     reduce using rule 35 (pos_MULTDIV -> MULT .)
    VAR_STRING      reduce using rule 35 (pos_MULTDIV -> MULT .)
    FALSE           reduce using rule 35 (pos_MULTDIV -> MULT .)
    TRUE            reduce using rule 35 (pos_MULTDIV -> MULT .)


state 154

    (53) llama_funcion -> VAR_ID LPAREN agrega_falso . checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion guarda_resultado_funcion
    (54) checa_funcion_si_existe -> .

    LPAREN          reduce using rule 54 (checa_funcion_si_existe -> .)
    VAR_ID          reduce using rule 54 (checa_funcion_si_existe -> .)
    VAR_INT         reduce using rule 54 (checa_funcion_si_existe -> .)
    VAR_DECIMAL     reduce using rule 54 (checa_funcion_si_existe -> .)
    VAR_STRING      reduce using rule 54 (checa_funcion_si_existe -> .)
    FALSE           reduce using rule 54 (checa_funcion_si_existe -> .)
    TRUE            reduce using rule 54 (checa_funcion_si_existe -> .)
    RPAREN          reduce using rule 54 (checa_funcion_si_existe -> .)

    checa_funcion_si_existe        shift and go to state 182

state 155

    (62) pos_arreglo -> SLBRACKET . ExpI SRBRACKET
    (18) ExpI -> . ExpK resuelve_operadores_relacionales
    (19) ExpI -> . ExpK Operandos push_operador_PilaOperadores ExpK resuelve_operadores_relacionales
    (27) ExpK -> . ExpT resuelve_termino
    (28) ExpK -> . ExpT resuelve_termino pos_SUMRES push_operador_PilaOperadores ExpK
    (32) ExpT -> . ExpF resuelve_factor
    (33) ExpT -> . ExpF resuelve_factor pos_MULTDIV push_operador_PilaOperadores ExpT
    (37) ExpF -> . VAR_CTE
    (38) ExpF -> . LPAREN agrega_falso ExpI RPAREN quita_falso
    (39) ExpF -> . VAR_ID push_var_PilaOperandos pos_arreglo
    (40) ExpF -> . llama_funcion
    (41) VAR_CTE -> . VAR_INT push_int_PilaOperandos
    (42) VAR_CTE -> . VAR_DECIMAL push_decimal_PilaOperandos
    (43) VAR_CTE -> . VAR_STRING push_string_PilaOperandos
    (44) VAR_CTE -> . VAR_BOOL push_bool_PilaOperandos
    (53) llama_funcion -> . VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion guarda_resultado_funcion
    (45) VAR_BOOL -> . FALSE
    (46) VAR_BOOL -> . TRUE

    LPAREN          shift and go to state 95
    VAR_ID          shift and go to state 89
    VAR_INT         shift and go to state 96
    VAR_DECIMAL     shift and go to state 88
    VAR_STRING      shift and go to state 93
    FALSE           shift and go to state 94
    TRUE            shift and go to state 83

    VAR_CTE                        shift and go to state 84
    ExpF                           shift and go to state 87
    llama_funcion                  shift and go to state 90
    ExpI                           shift and go to state 183
    ExpT                           shift and go to state 92
    ExpK                           shift and go to state 85
    VAR_BOOL                       shift and go to state 86

state 156

    (39) ExpF -> VAR_ID push_var_PilaOperandos pos_arreglo .

    MULT            reduce using rule 39 (ExpF -> VAR_ID push_var_PilaOperandos pos_arreglo .)
    DIV             reduce using rule 39 (ExpF -> VAR_ID push_var_PilaOperandos pos_arreglo .)
    PLUS            reduce using rule 39 (ExpF -> VAR_ID push_var_PilaOperandos pos_arreglo .)
    MINUS           reduce using rule 39 (ExpF -> VAR_ID push_var_PilaOperandos pos_arreglo .)
    LT              reduce using rule 39 (ExpF -> VAR_ID push_var_PilaOperandos pos_arreglo .)
    GT              reduce using rule 39 (ExpF -> VAR_ID push_var_PilaOperandos pos_arreglo .)
    NE              reduce using rule 39 (ExpF -> VAR_ID push_var_PilaOperandos pos_arreglo .)
    LE              reduce using rule 39 (ExpF -> VAR_ID push_var_PilaOperandos pos_arreglo .)
    GE              reduce using rule 39 (ExpF -> VAR_ID push_var_PilaOperandos pos_arreglo .)
    EQ              reduce using rule 39 (ExpF -> VAR_ID push_var_PilaOperandos pos_arreglo .)
    SRBRACKET       reduce using rule 39 (ExpF -> VAR_ID push_var_PilaOperandos pos_arreglo .)
    RPAREN          reduce using rule 39 (ExpF -> VAR_ID push_var_PilaOperandos pos_arreglo .)
    COMMA           reduce using rule 39 (ExpF -> VAR_ID push_var_PilaOperandos pos_arreglo .)
    SEMICOLON       reduce using rule 39 (ExpF -> VAR_ID push_var_PilaOperandos pos_arreglo .)


state 157

    (89) Return -> RETURN ExpI SEMICOLON resuelve_return .

    IF              reduce using rule 89 (Return -> RETURN ExpI SEMICOLON resuelve_return .)
    RETURN          reduce using rule 89 (Return -> RETURN ExpI SEMICOLON resuelve_return .)
    VAR_ID          reduce using rule 89 (Return -> RETURN ExpI SEMICOLON resuelve_return .)
    PRINT           reduce using rule 89 (Return -> RETURN ExpI SEMICOLON resuelve_return .)
    FOR             reduce using rule 89 (Return -> RETURN ExpI SEMICOLON resuelve_return .)
    WHILE           reduce using rule 89 (Return -> RETURN ExpI SEMICOLON resuelve_return .)
    DO              reduce using rule 89 (Return -> RETURN ExpI SEMICOLON resuelve_return .)
    TUR             reduce using rule 89 (Return -> RETURN ExpI SEMICOLON resuelve_return .)
    RBRACKET        reduce using rule 89 (Return -> RETURN ExpI SEMICOLON resuelve_return .)
    RET             reduce using rule 89 (Return -> RETURN ExpI SEMICOLON resuelve_return .)


state 158

    (30) pos_SUMRES -> PLUS .

    LPAREN          reduce using rule 30 (pos_SUMRES -> PLUS .)
    VAR_ID          reduce using rule 30 (pos_SUMRES -> PLUS .)
    VAR_INT         reduce using rule 30 (pos_SUMRES -> PLUS .)
    VAR_DECIMAL     reduce using rule 30 (pos_SUMRES -> PLUS .)
    VAR_STRING      reduce using rule 30 (pos_SUMRES -> PLUS .)
    FALSE           reduce using rule 30 (pos_SUMRES -> PLUS .)
    TRUE            reduce using rule 30 (pos_SUMRES -> PLUS .)


state 159

    (28) ExpK -> ExpT resuelve_termino pos_SUMRES . push_operador_PilaOperadores ExpK
    (16) push_operador_PilaOperadores -> .

    LPAREN          reduce using rule 16 (push_operador_PilaOperadores -> .)
    VAR_ID          reduce using rule 16 (push_operador_PilaOperadores -> .)
    VAR_INT         reduce using rule 16 (push_operador_PilaOperadores -> .)
    VAR_DECIMAL     reduce using rule 16 (push_operador_PilaOperadores -> .)
    VAR_STRING      reduce using rule 16 (push_operador_PilaOperadores -> .)
    FALSE           reduce using rule 16 (push_operador_PilaOperadores -> .)
    TRUE            reduce using rule 16 (push_operador_PilaOperadores -> .)

    push_operador_PilaOperadores   shift and go to state 184

state 160

    (31) pos_SUMRES -> MINUS .

    LPAREN          reduce using rule 31 (pos_SUMRES -> MINUS .)
    VAR_ID          reduce using rule 31 (pos_SUMRES -> MINUS .)
    VAR_INT         reduce using rule 31 (pos_SUMRES -> MINUS .)
    VAR_DECIMAL     reduce using rule 31 (pos_SUMRES -> MINUS .)
    VAR_STRING      reduce using rule 31 (pos_SUMRES -> MINUS .)
    FALSE           reduce using rule 31 (pos_SUMRES -> MINUS .)
    TRUE            reduce using rule 31 (pos_SUMRES -> MINUS .)


state 161

    (38) ExpF -> LPAREN agrega_falso ExpI . RPAREN quita_falso

    RPAREN          shift and go to state 185


state 162

    (103) For -> FOR LPAREN VAR_ID ASSIGN . ExpI SEMICOLON ExpI SEMICOLON VAR_ID Exp_ciclo RPAREN LBRACKET reg_brack RBRACKET
    (18) ExpI -> . ExpK resuelve_operadores_relacionales
    (19) ExpI -> . ExpK Operandos push_operador_PilaOperadores ExpK resuelve_operadores_relacionales
    (27) ExpK -> . ExpT resuelve_termino
    (28) ExpK -> . ExpT resuelve_termino pos_SUMRES push_operador_PilaOperadores ExpK
    (32) ExpT -> . ExpF resuelve_factor
    (33) ExpT -> . ExpF resuelve_factor pos_MULTDIV push_operador_PilaOperadores ExpT
    (37) ExpF -> . VAR_CTE
    (38) ExpF -> . LPAREN agrega_falso ExpI RPAREN quita_falso
    (39) ExpF -> . VAR_ID push_var_PilaOperandos pos_arreglo
    (40) ExpF -> . llama_funcion
    (41) VAR_CTE -> . VAR_INT push_int_PilaOperandos
    (42) VAR_CTE -> . VAR_DECIMAL push_decimal_PilaOperandos
    (43) VAR_CTE -> . VAR_STRING push_string_PilaOperandos
    (44) VAR_CTE -> . VAR_BOOL push_bool_PilaOperandos
    (53) llama_funcion -> . VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion guarda_resultado_funcion
    (45) VAR_BOOL -> . FALSE
    (46) VAR_BOOL -> . TRUE

    LPAREN          shift and go to state 95
    VAR_ID          shift and go to state 89
    VAR_INT         shift and go to state 96
    VAR_DECIMAL     shift and go to state 88
    VAR_STRING      shift and go to state 93
    FALSE           shift and go to state 94
    TRUE            shift and go to state 83

    VAR_CTE                        shift and go to state 84
    ExpF                           shift and go to state 87
    llama_funcion                  shift and go to state 90
    ExpI                           shift and go to state 186
    ExpT                           shift and go to state 92
    ExpK                           shift and go to state 85
    VAR_BOOL                       shift and go to state 86

state 163

    (99) While -> WHILE guarda_numero_cuadruplo LPAREN ExpI . RPAREN crea_GOTOF LBRACKET reg_brack RBRACKET regresa_inicio_while

    RPAREN          shift and go to state 187


state 164

    (64) funciones -> FUNC tipo_funcion VAR_ID LPAREN param RPAREN agrega_funcion LBRACKET Vars reg_brack RBRACKET fin_func_quad . funciones
    (64) funciones -> . FUNC tipo_funcion VAR_ID LPAREN param RPAREN agrega_funcion LBRACKET Vars reg_brack RBRACKET fin_func_quad funciones
    (65) funciones -> .

    FUNC            shift and go to state 15
    MAIN            reduce using rule 65 (funciones -> .)

    funciones                      shift and go to state 188

state 165

    (110) Main -> MAIN agrega_main_funcion LPAREN RPAREN LBRACKET Vars reg_brack RET ZERO SEMICOLON RBRACKET .

    $end            reduce using rule 110 (Main -> MAIN agrega_main_funcion LPAREN RPAREN LBRACKET Vars reg_brack RET ZERO SEMICOLON RBRACKET .)


state 166

    (83) Condicion -> IF LPAREN ExpI RPAREN crea_GOTOF . LBRACKET reg_brack RBRACKET pos_else llena_cuadruplo_if

    LBRACKET        shift and go to state 189


state 167

    (14) Asignacion -> VAR_ID push_var_PilaOperandos ASSIGN push_operador_PilaOperadores ExpI . SEMICOLON resuelve_asignacion

    SEMICOLON       shift and go to state 190


state 168

    (94) Llamada_Func -> VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos . RPAREN quita_falso resuelve_llamada_funcion SEMICOLON checa_void

    RPAREN          shift and go to state 191


state 169

    (55) argumentos -> ExpI . resuelve_argumentos mas_argumentos
    (59) resuelve_argumentos -> .

    COMMA           reduce using rule 59 (resuelve_argumentos -> .)
    RPAREN          reduce using rule 59 (resuelve_argumentos -> .)

    resuelve_argumentos            shift and go to state 192

state 170

    (92) Print -> PRINT LPAREN ExpI RPAREN SEMICOLON . crea_print
    (93) crea_print -> .

    IF              reduce using rule 93 (crea_print -> .)
    RETURN          reduce using rule 93 (crea_print -> .)
    VAR_ID          reduce using rule 93 (crea_print -> .)
    PRINT           reduce using rule 93 (crea_print -> .)
    FOR             reduce using rule 93 (crea_print -> .)
    WHILE           reduce using rule 93 (crea_print -> .)
    DO              reduce using rule 93 (crea_print -> .)
    TUR             reduce using rule 93 (crea_print -> .)
    RET             reduce using rule 93 (crea_print -> .)
    RBRACKET        reduce using rule 93 (crea_print -> .)

    crea_print                     shift and go to state 193

state 171

    (91) Print -> PRINT LPAREN VAR_STRING RPAREN SEMICOLON .

    IF              reduce using rule 91 (Print -> PRINT LPAREN VAR_STRING RPAREN SEMICOLON .)
    RETURN          reduce using rule 91 (Print -> PRINT LPAREN VAR_STRING RPAREN SEMICOLON .)
    VAR_ID          reduce using rule 91 (Print -> PRINT LPAREN VAR_STRING RPAREN SEMICOLON .)
    PRINT           reduce using rule 91 (Print -> PRINT LPAREN VAR_STRING RPAREN SEMICOLON .)
    FOR             reduce using rule 91 (Print -> PRINT LPAREN VAR_STRING RPAREN SEMICOLON .)
    WHILE           reduce using rule 91 (Print -> PRINT LPAREN VAR_STRING RPAREN SEMICOLON .)
    DO              reduce using rule 91 (Print -> PRINT LPAREN VAR_STRING RPAREN SEMICOLON .)
    TUR             reduce using rule 91 (Print -> PRINT LPAREN VAR_STRING RPAREN SEMICOLON .)
    RET             reduce using rule 91 (Print -> PRINT LPAREN VAR_STRING RPAREN SEMICOLON .)
    RBRACKET        reduce using rule 91 (Print -> PRINT LPAREN VAR_STRING RPAREN SEMICOLON .)


state 172

    (125) Circle -> TUR POINT CIRCLE LPAREN ExpI . RPAREN SEMICOLON crea_cuadruplo_circle

    RPAREN          shift and go to state 194


state 173

    (127) Position -> TUR POINT POS LPAREN ExpI . COMMA ExpI RPAREN SEMICOLON crea_cuadruplo_pos

    COMMA           shift and go to state 195


state 174

    (131) TerminaTurtle -> TUR POINT FINISH LPAREN RPAREN . SEMICOLON crea_cuadruplo_termina

    SEMICOLON       shift and go to state 196


state 175

    (123) Left -> TUR POINT LEFT LPAREN ExpI . RPAREN SEMICOLON crea_cuadruplo_left

    RPAREN          shift and go to state 197


state 176

    (129) IniciaTurtle -> TUR POINT TURTLE LPAREN RPAREN . SEMICOLON crea_cuadruplo_inicia

    SEMICOLON       shift and go to state 198


state 177

    (121) Right -> TUR POINT RIGHT LPAREN ExpI . RPAREN SEMICOLON crea_quadruplo_right

    RPAREN          shift and go to state 199


state 178

    (119) Forward -> TUR POINT FORWARD LPAREN ExpI . RPAREN SEMICOLON crea_cuadruplo_forward

    RPAREN          shift and go to state 200


state 179

    (102) DoWhile -> DO LBRACKET reg_brack RBRACKET WHILE . LPAREN ExpI RPAREN SEMICOLON

    LPAREN          shift and go to state 201


state 180

    (19) ExpI -> ExpK Operandos push_operador_PilaOperadores ExpK . resuelve_operadores_relacionales
    (26) resuelve_operadores_relacionales -> .

    SEMICOLON       reduce using rule 26 (resuelve_operadores_relacionales -> .)
    RPAREN          reduce using rule 26 (resuelve_operadores_relacionales -> .)
    COMMA           reduce using rule 26 (resuelve_operadores_relacionales -> .)
    SRBRACKET       reduce using rule 26 (resuelve_operadores_relacionales -> .)

    resuelve_operadores_relacionales shift and go to state 202

state 181

    (33) ExpT -> ExpF resuelve_factor pos_MULTDIV push_operador_PilaOperadores . ExpT
    (32) ExpT -> . ExpF resuelve_factor
    (33) ExpT -> . ExpF resuelve_factor pos_MULTDIV push_operador_PilaOperadores ExpT
    (37) ExpF -> . VAR_CTE
    (38) ExpF -> . LPAREN agrega_falso ExpI RPAREN quita_falso
    (39) ExpF -> . VAR_ID push_var_PilaOperandos pos_arreglo
    (40) ExpF -> . llama_funcion
    (41) VAR_CTE -> . VAR_INT push_int_PilaOperandos
    (42) VAR_CTE -> . VAR_DECIMAL push_decimal_PilaOperandos
    (43) VAR_CTE -> . VAR_STRING push_string_PilaOperandos
    (44) VAR_CTE -> . VAR_BOOL push_bool_PilaOperandos
    (53) llama_funcion -> . VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion guarda_resultado_funcion
    (45) VAR_BOOL -> . FALSE
    (46) VAR_BOOL -> . TRUE

    LPAREN          shift and go to state 95
    VAR_ID          shift and go to state 89
    VAR_INT         shift and go to state 96
    VAR_DECIMAL     shift and go to state 88
    VAR_STRING      shift and go to state 93
    FALSE           shift and go to state 94
    TRUE            shift and go to state 83

    llama_funcion                  shift and go to state 90
    ExpT                           shift and go to state 203
    VAR_CTE                        shift and go to state 84
    VAR_BOOL                       shift and go to state 86
    ExpF                           shift and go to state 87

state 182

    (53) llama_funcion -> VAR_ID LPAREN agrega_falso checa_funcion_si_existe . argumentos RPAREN quita_falso resuelve_llamada_funcion guarda_resultado_funcion
    (55) argumentos -> . ExpI resuelve_argumentos mas_argumentos
    (56) argumentos -> .
    (18) ExpI -> . ExpK resuelve_operadores_relacionales
    (19) ExpI -> . ExpK Operandos push_operador_PilaOperadores ExpK resuelve_operadores_relacionales
    (27) ExpK -> . ExpT resuelve_termino
    (28) ExpK -> . ExpT resuelve_termino pos_SUMRES push_operador_PilaOperadores ExpK
    (32) ExpT -> . ExpF resuelve_factor
    (33) ExpT -> . ExpF resuelve_factor pos_MULTDIV push_operador_PilaOperadores ExpT
    (37) ExpF -> . VAR_CTE
    (38) ExpF -> . LPAREN agrega_falso ExpI RPAREN quita_falso
    (39) ExpF -> . VAR_ID push_var_PilaOperandos pos_arreglo
    (40) ExpF -> . llama_funcion
    (41) VAR_CTE -> . VAR_INT push_int_PilaOperandos
    (42) VAR_CTE -> . VAR_DECIMAL push_decimal_PilaOperandos
    (43) VAR_CTE -> . VAR_STRING push_string_PilaOperandos
    (44) VAR_CTE -> . VAR_BOOL push_bool_PilaOperandos
    (53) llama_funcion -> . VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion guarda_resultado_funcion
    (45) VAR_BOOL -> . FALSE
    (46) VAR_BOOL -> . TRUE

    RPAREN          reduce using rule 56 (argumentos -> .)
    LPAREN          shift and go to state 95
    VAR_ID          shift and go to state 89
    VAR_INT         shift and go to state 96
    VAR_DECIMAL     shift and go to state 88
    VAR_STRING      shift and go to state 93
    FALSE           shift and go to state 94
    TRUE            shift and go to state 83

    VAR_CTE                        shift and go to state 84
    argumentos                     shift and go to state 204
    ExpF                           shift and go to state 87
    llama_funcion                  shift and go to state 90
    ExpI                           shift and go to state 169
    ExpT                           shift and go to state 92
    ExpK                           shift and go to state 85
    VAR_BOOL                       shift and go to state 86

state 183

    (62) pos_arreglo -> SLBRACKET ExpI . SRBRACKET

    SRBRACKET       shift and go to state 205


state 184

    (28) ExpK -> ExpT resuelve_termino pos_SUMRES push_operador_PilaOperadores . ExpK
    (27) ExpK -> . ExpT resuelve_termino
    (28) ExpK -> . ExpT resuelve_termino pos_SUMRES push_operador_PilaOperadores ExpK
    (32) ExpT -> . ExpF resuelve_factor
    (33) ExpT -> . ExpF resuelve_factor pos_MULTDIV push_operador_PilaOperadores ExpT
    (37) ExpF -> . VAR_CTE
    (38) ExpF -> . LPAREN agrega_falso ExpI RPAREN quita_falso
    (39) ExpF -> . VAR_ID push_var_PilaOperandos pos_arreglo
    (40) ExpF -> . llama_funcion
    (41) VAR_CTE -> . VAR_INT push_int_PilaOperandos
    (42) VAR_CTE -> . VAR_DECIMAL push_decimal_PilaOperandos
    (43) VAR_CTE -> . VAR_STRING push_string_PilaOperandos
    (44) VAR_CTE -> . VAR_BOOL push_bool_PilaOperandos
    (53) llama_funcion -> . VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion guarda_resultado_funcion
    (45) VAR_BOOL -> . FALSE
    (46) VAR_BOOL -> . TRUE

    LPAREN          shift and go to state 95
    VAR_ID          shift and go to state 89
    VAR_INT         shift and go to state 96
    VAR_DECIMAL     shift and go to state 88
    VAR_STRING      shift and go to state 93
    FALSE           shift and go to state 94
    TRUE            shift and go to state 83

    VAR_CTE                        shift and go to state 84
    ExpF                           shift and go to state 87
    llama_funcion                  shift and go to state 90
    ExpT                           shift and go to state 92
    ExpK                           shift and go to state 206
    VAR_BOOL                       shift and go to state 86

state 185

    (38) ExpF -> LPAREN agrega_falso ExpI RPAREN . quita_falso
    (52) quita_falso -> .

    MULT            reduce using rule 52 (quita_falso -> .)
    DIV             reduce using rule 52 (quita_falso -> .)
    PLUS            reduce using rule 52 (quita_falso -> .)
    MINUS           reduce using rule 52 (quita_falso -> .)
    LT              reduce using rule 52 (quita_falso -> .)
    GT              reduce using rule 52 (quita_falso -> .)
    NE              reduce using rule 52 (quita_falso -> .)
    LE              reduce using rule 52 (quita_falso -> .)
    GE              reduce using rule 52 (quita_falso -> .)
    EQ              reduce using rule 52 (quita_falso -> .)
    SEMICOLON       reduce using rule 52 (quita_falso -> .)
    RPAREN          reduce using rule 52 (quita_falso -> .)
    COMMA           reduce using rule 52 (quita_falso -> .)
    SRBRACKET       reduce using rule 52 (quita_falso -> .)

    quita_falso                    shift and go to state 207

state 186

    (103) For -> FOR LPAREN VAR_ID ASSIGN ExpI . SEMICOLON ExpI SEMICOLON VAR_ID Exp_ciclo RPAREN LBRACKET reg_brack RBRACKET

    SEMICOLON       shift and go to state 208


state 187

    (99) While -> WHILE guarda_numero_cuadruplo LPAREN ExpI RPAREN . crea_GOTOF LBRACKET reg_brack RBRACKET regresa_inicio_while
    (84) crea_GOTOF -> .

    LBRACKET        reduce using rule 84 (crea_GOTOF -> .)

    crea_GOTOF                     shift and go to state 209

state 188

    (64) funciones -> FUNC tipo_funcion VAR_ID LPAREN param RPAREN agrega_funcion LBRACKET Vars reg_brack RBRACKET fin_func_quad funciones .

    MAIN            reduce using rule 64 (funciones -> FUNC tipo_funcion VAR_ID LPAREN param RPAREN agrega_funcion LBRACKET Vars reg_brack RBRACKET fin_func_quad funciones .)


state 189

    (83) Condicion -> IF LPAREN ExpI RPAREN crea_GOTOF LBRACKET . reg_brack RBRACKET pos_else llena_cuadruplo_if
    (74) reg_brack -> . Estatutos reg_brack
    (75) reg_brack -> .
    (76) Estatutos -> . Condicion
    (77) Estatutos -> . Ciclo
    (78) Estatutos -> . Return
    (79) Estatutos -> . Asignacion
    (80) Estatutos -> . Print
    (81) Estatutos -> . Llamada_Func
    (82) Estatutos -> . Turtle
    (83) Condicion -> . IF LPAREN ExpI RPAREN crea_GOTOF LBRACKET reg_brack RBRACKET pos_else llena_cuadruplo_if
    (96) Ciclo -> . For
    (97) Ciclo -> . While
    (98) Ciclo -> . DoWhile
    (89) Return -> . RETURN ExpI SEMICOLON resuelve_return
    (14) Asignacion -> . VAR_ID push_var_PilaOperandos ASSIGN push_operador_PilaOperadores ExpI SEMICOLON resuelve_asignacion
    (91) Print -> . PRINT LPAREN VAR_STRING RPAREN SEMICOLON
    (92) Print -> . PRINT LPAREN ExpI RPAREN SEMICOLON crea_print
    (94) Llamada_Func -> . VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion SEMICOLON checa_void
    (112) Turtle -> . Forward
    (113) Turtle -> . Right
    (114) Turtle -> . Left
    (115) Turtle -> . Circle
    (116) Turtle -> . Position
    (117) Turtle -> . IniciaTurtle
    (118) Turtle -> . TerminaTurtle
    (103) For -> . FOR LPAREN VAR_ID ASSIGN ExpI SEMICOLON ExpI SEMICOLON VAR_ID Exp_ciclo RPAREN LBRACKET reg_brack RBRACKET
    (99) While -> . WHILE guarda_numero_cuadruplo LPAREN ExpI RPAREN crea_GOTOF LBRACKET reg_brack RBRACKET regresa_inicio_while
    (102) DoWhile -> . DO LBRACKET reg_brack RBRACKET WHILE LPAREN ExpI RPAREN SEMICOLON
    (119) Forward -> . TUR POINT FORWARD LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_forward
    (121) Right -> . TUR POINT RIGHT LPAREN ExpI RPAREN SEMICOLON crea_quadruplo_right
    (123) Left -> . TUR POINT LEFT LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_left
    (125) Circle -> . TUR POINT CIRCLE LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_circle
    (127) Position -> . TUR POINT POS LPAREN ExpI COMMA ExpI RPAREN SEMICOLON crea_cuadruplo_pos
    (129) IniciaTurtle -> . TUR POINT TURTLE LPAREN RPAREN SEMICOLON crea_cuadruplo_inicia
    (131) TerminaTurtle -> . TUR POINT FINISH LPAREN RPAREN SEMICOLON crea_cuadruplo_termina

    RBRACKET        reduce using rule 75 (reg_brack -> .)
    IF              shift and go to state 48
    RETURN          shift and go to state 62
    VAR_ID          shift and go to state 49
    PRINT           shift and go to state 56
    FOR             shift and go to state 67
    WHILE           shift and go to state 69
    DO              shift and go to state 61
    TUR             shift and go to state 58

    Turtle                         shift and go to state 46
    reg_brack                      shift and go to state 210
    For                            shift and go to state 57
    Asignacion                     shift and go to state 51
    Position                       shift and go to state 66
    While                          shift and go to state 52
    Estatutos                      shift and go to state 53
    Right                          shift and go to state 68
    IniciaTurtle                   shift and go to state 54
    DoWhile                        shift and go to state 55
    Return                         shift and go to state 50
    Left                           shift and go to state 59
    Circle                         shift and go to state 60
    Forward                        shift and go to state 63
    Print                          shift and go to state 64
    Condicion                      shift and go to state 65
    TerminaTurtle                  shift and go to state 72
    Ciclo                          shift and go to state 70
    Llamada_Func                   shift and go to state 71

state 190

    (14) Asignacion -> VAR_ID push_var_PilaOperandos ASSIGN push_operador_PilaOperadores ExpI SEMICOLON . resuelve_asignacion
    (17) resuelve_asignacion -> .

    IF              reduce using rule 17 (resuelve_asignacion -> .)
    RETURN          reduce using rule 17 (resuelve_asignacion -> .)
    VAR_ID          reduce using rule 17 (resuelve_asignacion -> .)
    PRINT           reduce using rule 17 (resuelve_asignacion -> .)
    FOR             reduce using rule 17 (resuelve_asignacion -> .)
    WHILE           reduce using rule 17 (resuelve_asignacion -> .)
    DO              reduce using rule 17 (resuelve_asignacion -> .)
    TUR             reduce using rule 17 (resuelve_asignacion -> .)
    RET             reduce using rule 17 (resuelve_asignacion -> .)
    RBRACKET        reduce using rule 17 (resuelve_asignacion -> .)

    resuelve_asignacion            shift and go to state 211

state 191

    (94) Llamada_Func -> VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN . quita_falso resuelve_llamada_funcion SEMICOLON checa_void
    (52) quita_falso -> .

    SEMICOLON       reduce using rule 52 (quita_falso -> .)

    quita_falso                    shift and go to state 212

state 192

    (55) argumentos -> ExpI resuelve_argumentos . mas_argumentos
    (57) mas_argumentos -> . COMMA ExpI resuelve_argumentos mas_argumentos
    (58) mas_argumentos -> .

    COMMA           shift and go to state 213
    RPAREN          reduce using rule 58 (mas_argumentos -> .)

    mas_argumentos                 shift and go to state 214

state 193

    (92) Print -> PRINT LPAREN ExpI RPAREN SEMICOLON crea_print .

    IF              reduce using rule 92 (Print -> PRINT LPAREN ExpI RPAREN SEMICOLON crea_print .)
    RETURN          reduce using rule 92 (Print -> PRINT LPAREN ExpI RPAREN SEMICOLON crea_print .)
    VAR_ID          reduce using rule 92 (Print -> PRINT LPAREN ExpI RPAREN SEMICOLON crea_print .)
    PRINT           reduce using rule 92 (Print -> PRINT LPAREN ExpI RPAREN SEMICOLON crea_print .)
    FOR             reduce using rule 92 (Print -> PRINT LPAREN ExpI RPAREN SEMICOLON crea_print .)
    WHILE           reduce using rule 92 (Print -> PRINT LPAREN ExpI RPAREN SEMICOLON crea_print .)
    DO              reduce using rule 92 (Print -> PRINT LPAREN ExpI RPAREN SEMICOLON crea_print .)
    TUR             reduce using rule 92 (Print -> PRINT LPAREN ExpI RPAREN SEMICOLON crea_print .)
    RET             reduce using rule 92 (Print -> PRINT LPAREN ExpI RPAREN SEMICOLON crea_print .)
    RBRACKET        reduce using rule 92 (Print -> PRINT LPAREN ExpI RPAREN SEMICOLON crea_print .)


state 194

    (125) Circle -> TUR POINT CIRCLE LPAREN ExpI RPAREN . SEMICOLON crea_cuadruplo_circle

    SEMICOLON       shift and go to state 215


state 195

    (127) Position -> TUR POINT POS LPAREN ExpI COMMA . ExpI RPAREN SEMICOLON crea_cuadruplo_pos
    (18) ExpI -> . ExpK resuelve_operadores_relacionales
    (19) ExpI -> . ExpK Operandos push_operador_PilaOperadores ExpK resuelve_operadores_relacionales
    (27) ExpK -> . ExpT resuelve_termino
    (28) ExpK -> . ExpT resuelve_termino pos_SUMRES push_operador_PilaOperadores ExpK
    (32) ExpT -> . ExpF resuelve_factor
    (33) ExpT -> . ExpF resuelve_factor pos_MULTDIV push_operador_PilaOperadores ExpT
    (37) ExpF -> . VAR_CTE
    (38) ExpF -> . LPAREN agrega_falso ExpI RPAREN quita_falso
    (39) ExpF -> . VAR_ID push_var_PilaOperandos pos_arreglo
    (40) ExpF -> . llama_funcion
    (41) VAR_CTE -> . VAR_INT push_int_PilaOperandos
    (42) VAR_CTE -> . VAR_DECIMAL push_decimal_PilaOperandos
    (43) VAR_CTE -> . VAR_STRING push_string_PilaOperandos
    (44) VAR_CTE -> . VAR_BOOL push_bool_PilaOperandos
    (53) llama_funcion -> . VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion guarda_resultado_funcion
    (45) VAR_BOOL -> . FALSE
    (46) VAR_BOOL -> . TRUE

    LPAREN          shift and go to state 95
    VAR_ID          shift and go to state 89
    VAR_INT         shift and go to state 96
    VAR_DECIMAL     shift and go to state 88
    VAR_STRING      shift and go to state 93
    FALSE           shift and go to state 94
    TRUE            shift and go to state 83

    VAR_CTE                        shift and go to state 84
    ExpF                           shift and go to state 87
    llama_funcion                  shift and go to state 90
    ExpI                           shift and go to state 216
    ExpT                           shift and go to state 92
    ExpK                           shift and go to state 85
    VAR_BOOL                       shift and go to state 86

state 196

    (131) TerminaTurtle -> TUR POINT FINISH LPAREN RPAREN SEMICOLON . crea_cuadruplo_termina
    (132) crea_cuadruplo_termina -> .

    IF              reduce using rule 132 (crea_cuadruplo_termina -> .)
    RETURN          reduce using rule 132 (crea_cuadruplo_termina -> .)
    VAR_ID          reduce using rule 132 (crea_cuadruplo_termina -> .)
    PRINT           reduce using rule 132 (crea_cuadruplo_termina -> .)
    FOR             reduce using rule 132 (crea_cuadruplo_termina -> .)
    WHILE           reduce using rule 132 (crea_cuadruplo_termina -> .)
    DO              reduce using rule 132 (crea_cuadruplo_termina -> .)
    TUR             reduce using rule 132 (crea_cuadruplo_termina -> .)
    RET             reduce using rule 132 (crea_cuadruplo_termina -> .)
    RBRACKET        reduce using rule 132 (crea_cuadruplo_termina -> .)

    crea_cuadruplo_termina         shift and go to state 217

state 197

    (123) Left -> TUR POINT LEFT LPAREN ExpI RPAREN . SEMICOLON crea_cuadruplo_left

    SEMICOLON       shift and go to state 218


state 198

    (129) IniciaTurtle -> TUR POINT TURTLE LPAREN RPAREN SEMICOLON . crea_cuadruplo_inicia
    (130) crea_cuadruplo_inicia -> .

    IF              reduce using rule 130 (crea_cuadruplo_inicia -> .)
    RETURN          reduce using rule 130 (crea_cuadruplo_inicia -> .)
    VAR_ID          reduce using rule 130 (crea_cuadruplo_inicia -> .)
    PRINT           reduce using rule 130 (crea_cuadruplo_inicia -> .)
    FOR             reduce using rule 130 (crea_cuadruplo_inicia -> .)
    WHILE           reduce using rule 130 (crea_cuadruplo_inicia -> .)
    DO              reduce using rule 130 (crea_cuadruplo_inicia -> .)
    TUR             reduce using rule 130 (crea_cuadruplo_inicia -> .)
    RET             reduce using rule 130 (crea_cuadruplo_inicia -> .)
    RBRACKET        reduce using rule 130 (crea_cuadruplo_inicia -> .)

    crea_cuadruplo_inicia          shift and go to state 219

state 199

    (121) Right -> TUR POINT RIGHT LPAREN ExpI RPAREN . SEMICOLON crea_quadruplo_right

    SEMICOLON       shift and go to state 220


state 200

    (119) Forward -> TUR POINT FORWARD LPAREN ExpI RPAREN . SEMICOLON crea_cuadruplo_forward

    SEMICOLON       shift and go to state 221


state 201

    (102) DoWhile -> DO LBRACKET reg_brack RBRACKET WHILE LPAREN . ExpI RPAREN SEMICOLON
    (18) ExpI -> . ExpK resuelve_operadores_relacionales
    (19) ExpI -> . ExpK Operandos push_operador_PilaOperadores ExpK resuelve_operadores_relacionales
    (27) ExpK -> . ExpT resuelve_termino
    (28) ExpK -> . ExpT resuelve_termino pos_SUMRES push_operador_PilaOperadores ExpK
    (32) ExpT -> . ExpF resuelve_factor
    (33) ExpT -> . ExpF resuelve_factor pos_MULTDIV push_operador_PilaOperadores ExpT
    (37) ExpF -> . VAR_CTE
    (38) ExpF -> . LPAREN agrega_falso ExpI RPAREN quita_falso
    (39) ExpF -> . VAR_ID push_var_PilaOperandos pos_arreglo
    (40) ExpF -> . llama_funcion
    (41) VAR_CTE -> . VAR_INT push_int_PilaOperandos
    (42) VAR_CTE -> . VAR_DECIMAL push_decimal_PilaOperandos
    (43) VAR_CTE -> . VAR_STRING push_string_PilaOperandos
    (44) VAR_CTE -> . VAR_BOOL push_bool_PilaOperandos
    (53) llama_funcion -> . VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion guarda_resultado_funcion
    (45) VAR_BOOL -> . FALSE
    (46) VAR_BOOL -> . TRUE

    LPAREN          shift and go to state 95
    VAR_ID          shift and go to state 89
    VAR_INT         shift and go to state 96
    VAR_DECIMAL     shift and go to state 88
    VAR_STRING      shift and go to state 93
    FALSE           shift and go to state 94
    TRUE            shift and go to state 83

    VAR_CTE                        shift and go to state 84
    ExpF                           shift and go to state 87
    llama_funcion                  shift and go to state 90
    ExpI                           shift and go to state 222
    ExpT                           shift and go to state 92
    ExpK                           shift and go to state 85
    VAR_BOOL                       shift and go to state 86

state 202

    (19) ExpI -> ExpK Operandos push_operador_PilaOperadores ExpK resuelve_operadores_relacionales .

    RPAREN          reduce using rule 19 (ExpI -> ExpK Operandos push_operador_PilaOperadores ExpK resuelve_operadores_relacionales .)
    COMMA           reduce using rule 19 (ExpI -> ExpK Operandos push_operador_PilaOperadores ExpK resuelve_operadores_relacionales .)
    SEMICOLON       reduce using rule 19 (ExpI -> ExpK Operandos push_operador_PilaOperadores ExpK resuelve_operadores_relacionales .)
    SRBRACKET       reduce using rule 19 (ExpI -> ExpK Operandos push_operador_PilaOperadores ExpK resuelve_operadores_relacionales .)


state 203

    (33) ExpT -> ExpF resuelve_factor pos_MULTDIV push_operador_PilaOperadores ExpT .

    PLUS            reduce using rule 33 (ExpT -> ExpF resuelve_factor pos_MULTDIV push_operador_PilaOperadores ExpT .)
    MINUS           reduce using rule 33 (ExpT -> ExpF resuelve_factor pos_MULTDIV push_operador_PilaOperadores ExpT .)
    LT              reduce using rule 33 (ExpT -> ExpF resuelve_factor pos_MULTDIV push_operador_PilaOperadores ExpT .)
    GT              reduce using rule 33 (ExpT -> ExpF resuelve_factor pos_MULTDIV push_operador_PilaOperadores ExpT .)
    NE              reduce using rule 33 (ExpT -> ExpF resuelve_factor pos_MULTDIV push_operador_PilaOperadores ExpT .)
    LE              reduce using rule 33 (ExpT -> ExpF resuelve_factor pos_MULTDIV push_operador_PilaOperadores ExpT .)
    GE              reduce using rule 33 (ExpT -> ExpF resuelve_factor pos_MULTDIV push_operador_PilaOperadores ExpT .)
    EQ              reduce using rule 33 (ExpT -> ExpF resuelve_factor pos_MULTDIV push_operador_PilaOperadores ExpT .)
    SRBRACKET       reduce using rule 33 (ExpT -> ExpF resuelve_factor pos_MULTDIV push_operador_PilaOperadores ExpT .)
    RPAREN          reduce using rule 33 (ExpT -> ExpF resuelve_factor pos_MULTDIV push_operador_PilaOperadores ExpT .)
    COMMA           reduce using rule 33 (ExpT -> ExpF resuelve_factor pos_MULTDIV push_operador_PilaOperadores ExpT .)
    SEMICOLON       reduce using rule 33 (ExpT -> ExpF resuelve_factor pos_MULTDIV push_operador_PilaOperadores ExpT .)


state 204

    (53) llama_funcion -> VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos . RPAREN quita_falso resuelve_llamada_funcion guarda_resultado_funcion

    RPAREN          shift and go to state 223


state 205

    (62) pos_arreglo -> SLBRACKET ExpI SRBRACKET .

    MULT            reduce using rule 62 (pos_arreglo -> SLBRACKET ExpI SRBRACKET .)
    DIV             reduce using rule 62 (pos_arreglo -> SLBRACKET ExpI SRBRACKET .)
    PLUS            reduce using rule 62 (pos_arreglo -> SLBRACKET ExpI SRBRACKET .)
    MINUS           reduce using rule 62 (pos_arreglo -> SLBRACKET ExpI SRBRACKET .)
    LT              reduce using rule 62 (pos_arreglo -> SLBRACKET ExpI SRBRACKET .)
    GT              reduce using rule 62 (pos_arreglo -> SLBRACKET ExpI SRBRACKET .)
    NE              reduce using rule 62 (pos_arreglo -> SLBRACKET ExpI SRBRACKET .)
    LE              reduce using rule 62 (pos_arreglo -> SLBRACKET ExpI SRBRACKET .)
    GE              reduce using rule 62 (pos_arreglo -> SLBRACKET ExpI SRBRACKET .)
    EQ              reduce using rule 62 (pos_arreglo -> SLBRACKET ExpI SRBRACKET .)
    SEMICOLON       reduce using rule 62 (pos_arreglo -> SLBRACKET ExpI SRBRACKET .)
    RPAREN          reduce using rule 62 (pos_arreglo -> SLBRACKET ExpI SRBRACKET .)
    COMMA           reduce using rule 62 (pos_arreglo -> SLBRACKET ExpI SRBRACKET .)
    SRBRACKET       reduce using rule 62 (pos_arreglo -> SLBRACKET ExpI SRBRACKET .)


state 206

    (28) ExpK -> ExpT resuelve_termino pos_SUMRES push_operador_PilaOperadores ExpK .

    LT              reduce using rule 28 (ExpK -> ExpT resuelve_termino pos_SUMRES push_operador_PilaOperadores ExpK .)
    GT              reduce using rule 28 (ExpK -> ExpT resuelve_termino pos_SUMRES push_operador_PilaOperadores ExpK .)
    NE              reduce using rule 28 (ExpK -> ExpT resuelve_termino pos_SUMRES push_operador_PilaOperadores ExpK .)
    LE              reduce using rule 28 (ExpK -> ExpT resuelve_termino pos_SUMRES push_operador_PilaOperadores ExpK .)
    GE              reduce using rule 28 (ExpK -> ExpT resuelve_termino pos_SUMRES push_operador_PilaOperadores ExpK .)
    EQ              reduce using rule 28 (ExpK -> ExpT resuelve_termino pos_SUMRES push_operador_PilaOperadores ExpK .)
    RPAREN          reduce using rule 28 (ExpK -> ExpT resuelve_termino pos_SUMRES push_operador_PilaOperadores ExpK .)
    COMMA           reduce using rule 28 (ExpK -> ExpT resuelve_termino pos_SUMRES push_operador_PilaOperadores ExpK .)
    SEMICOLON       reduce using rule 28 (ExpK -> ExpT resuelve_termino pos_SUMRES push_operador_PilaOperadores ExpK .)
    SRBRACKET       reduce using rule 28 (ExpK -> ExpT resuelve_termino pos_SUMRES push_operador_PilaOperadores ExpK .)


state 207

    (38) ExpF -> LPAREN agrega_falso ExpI RPAREN quita_falso .

    MULT            reduce using rule 38 (ExpF -> LPAREN agrega_falso ExpI RPAREN quita_falso .)
    DIV             reduce using rule 38 (ExpF -> LPAREN agrega_falso ExpI RPAREN quita_falso .)
    PLUS            reduce using rule 38 (ExpF -> LPAREN agrega_falso ExpI RPAREN quita_falso .)
    MINUS           reduce using rule 38 (ExpF -> LPAREN agrega_falso ExpI RPAREN quita_falso .)
    LT              reduce using rule 38 (ExpF -> LPAREN agrega_falso ExpI RPAREN quita_falso .)
    GT              reduce using rule 38 (ExpF -> LPAREN agrega_falso ExpI RPAREN quita_falso .)
    NE              reduce using rule 38 (ExpF -> LPAREN agrega_falso ExpI RPAREN quita_falso .)
    LE              reduce using rule 38 (ExpF -> LPAREN agrega_falso ExpI RPAREN quita_falso .)
    GE              reduce using rule 38 (ExpF -> LPAREN agrega_falso ExpI RPAREN quita_falso .)
    EQ              reduce using rule 38 (ExpF -> LPAREN agrega_falso ExpI RPAREN quita_falso .)
    SRBRACKET       reduce using rule 38 (ExpF -> LPAREN agrega_falso ExpI RPAREN quita_falso .)
    RPAREN          reduce using rule 38 (ExpF -> LPAREN agrega_falso ExpI RPAREN quita_falso .)
    COMMA           reduce using rule 38 (ExpF -> LPAREN agrega_falso ExpI RPAREN quita_falso .)
    SEMICOLON       reduce using rule 38 (ExpF -> LPAREN agrega_falso ExpI RPAREN quita_falso .)


state 208

    (103) For -> FOR LPAREN VAR_ID ASSIGN ExpI SEMICOLON . ExpI SEMICOLON VAR_ID Exp_ciclo RPAREN LBRACKET reg_brack RBRACKET
    (18) ExpI -> . ExpK resuelve_operadores_relacionales
    (19) ExpI -> . ExpK Operandos push_operador_PilaOperadores ExpK resuelve_operadores_relacionales
    (27) ExpK -> . ExpT resuelve_termino
    (28) ExpK -> . ExpT resuelve_termino pos_SUMRES push_operador_PilaOperadores ExpK
    (32) ExpT -> . ExpF resuelve_factor
    (33) ExpT -> . ExpF resuelve_factor pos_MULTDIV push_operador_PilaOperadores ExpT
    (37) ExpF -> . VAR_CTE
    (38) ExpF -> . LPAREN agrega_falso ExpI RPAREN quita_falso
    (39) ExpF -> . VAR_ID push_var_PilaOperandos pos_arreglo
    (40) ExpF -> . llama_funcion
    (41) VAR_CTE -> . VAR_INT push_int_PilaOperandos
    (42) VAR_CTE -> . VAR_DECIMAL push_decimal_PilaOperandos
    (43) VAR_CTE -> . VAR_STRING push_string_PilaOperandos
    (44) VAR_CTE -> . VAR_BOOL push_bool_PilaOperandos
    (53) llama_funcion -> . VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion guarda_resultado_funcion
    (45) VAR_BOOL -> . FALSE
    (46) VAR_BOOL -> . TRUE

    LPAREN          shift and go to state 95
    VAR_ID          shift and go to state 89
    VAR_INT         shift and go to state 96
    VAR_DECIMAL     shift and go to state 88
    VAR_STRING      shift and go to state 93
    FALSE           shift and go to state 94
    TRUE            shift and go to state 83

    VAR_CTE                        shift and go to state 84
    ExpF                           shift and go to state 87
    llama_funcion                  shift and go to state 90
    ExpI                           shift and go to state 224
    ExpT                           shift and go to state 92
    ExpK                           shift and go to state 85
    VAR_BOOL                       shift and go to state 86

state 209

    (99) While -> WHILE guarda_numero_cuadruplo LPAREN ExpI RPAREN crea_GOTOF . LBRACKET reg_brack RBRACKET regresa_inicio_while

    LBRACKET        shift and go to state 225


state 210

    (83) Condicion -> IF LPAREN ExpI RPAREN crea_GOTOF LBRACKET reg_brack . RBRACKET pos_else llena_cuadruplo_if

    RBRACKET        shift and go to state 226


state 211

    (14) Asignacion -> VAR_ID push_var_PilaOperandos ASSIGN push_operador_PilaOperadores ExpI SEMICOLON resuelve_asignacion .

    IF              reduce using rule 14 (Asignacion -> VAR_ID push_var_PilaOperandos ASSIGN push_operador_PilaOperadores ExpI SEMICOLON resuelve_asignacion .)
    RETURN          reduce using rule 14 (Asignacion -> VAR_ID push_var_PilaOperandos ASSIGN push_operador_PilaOperadores ExpI SEMICOLON resuelve_asignacion .)
    VAR_ID          reduce using rule 14 (Asignacion -> VAR_ID push_var_PilaOperandos ASSIGN push_operador_PilaOperadores ExpI SEMICOLON resuelve_asignacion .)
    PRINT           reduce using rule 14 (Asignacion -> VAR_ID push_var_PilaOperandos ASSIGN push_operador_PilaOperadores ExpI SEMICOLON resuelve_asignacion .)
    FOR             reduce using rule 14 (Asignacion -> VAR_ID push_var_PilaOperandos ASSIGN push_operador_PilaOperadores ExpI SEMICOLON resuelve_asignacion .)
    WHILE           reduce using rule 14 (Asignacion -> VAR_ID push_var_PilaOperandos ASSIGN push_operador_PilaOperadores ExpI SEMICOLON resuelve_asignacion .)
    DO              reduce using rule 14 (Asignacion -> VAR_ID push_var_PilaOperandos ASSIGN push_operador_PilaOperadores ExpI SEMICOLON resuelve_asignacion .)
    TUR             reduce using rule 14 (Asignacion -> VAR_ID push_var_PilaOperandos ASSIGN push_operador_PilaOperadores ExpI SEMICOLON resuelve_asignacion .)
    RBRACKET        reduce using rule 14 (Asignacion -> VAR_ID push_var_PilaOperandos ASSIGN push_operador_PilaOperadores ExpI SEMICOLON resuelve_asignacion .)
    RET             reduce using rule 14 (Asignacion -> VAR_ID push_var_PilaOperandos ASSIGN push_operador_PilaOperadores ExpI SEMICOLON resuelve_asignacion .)


state 212

    (94) Llamada_Func -> VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso . resuelve_llamada_funcion SEMICOLON checa_void
    (60) resuelve_llamada_funcion -> .

    SEMICOLON       reduce using rule 60 (resuelve_llamada_funcion -> .)

    resuelve_llamada_funcion       shift and go to state 227

state 213

    (57) mas_argumentos -> COMMA . ExpI resuelve_argumentos mas_argumentos
    (18) ExpI -> . ExpK resuelve_operadores_relacionales
    (19) ExpI -> . ExpK Operandos push_operador_PilaOperadores ExpK resuelve_operadores_relacionales
    (27) ExpK -> . ExpT resuelve_termino
    (28) ExpK -> . ExpT resuelve_termino pos_SUMRES push_operador_PilaOperadores ExpK
    (32) ExpT -> . ExpF resuelve_factor
    (33) ExpT -> . ExpF resuelve_factor pos_MULTDIV push_operador_PilaOperadores ExpT
    (37) ExpF -> . VAR_CTE
    (38) ExpF -> . LPAREN agrega_falso ExpI RPAREN quita_falso
    (39) ExpF -> . VAR_ID push_var_PilaOperandos pos_arreglo
    (40) ExpF -> . llama_funcion
    (41) VAR_CTE -> . VAR_INT push_int_PilaOperandos
    (42) VAR_CTE -> . VAR_DECIMAL push_decimal_PilaOperandos
    (43) VAR_CTE -> . VAR_STRING push_string_PilaOperandos
    (44) VAR_CTE -> . VAR_BOOL push_bool_PilaOperandos
    (53) llama_funcion -> . VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion guarda_resultado_funcion
    (45) VAR_BOOL -> . FALSE
    (46) VAR_BOOL -> . TRUE

    LPAREN          shift and go to state 95
    VAR_ID          shift and go to state 89
    VAR_INT         shift and go to state 96
    VAR_DECIMAL     shift and go to state 88
    VAR_STRING      shift and go to state 93
    FALSE           shift and go to state 94
    TRUE            shift and go to state 83

    VAR_CTE                        shift and go to state 84
    ExpF                           shift and go to state 87
    llama_funcion                  shift and go to state 90
    ExpI                           shift and go to state 228
    ExpT                           shift and go to state 92
    ExpK                           shift and go to state 85
    VAR_BOOL                       shift and go to state 86

state 214

    (55) argumentos -> ExpI resuelve_argumentos mas_argumentos .

    RPAREN          reduce using rule 55 (argumentos -> ExpI resuelve_argumentos mas_argumentos .)


state 215

    (125) Circle -> TUR POINT CIRCLE LPAREN ExpI RPAREN SEMICOLON . crea_cuadruplo_circle
    (126) crea_cuadruplo_circle -> .

    IF              reduce using rule 126 (crea_cuadruplo_circle -> .)
    RETURN          reduce using rule 126 (crea_cuadruplo_circle -> .)
    VAR_ID          reduce using rule 126 (crea_cuadruplo_circle -> .)
    PRINT           reduce using rule 126 (crea_cuadruplo_circle -> .)
    FOR             reduce using rule 126 (crea_cuadruplo_circle -> .)
    WHILE           reduce using rule 126 (crea_cuadruplo_circle -> .)
    DO              reduce using rule 126 (crea_cuadruplo_circle -> .)
    TUR             reduce using rule 126 (crea_cuadruplo_circle -> .)
    RET             reduce using rule 126 (crea_cuadruplo_circle -> .)
    RBRACKET        reduce using rule 126 (crea_cuadruplo_circle -> .)

    crea_cuadruplo_circle          shift and go to state 229

state 216

    (127) Position -> TUR POINT POS LPAREN ExpI COMMA ExpI . RPAREN SEMICOLON crea_cuadruplo_pos

    RPAREN          shift and go to state 230


state 217

    (131) TerminaTurtle -> TUR POINT FINISH LPAREN RPAREN SEMICOLON crea_cuadruplo_termina .

    IF              reduce using rule 131 (TerminaTurtle -> TUR POINT FINISH LPAREN RPAREN SEMICOLON crea_cuadruplo_termina .)
    RETURN          reduce using rule 131 (TerminaTurtle -> TUR POINT FINISH LPAREN RPAREN SEMICOLON crea_cuadruplo_termina .)
    VAR_ID          reduce using rule 131 (TerminaTurtle -> TUR POINT FINISH LPAREN RPAREN SEMICOLON crea_cuadruplo_termina .)
    PRINT           reduce using rule 131 (TerminaTurtle -> TUR POINT FINISH LPAREN RPAREN SEMICOLON crea_cuadruplo_termina .)
    FOR             reduce using rule 131 (TerminaTurtle -> TUR POINT FINISH LPAREN RPAREN SEMICOLON crea_cuadruplo_termina .)
    WHILE           reduce using rule 131 (TerminaTurtle -> TUR POINT FINISH LPAREN RPAREN SEMICOLON crea_cuadruplo_termina .)
    DO              reduce using rule 131 (TerminaTurtle -> TUR POINT FINISH LPAREN RPAREN SEMICOLON crea_cuadruplo_termina .)
    TUR             reduce using rule 131 (TerminaTurtle -> TUR POINT FINISH LPAREN RPAREN SEMICOLON crea_cuadruplo_termina .)
    RBRACKET        reduce using rule 131 (TerminaTurtle -> TUR POINT FINISH LPAREN RPAREN SEMICOLON crea_cuadruplo_termina .)
    RET             reduce using rule 131 (TerminaTurtle -> TUR POINT FINISH LPAREN RPAREN SEMICOLON crea_cuadruplo_termina .)


state 218

    (123) Left -> TUR POINT LEFT LPAREN ExpI RPAREN SEMICOLON . crea_cuadruplo_left
    (124) crea_cuadruplo_left -> .

    IF              reduce using rule 124 (crea_cuadruplo_left -> .)
    RETURN          reduce using rule 124 (crea_cuadruplo_left -> .)
    VAR_ID          reduce using rule 124 (crea_cuadruplo_left -> .)
    PRINT           reduce using rule 124 (crea_cuadruplo_left -> .)
    FOR             reduce using rule 124 (crea_cuadruplo_left -> .)
    WHILE           reduce using rule 124 (crea_cuadruplo_left -> .)
    DO              reduce using rule 124 (crea_cuadruplo_left -> .)
    TUR             reduce using rule 124 (crea_cuadruplo_left -> .)
    RET             reduce using rule 124 (crea_cuadruplo_left -> .)
    RBRACKET        reduce using rule 124 (crea_cuadruplo_left -> .)

    crea_cuadruplo_left            shift and go to state 231

state 219

    (129) IniciaTurtle -> TUR POINT TURTLE LPAREN RPAREN SEMICOLON crea_cuadruplo_inicia .

    IF              reduce using rule 129 (IniciaTurtle -> TUR POINT TURTLE LPAREN RPAREN SEMICOLON crea_cuadruplo_inicia .)
    RETURN          reduce using rule 129 (IniciaTurtle -> TUR POINT TURTLE LPAREN RPAREN SEMICOLON crea_cuadruplo_inicia .)
    VAR_ID          reduce using rule 129 (IniciaTurtle -> TUR POINT TURTLE LPAREN RPAREN SEMICOLON crea_cuadruplo_inicia .)
    PRINT           reduce using rule 129 (IniciaTurtle -> TUR POINT TURTLE LPAREN RPAREN SEMICOLON crea_cuadruplo_inicia .)
    FOR             reduce using rule 129 (IniciaTurtle -> TUR POINT TURTLE LPAREN RPAREN SEMICOLON crea_cuadruplo_inicia .)
    WHILE           reduce using rule 129 (IniciaTurtle -> TUR POINT TURTLE LPAREN RPAREN SEMICOLON crea_cuadruplo_inicia .)
    DO              reduce using rule 129 (IniciaTurtle -> TUR POINT TURTLE LPAREN RPAREN SEMICOLON crea_cuadruplo_inicia .)
    TUR             reduce using rule 129 (IniciaTurtle -> TUR POINT TURTLE LPAREN RPAREN SEMICOLON crea_cuadruplo_inicia .)
    RBRACKET        reduce using rule 129 (IniciaTurtle -> TUR POINT TURTLE LPAREN RPAREN SEMICOLON crea_cuadruplo_inicia .)
    RET             reduce using rule 129 (IniciaTurtle -> TUR POINT TURTLE LPAREN RPAREN SEMICOLON crea_cuadruplo_inicia .)


state 220

    (121) Right -> TUR POINT RIGHT LPAREN ExpI RPAREN SEMICOLON . crea_quadruplo_right
    (122) crea_quadruplo_right -> .

    IF              reduce using rule 122 (crea_quadruplo_right -> .)
    RETURN          reduce using rule 122 (crea_quadruplo_right -> .)
    VAR_ID          reduce using rule 122 (crea_quadruplo_right -> .)
    PRINT           reduce using rule 122 (crea_quadruplo_right -> .)
    FOR             reduce using rule 122 (crea_quadruplo_right -> .)
    WHILE           reduce using rule 122 (crea_quadruplo_right -> .)
    DO              reduce using rule 122 (crea_quadruplo_right -> .)
    TUR             reduce using rule 122 (crea_quadruplo_right -> .)
    RET             reduce using rule 122 (crea_quadruplo_right -> .)
    RBRACKET        reduce using rule 122 (crea_quadruplo_right -> .)

    crea_quadruplo_right           shift and go to state 232

state 221

    (119) Forward -> TUR POINT FORWARD LPAREN ExpI RPAREN SEMICOLON . crea_cuadruplo_forward
    (120) crea_cuadruplo_forward -> .

    IF              reduce using rule 120 (crea_cuadruplo_forward -> .)
    RETURN          reduce using rule 120 (crea_cuadruplo_forward -> .)
    VAR_ID          reduce using rule 120 (crea_cuadruplo_forward -> .)
    PRINT           reduce using rule 120 (crea_cuadruplo_forward -> .)
    FOR             reduce using rule 120 (crea_cuadruplo_forward -> .)
    WHILE           reduce using rule 120 (crea_cuadruplo_forward -> .)
    DO              reduce using rule 120 (crea_cuadruplo_forward -> .)
    TUR             reduce using rule 120 (crea_cuadruplo_forward -> .)
    RET             reduce using rule 120 (crea_cuadruplo_forward -> .)
    RBRACKET        reduce using rule 120 (crea_cuadruplo_forward -> .)

    crea_cuadruplo_forward         shift and go to state 233

state 222

    (102) DoWhile -> DO LBRACKET reg_brack RBRACKET WHILE LPAREN ExpI . RPAREN SEMICOLON

    RPAREN          shift and go to state 234


state 223

    (53) llama_funcion -> VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN . quita_falso resuelve_llamada_funcion guarda_resultado_funcion
    (52) quita_falso -> .

    MULT            reduce using rule 52 (quita_falso -> .)
    DIV             reduce using rule 52 (quita_falso -> .)
    PLUS            reduce using rule 52 (quita_falso -> .)
    MINUS           reduce using rule 52 (quita_falso -> .)
    LT              reduce using rule 52 (quita_falso -> .)
    GT              reduce using rule 52 (quita_falso -> .)
    NE              reduce using rule 52 (quita_falso -> .)
    LE              reduce using rule 52 (quita_falso -> .)
    GE              reduce using rule 52 (quita_falso -> .)
    EQ              reduce using rule 52 (quita_falso -> .)
    SEMICOLON       reduce using rule 52 (quita_falso -> .)
    RPAREN          reduce using rule 52 (quita_falso -> .)
    COMMA           reduce using rule 52 (quita_falso -> .)
    SRBRACKET       reduce using rule 52 (quita_falso -> .)

    quita_falso                    shift and go to state 235

state 224

    (103) For -> FOR LPAREN VAR_ID ASSIGN ExpI SEMICOLON ExpI . SEMICOLON VAR_ID Exp_ciclo RPAREN LBRACKET reg_brack RBRACKET

    SEMICOLON       shift and go to state 236


state 225

    (99) While -> WHILE guarda_numero_cuadruplo LPAREN ExpI RPAREN crea_GOTOF LBRACKET . reg_brack RBRACKET regresa_inicio_while
    (74) reg_brack -> . Estatutos reg_brack
    (75) reg_brack -> .
    (76) Estatutos -> . Condicion
    (77) Estatutos -> . Ciclo
    (78) Estatutos -> . Return
    (79) Estatutos -> . Asignacion
    (80) Estatutos -> . Print
    (81) Estatutos -> . Llamada_Func
    (82) Estatutos -> . Turtle
    (83) Condicion -> . IF LPAREN ExpI RPAREN crea_GOTOF LBRACKET reg_brack RBRACKET pos_else llena_cuadruplo_if
    (96) Ciclo -> . For
    (97) Ciclo -> . While
    (98) Ciclo -> . DoWhile
    (89) Return -> . RETURN ExpI SEMICOLON resuelve_return
    (14) Asignacion -> . VAR_ID push_var_PilaOperandos ASSIGN push_operador_PilaOperadores ExpI SEMICOLON resuelve_asignacion
    (91) Print -> . PRINT LPAREN VAR_STRING RPAREN SEMICOLON
    (92) Print -> . PRINT LPAREN ExpI RPAREN SEMICOLON crea_print
    (94) Llamada_Func -> . VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion SEMICOLON checa_void
    (112) Turtle -> . Forward
    (113) Turtle -> . Right
    (114) Turtle -> . Left
    (115) Turtle -> . Circle
    (116) Turtle -> . Position
    (117) Turtle -> . IniciaTurtle
    (118) Turtle -> . TerminaTurtle
    (103) For -> . FOR LPAREN VAR_ID ASSIGN ExpI SEMICOLON ExpI SEMICOLON VAR_ID Exp_ciclo RPAREN LBRACKET reg_brack RBRACKET
    (99) While -> . WHILE guarda_numero_cuadruplo LPAREN ExpI RPAREN crea_GOTOF LBRACKET reg_brack RBRACKET regresa_inicio_while
    (102) DoWhile -> . DO LBRACKET reg_brack RBRACKET WHILE LPAREN ExpI RPAREN SEMICOLON
    (119) Forward -> . TUR POINT FORWARD LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_forward
    (121) Right -> . TUR POINT RIGHT LPAREN ExpI RPAREN SEMICOLON crea_quadruplo_right
    (123) Left -> . TUR POINT LEFT LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_left
    (125) Circle -> . TUR POINT CIRCLE LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_circle
    (127) Position -> . TUR POINT POS LPAREN ExpI COMMA ExpI RPAREN SEMICOLON crea_cuadruplo_pos
    (129) IniciaTurtle -> . TUR POINT TURTLE LPAREN RPAREN SEMICOLON crea_cuadruplo_inicia
    (131) TerminaTurtle -> . TUR POINT FINISH LPAREN RPAREN SEMICOLON crea_cuadruplo_termina

    RBRACKET        reduce using rule 75 (reg_brack -> .)
    IF              shift and go to state 48
    RETURN          shift and go to state 62
    VAR_ID          shift and go to state 49
    PRINT           shift and go to state 56
    FOR             shift and go to state 67
    WHILE           shift and go to state 69
    DO              shift and go to state 61
    TUR             shift and go to state 58

    Turtle                         shift and go to state 46
    reg_brack                      shift and go to state 237
    For                            shift and go to state 57
    Asignacion                     shift and go to state 51
    Position                       shift and go to state 66
    While                          shift and go to state 52
    Estatutos                      shift and go to state 53
    Right                          shift and go to state 68
    IniciaTurtle                   shift and go to state 54
    Llamada_Func                   shift and go to state 71
    DoWhile                        shift and go to state 55
    Return                         shift and go to state 50
    Left                           shift and go to state 59
    Circle                         shift and go to state 60
    Forward                        shift and go to state 63
    Print                          shift and go to state 64
    Condicion                      shift and go to state 65
    TerminaTurtle                  shift and go to state 72
    Ciclo                          shift and go to state 70

state 226

    (83) Condicion -> IF LPAREN ExpI RPAREN crea_GOTOF LBRACKET reg_brack RBRACKET . pos_else llena_cuadruplo_if
    (86) pos_else -> . ELSE crea_else_cuadruplo LBRACKET reg_brack RBRACKET
    (87) pos_else -> .

    ELSE            shift and go to state 238
    IF              reduce using rule 87 (pos_else -> .)
    RETURN          reduce using rule 87 (pos_else -> .)
    VAR_ID          reduce using rule 87 (pos_else -> .)
    PRINT           reduce using rule 87 (pos_else -> .)
    FOR             reduce using rule 87 (pos_else -> .)
    WHILE           reduce using rule 87 (pos_else -> .)
    DO              reduce using rule 87 (pos_else -> .)
    TUR             reduce using rule 87 (pos_else -> .)
    RET             reduce using rule 87 (pos_else -> .)
    RBRACKET        reduce using rule 87 (pos_else -> .)

    pos_else                       shift and go to state 239

state 227

    (94) Llamada_Func -> VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion . SEMICOLON checa_void

    SEMICOLON       shift and go to state 240


state 228

    (57) mas_argumentos -> COMMA ExpI . resuelve_argumentos mas_argumentos
    (59) resuelve_argumentos -> .

    COMMA           reduce using rule 59 (resuelve_argumentos -> .)
    RPAREN          reduce using rule 59 (resuelve_argumentos -> .)

    resuelve_argumentos            shift and go to state 241

state 229

    (125) Circle -> TUR POINT CIRCLE LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_circle .

    IF              reduce using rule 125 (Circle -> TUR POINT CIRCLE LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_circle .)
    RETURN          reduce using rule 125 (Circle -> TUR POINT CIRCLE LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_circle .)
    VAR_ID          reduce using rule 125 (Circle -> TUR POINT CIRCLE LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_circle .)
    PRINT           reduce using rule 125 (Circle -> TUR POINT CIRCLE LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_circle .)
    FOR             reduce using rule 125 (Circle -> TUR POINT CIRCLE LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_circle .)
    WHILE           reduce using rule 125 (Circle -> TUR POINT CIRCLE LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_circle .)
    DO              reduce using rule 125 (Circle -> TUR POINT CIRCLE LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_circle .)
    TUR             reduce using rule 125 (Circle -> TUR POINT CIRCLE LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_circle .)
    RBRACKET        reduce using rule 125 (Circle -> TUR POINT CIRCLE LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_circle .)
    RET             reduce using rule 125 (Circle -> TUR POINT CIRCLE LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_circle .)


state 230

    (127) Position -> TUR POINT POS LPAREN ExpI COMMA ExpI RPAREN . SEMICOLON crea_cuadruplo_pos

    SEMICOLON       shift and go to state 242


state 231

    (123) Left -> TUR POINT LEFT LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_left .

    IF              reduce using rule 123 (Left -> TUR POINT LEFT LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_left .)
    RETURN          reduce using rule 123 (Left -> TUR POINT LEFT LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_left .)
    VAR_ID          reduce using rule 123 (Left -> TUR POINT LEFT LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_left .)
    PRINT           reduce using rule 123 (Left -> TUR POINT LEFT LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_left .)
    FOR             reduce using rule 123 (Left -> TUR POINT LEFT LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_left .)
    WHILE           reduce using rule 123 (Left -> TUR POINT LEFT LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_left .)
    DO              reduce using rule 123 (Left -> TUR POINT LEFT LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_left .)
    TUR             reduce using rule 123 (Left -> TUR POINT LEFT LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_left .)
    RBRACKET        reduce using rule 123 (Left -> TUR POINT LEFT LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_left .)
    RET             reduce using rule 123 (Left -> TUR POINT LEFT LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_left .)


state 232

    (121) Right -> TUR POINT RIGHT LPAREN ExpI RPAREN SEMICOLON crea_quadruplo_right .

    IF              reduce using rule 121 (Right -> TUR POINT RIGHT LPAREN ExpI RPAREN SEMICOLON crea_quadruplo_right .)
    RETURN          reduce using rule 121 (Right -> TUR POINT RIGHT LPAREN ExpI RPAREN SEMICOLON crea_quadruplo_right .)
    VAR_ID          reduce using rule 121 (Right -> TUR POINT RIGHT LPAREN ExpI RPAREN SEMICOLON crea_quadruplo_right .)
    PRINT           reduce using rule 121 (Right -> TUR POINT RIGHT LPAREN ExpI RPAREN SEMICOLON crea_quadruplo_right .)
    FOR             reduce using rule 121 (Right -> TUR POINT RIGHT LPAREN ExpI RPAREN SEMICOLON crea_quadruplo_right .)
    WHILE           reduce using rule 121 (Right -> TUR POINT RIGHT LPAREN ExpI RPAREN SEMICOLON crea_quadruplo_right .)
    DO              reduce using rule 121 (Right -> TUR POINT RIGHT LPAREN ExpI RPAREN SEMICOLON crea_quadruplo_right .)
    TUR             reduce using rule 121 (Right -> TUR POINT RIGHT LPAREN ExpI RPAREN SEMICOLON crea_quadruplo_right .)
    RBRACKET        reduce using rule 121 (Right -> TUR POINT RIGHT LPAREN ExpI RPAREN SEMICOLON crea_quadruplo_right .)
    RET             reduce using rule 121 (Right -> TUR POINT RIGHT LPAREN ExpI RPAREN SEMICOLON crea_quadruplo_right .)


state 233

    (119) Forward -> TUR POINT FORWARD LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_forward .

    IF              reduce using rule 119 (Forward -> TUR POINT FORWARD LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_forward .)
    RETURN          reduce using rule 119 (Forward -> TUR POINT FORWARD LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_forward .)
    VAR_ID          reduce using rule 119 (Forward -> TUR POINT FORWARD LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_forward .)
    PRINT           reduce using rule 119 (Forward -> TUR POINT FORWARD LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_forward .)
    FOR             reduce using rule 119 (Forward -> TUR POINT FORWARD LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_forward .)
    WHILE           reduce using rule 119 (Forward -> TUR POINT FORWARD LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_forward .)
    DO              reduce using rule 119 (Forward -> TUR POINT FORWARD LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_forward .)
    TUR             reduce using rule 119 (Forward -> TUR POINT FORWARD LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_forward .)
    RBRACKET        reduce using rule 119 (Forward -> TUR POINT FORWARD LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_forward .)
    RET             reduce using rule 119 (Forward -> TUR POINT FORWARD LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_forward .)


state 234

    (102) DoWhile -> DO LBRACKET reg_brack RBRACKET WHILE LPAREN ExpI RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 243


state 235

    (53) llama_funcion -> VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso . resuelve_llamada_funcion guarda_resultado_funcion
    (60) resuelve_llamada_funcion -> .

    MULT            reduce using rule 60 (resuelve_llamada_funcion -> .)
    DIV             reduce using rule 60 (resuelve_llamada_funcion -> .)
    PLUS            reduce using rule 60 (resuelve_llamada_funcion -> .)
    MINUS           reduce using rule 60 (resuelve_llamada_funcion -> .)
    LT              reduce using rule 60 (resuelve_llamada_funcion -> .)
    GT              reduce using rule 60 (resuelve_llamada_funcion -> .)
    NE              reduce using rule 60 (resuelve_llamada_funcion -> .)
    LE              reduce using rule 60 (resuelve_llamada_funcion -> .)
    GE              reduce using rule 60 (resuelve_llamada_funcion -> .)
    EQ              reduce using rule 60 (resuelve_llamada_funcion -> .)
    SEMICOLON       reduce using rule 60 (resuelve_llamada_funcion -> .)
    RPAREN          reduce using rule 60 (resuelve_llamada_funcion -> .)
    COMMA           reduce using rule 60 (resuelve_llamada_funcion -> .)
    SRBRACKET       reduce using rule 60 (resuelve_llamada_funcion -> .)

    resuelve_llamada_funcion       shift and go to state 244

state 236

    (103) For -> FOR LPAREN VAR_ID ASSIGN ExpI SEMICOLON ExpI SEMICOLON . VAR_ID Exp_ciclo RPAREN LBRACKET reg_brack RBRACKET

    VAR_ID          shift and go to state 245


state 237

    (99) While -> WHILE guarda_numero_cuadruplo LPAREN ExpI RPAREN crea_GOTOF LBRACKET reg_brack . RBRACKET regresa_inicio_while

    RBRACKET        shift and go to state 246


state 238

    (86) pos_else -> ELSE . crea_else_cuadruplo LBRACKET reg_brack RBRACKET
    (88) crea_else_cuadruplo -> .

    LBRACKET        reduce using rule 88 (crea_else_cuadruplo -> .)

    crea_else_cuadruplo            shift and go to state 247

state 239

    (83) Condicion -> IF LPAREN ExpI RPAREN crea_GOTOF LBRACKET reg_brack RBRACKET pos_else . llena_cuadruplo_if
    (85) llena_cuadruplo_if -> .

    IF              reduce using rule 85 (llena_cuadruplo_if -> .)
    RETURN          reduce using rule 85 (llena_cuadruplo_if -> .)
    VAR_ID          reduce using rule 85 (llena_cuadruplo_if -> .)
    PRINT           reduce using rule 85 (llena_cuadruplo_if -> .)
    FOR             reduce using rule 85 (llena_cuadruplo_if -> .)
    WHILE           reduce using rule 85 (llena_cuadruplo_if -> .)
    DO              reduce using rule 85 (llena_cuadruplo_if -> .)
    TUR             reduce using rule 85 (llena_cuadruplo_if -> .)
    RET             reduce using rule 85 (llena_cuadruplo_if -> .)
    RBRACKET        reduce using rule 85 (llena_cuadruplo_if -> .)

    llena_cuadruplo_if             shift and go to state 248

state 240

    (94) Llamada_Func -> VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion SEMICOLON . checa_void
    (95) checa_void -> .

    IF              reduce using rule 95 (checa_void -> .)
    RETURN          reduce using rule 95 (checa_void -> .)
    VAR_ID          reduce using rule 95 (checa_void -> .)
    PRINT           reduce using rule 95 (checa_void -> .)
    FOR             reduce using rule 95 (checa_void -> .)
    WHILE           reduce using rule 95 (checa_void -> .)
    DO              reduce using rule 95 (checa_void -> .)
    TUR             reduce using rule 95 (checa_void -> .)
    RET             reduce using rule 95 (checa_void -> .)
    RBRACKET        reduce using rule 95 (checa_void -> .)

    checa_void                     shift and go to state 249

state 241

    (57) mas_argumentos -> COMMA ExpI resuelve_argumentos . mas_argumentos
    (57) mas_argumentos -> . COMMA ExpI resuelve_argumentos mas_argumentos
    (58) mas_argumentos -> .

    COMMA           shift and go to state 213
    RPAREN          reduce using rule 58 (mas_argumentos -> .)

    mas_argumentos                 shift and go to state 250

state 242

    (127) Position -> TUR POINT POS LPAREN ExpI COMMA ExpI RPAREN SEMICOLON . crea_cuadruplo_pos
    (128) crea_cuadruplo_pos -> .

    IF              reduce using rule 128 (crea_cuadruplo_pos -> .)
    RETURN          reduce using rule 128 (crea_cuadruplo_pos -> .)
    VAR_ID          reduce using rule 128 (crea_cuadruplo_pos -> .)
    PRINT           reduce using rule 128 (crea_cuadruplo_pos -> .)
    FOR             reduce using rule 128 (crea_cuadruplo_pos -> .)
    WHILE           reduce using rule 128 (crea_cuadruplo_pos -> .)
    DO              reduce using rule 128 (crea_cuadruplo_pos -> .)
    TUR             reduce using rule 128 (crea_cuadruplo_pos -> .)
    RET             reduce using rule 128 (crea_cuadruplo_pos -> .)
    RBRACKET        reduce using rule 128 (crea_cuadruplo_pos -> .)

    crea_cuadruplo_pos             shift and go to state 251

state 243

    (102) DoWhile -> DO LBRACKET reg_brack RBRACKET WHILE LPAREN ExpI RPAREN SEMICOLON .

    IF              reduce using rule 102 (DoWhile -> DO LBRACKET reg_brack RBRACKET WHILE LPAREN ExpI RPAREN SEMICOLON .)
    RETURN          reduce using rule 102 (DoWhile -> DO LBRACKET reg_brack RBRACKET WHILE LPAREN ExpI RPAREN SEMICOLON .)
    VAR_ID          reduce using rule 102 (DoWhile -> DO LBRACKET reg_brack RBRACKET WHILE LPAREN ExpI RPAREN SEMICOLON .)
    PRINT           reduce using rule 102 (DoWhile -> DO LBRACKET reg_brack RBRACKET WHILE LPAREN ExpI RPAREN SEMICOLON .)
    FOR             reduce using rule 102 (DoWhile -> DO LBRACKET reg_brack RBRACKET WHILE LPAREN ExpI RPAREN SEMICOLON .)
    WHILE           reduce using rule 102 (DoWhile -> DO LBRACKET reg_brack RBRACKET WHILE LPAREN ExpI RPAREN SEMICOLON .)
    DO              reduce using rule 102 (DoWhile -> DO LBRACKET reg_brack RBRACKET WHILE LPAREN ExpI RPAREN SEMICOLON .)
    TUR             reduce using rule 102 (DoWhile -> DO LBRACKET reg_brack RBRACKET WHILE LPAREN ExpI RPAREN SEMICOLON .)
    RET             reduce using rule 102 (DoWhile -> DO LBRACKET reg_brack RBRACKET WHILE LPAREN ExpI RPAREN SEMICOLON .)
    RBRACKET        reduce using rule 102 (DoWhile -> DO LBRACKET reg_brack RBRACKET WHILE LPAREN ExpI RPAREN SEMICOLON .)


state 244

    (53) llama_funcion -> VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion . guarda_resultado_funcion
    (61) guarda_resultado_funcion -> .

    MULT            reduce using rule 61 (guarda_resultado_funcion -> .)
    DIV             reduce using rule 61 (guarda_resultado_funcion -> .)
    PLUS            reduce using rule 61 (guarda_resultado_funcion -> .)
    MINUS           reduce using rule 61 (guarda_resultado_funcion -> .)
    LT              reduce using rule 61 (guarda_resultado_funcion -> .)
    GT              reduce using rule 61 (guarda_resultado_funcion -> .)
    NE              reduce using rule 61 (guarda_resultado_funcion -> .)
    LE              reduce using rule 61 (guarda_resultado_funcion -> .)
    GE              reduce using rule 61 (guarda_resultado_funcion -> .)
    EQ              reduce using rule 61 (guarda_resultado_funcion -> .)
    SEMICOLON       reduce using rule 61 (guarda_resultado_funcion -> .)
    RPAREN          reduce using rule 61 (guarda_resultado_funcion -> .)
    COMMA           reduce using rule 61 (guarda_resultado_funcion -> .)
    SRBRACKET       reduce using rule 61 (guarda_resultado_funcion -> .)

    guarda_resultado_funcion       shift and go to state 252

state 245

    (103) For -> FOR LPAREN VAR_ID ASSIGN ExpI SEMICOLON ExpI SEMICOLON VAR_ID . Exp_ciclo RPAREN LBRACKET reg_brack RBRACKET
    (104) Exp_ciclo -> . PLUS VAR_INT
    (105) Exp_ciclo -> . MINUS VAR_INT
    (106) Exp_ciclo -> . MULT VAR_INT
    (107) Exp_ciclo -> . DIV VAR_INT
    (108) Exp_ciclo -> . PLUSPLUS
    (109) Exp_ciclo -> . MINUSMINUS

    PLUS            shift and go to state 257
    MINUS           shift and go to state 255
    MULT            shift and go to state 259
    DIV             shift and go to state 256
    PLUSPLUS        shift and go to state 253
    MINUSMINUS      shift and go to state 254

    Exp_ciclo                      shift and go to state 258

state 246

    (99) While -> WHILE guarda_numero_cuadruplo LPAREN ExpI RPAREN crea_GOTOF LBRACKET reg_brack RBRACKET . regresa_inicio_while
    (101) regresa_inicio_while -> .

    IF              reduce using rule 101 (regresa_inicio_while -> .)
    RETURN          reduce using rule 101 (regresa_inicio_while -> .)
    VAR_ID          reduce using rule 101 (regresa_inicio_while -> .)
    PRINT           reduce using rule 101 (regresa_inicio_while -> .)
    FOR             reduce using rule 101 (regresa_inicio_while -> .)
    WHILE           reduce using rule 101 (regresa_inicio_while -> .)
    DO              reduce using rule 101 (regresa_inicio_while -> .)
    TUR             reduce using rule 101 (regresa_inicio_while -> .)
    RET             reduce using rule 101 (regresa_inicio_while -> .)
    RBRACKET        reduce using rule 101 (regresa_inicio_while -> .)

    regresa_inicio_while           shift and go to state 260

state 247

    (86) pos_else -> ELSE crea_else_cuadruplo . LBRACKET reg_brack RBRACKET

    LBRACKET        shift and go to state 261


state 248

    (83) Condicion -> IF LPAREN ExpI RPAREN crea_GOTOF LBRACKET reg_brack RBRACKET pos_else llena_cuadruplo_if .

    IF              reduce using rule 83 (Condicion -> IF LPAREN ExpI RPAREN crea_GOTOF LBRACKET reg_brack RBRACKET pos_else llena_cuadruplo_if .)
    RETURN          reduce using rule 83 (Condicion -> IF LPAREN ExpI RPAREN crea_GOTOF LBRACKET reg_brack RBRACKET pos_else llena_cuadruplo_if .)
    VAR_ID          reduce using rule 83 (Condicion -> IF LPAREN ExpI RPAREN crea_GOTOF LBRACKET reg_brack RBRACKET pos_else llena_cuadruplo_if .)
    PRINT           reduce using rule 83 (Condicion -> IF LPAREN ExpI RPAREN crea_GOTOF LBRACKET reg_brack RBRACKET pos_else llena_cuadruplo_if .)
    FOR             reduce using rule 83 (Condicion -> IF LPAREN ExpI RPAREN crea_GOTOF LBRACKET reg_brack RBRACKET pos_else llena_cuadruplo_if .)
    WHILE           reduce using rule 83 (Condicion -> IF LPAREN ExpI RPAREN crea_GOTOF LBRACKET reg_brack RBRACKET pos_else llena_cuadruplo_if .)
    DO              reduce using rule 83 (Condicion -> IF LPAREN ExpI RPAREN crea_GOTOF LBRACKET reg_brack RBRACKET pos_else llena_cuadruplo_if .)
    TUR             reduce using rule 83 (Condicion -> IF LPAREN ExpI RPAREN crea_GOTOF LBRACKET reg_brack RBRACKET pos_else llena_cuadruplo_if .)
    RBRACKET        reduce using rule 83 (Condicion -> IF LPAREN ExpI RPAREN crea_GOTOF LBRACKET reg_brack RBRACKET pos_else llena_cuadruplo_if .)
    RET             reduce using rule 83 (Condicion -> IF LPAREN ExpI RPAREN crea_GOTOF LBRACKET reg_brack RBRACKET pos_else llena_cuadruplo_if .)


state 249

    (94) Llamada_Func -> VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion SEMICOLON checa_void .

    IF              reduce using rule 94 (Llamada_Func -> VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion SEMICOLON checa_void .)
    RETURN          reduce using rule 94 (Llamada_Func -> VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion SEMICOLON checa_void .)
    VAR_ID          reduce using rule 94 (Llamada_Func -> VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion SEMICOLON checa_void .)
    PRINT           reduce using rule 94 (Llamada_Func -> VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion SEMICOLON checa_void .)
    FOR             reduce using rule 94 (Llamada_Func -> VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion SEMICOLON checa_void .)
    WHILE           reduce using rule 94 (Llamada_Func -> VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion SEMICOLON checa_void .)
    DO              reduce using rule 94 (Llamada_Func -> VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion SEMICOLON checa_void .)
    TUR             reduce using rule 94 (Llamada_Func -> VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion SEMICOLON checa_void .)
    RBRACKET        reduce using rule 94 (Llamada_Func -> VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion SEMICOLON checa_void .)
    RET             reduce using rule 94 (Llamada_Func -> VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion SEMICOLON checa_void .)


state 250

    (57) mas_argumentos -> COMMA ExpI resuelve_argumentos mas_argumentos .

    RPAREN          reduce using rule 57 (mas_argumentos -> COMMA ExpI resuelve_argumentos mas_argumentos .)


state 251

    (127) Position -> TUR POINT POS LPAREN ExpI COMMA ExpI RPAREN SEMICOLON crea_cuadruplo_pos .

    IF              reduce using rule 127 (Position -> TUR POINT POS LPAREN ExpI COMMA ExpI RPAREN SEMICOLON crea_cuadruplo_pos .)
    RETURN          reduce using rule 127 (Position -> TUR POINT POS LPAREN ExpI COMMA ExpI RPAREN SEMICOLON crea_cuadruplo_pos .)
    VAR_ID          reduce using rule 127 (Position -> TUR POINT POS LPAREN ExpI COMMA ExpI RPAREN SEMICOLON crea_cuadruplo_pos .)
    PRINT           reduce using rule 127 (Position -> TUR POINT POS LPAREN ExpI COMMA ExpI RPAREN SEMICOLON crea_cuadruplo_pos .)
    FOR             reduce using rule 127 (Position -> TUR POINT POS LPAREN ExpI COMMA ExpI RPAREN SEMICOLON crea_cuadruplo_pos .)
    WHILE           reduce using rule 127 (Position -> TUR POINT POS LPAREN ExpI COMMA ExpI RPAREN SEMICOLON crea_cuadruplo_pos .)
    DO              reduce using rule 127 (Position -> TUR POINT POS LPAREN ExpI COMMA ExpI RPAREN SEMICOLON crea_cuadruplo_pos .)
    TUR             reduce using rule 127 (Position -> TUR POINT POS LPAREN ExpI COMMA ExpI RPAREN SEMICOLON crea_cuadruplo_pos .)
    RET             reduce using rule 127 (Position -> TUR POINT POS LPAREN ExpI COMMA ExpI RPAREN SEMICOLON crea_cuadruplo_pos .)
    RBRACKET        reduce using rule 127 (Position -> TUR POINT POS LPAREN ExpI COMMA ExpI RPAREN SEMICOLON crea_cuadruplo_pos .)


state 252

    (53) llama_funcion -> VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion guarda_resultado_funcion .

    MULT            reduce using rule 53 (llama_funcion -> VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion guarda_resultado_funcion .)
    DIV             reduce using rule 53 (llama_funcion -> VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion guarda_resultado_funcion .)
    PLUS            reduce using rule 53 (llama_funcion -> VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion guarda_resultado_funcion .)
    MINUS           reduce using rule 53 (llama_funcion -> VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion guarda_resultado_funcion .)
    LT              reduce using rule 53 (llama_funcion -> VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion guarda_resultado_funcion .)
    GT              reduce using rule 53 (llama_funcion -> VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion guarda_resultado_funcion .)
    NE              reduce using rule 53 (llama_funcion -> VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion guarda_resultado_funcion .)
    LE              reduce using rule 53 (llama_funcion -> VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion guarda_resultado_funcion .)
    GE              reduce using rule 53 (llama_funcion -> VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion guarda_resultado_funcion .)
    EQ              reduce using rule 53 (llama_funcion -> VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion guarda_resultado_funcion .)
    RPAREN          reduce using rule 53 (llama_funcion -> VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion guarda_resultado_funcion .)
    COMMA           reduce using rule 53 (llama_funcion -> VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion guarda_resultado_funcion .)
    SEMICOLON       reduce using rule 53 (llama_funcion -> VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion guarda_resultado_funcion .)
    SRBRACKET       reduce using rule 53 (llama_funcion -> VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion guarda_resultado_funcion .)


state 253

    (108) Exp_ciclo -> PLUSPLUS .

    RPAREN          reduce using rule 108 (Exp_ciclo -> PLUSPLUS .)


state 254

    (109) Exp_ciclo -> MINUSMINUS .

    RPAREN          reduce using rule 109 (Exp_ciclo -> MINUSMINUS .)


state 255

    (105) Exp_ciclo -> MINUS . VAR_INT

    VAR_INT         shift and go to state 262


state 256

    (107) Exp_ciclo -> DIV . VAR_INT

    VAR_INT         shift and go to state 263


state 257

    (104) Exp_ciclo -> PLUS . VAR_INT

    VAR_INT         shift and go to state 264


state 258

    (103) For -> FOR LPAREN VAR_ID ASSIGN ExpI SEMICOLON ExpI SEMICOLON VAR_ID Exp_ciclo . RPAREN LBRACKET reg_brack RBRACKET

    RPAREN          shift and go to state 265


state 259

    (106) Exp_ciclo -> MULT . VAR_INT

    VAR_INT         shift and go to state 266


state 260

    (99) While -> WHILE guarda_numero_cuadruplo LPAREN ExpI RPAREN crea_GOTOF LBRACKET reg_brack RBRACKET regresa_inicio_while .

    IF              reduce using rule 99 (While -> WHILE guarda_numero_cuadruplo LPAREN ExpI RPAREN crea_GOTOF LBRACKET reg_brack RBRACKET regresa_inicio_while .)
    RETURN          reduce using rule 99 (While -> WHILE guarda_numero_cuadruplo LPAREN ExpI RPAREN crea_GOTOF LBRACKET reg_brack RBRACKET regresa_inicio_while .)
    VAR_ID          reduce using rule 99 (While -> WHILE guarda_numero_cuadruplo LPAREN ExpI RPAREN crea_GOTOF LBRACKET reg_brack RBRACKET regresa_inicio_while .)
    PRINT           reduce using rule 99 (While -> WHILE guarda_numero_cuadruplo LPAREN ExpI RPAREN crea_GOTOF LBRACKET reg_brack RBRACKET regresa_inicio_while .)
    FOR             reduce using rule 99 (While -> WHILE guarda_numero_cuadruplo LPAREN ExpI RPAREN crea_GOTOF LBRACKET reg_brack RBRACKET regresa_inicio_while .)
    WHILE           reduce using rule 99 (While -> WHILE guarda_numero_cuadruplo LPAREN ExpI RPAREN crea_GOTOF LBRACKET reg_brack RBRACKET regresa_inicio_while .)
    DO              reduce using rule 99 (While -> WHILE guarda_numero_cuadruplo LPAREN ExpI RPAREN crea_GOTOF LBRACKET reg_brack RBRACKET regresa_inicio_while .)
    TUR             reduce using rule 99 (While -> WHILE guarda_numero_cuadruplo LPAREN ExpI RPAREN crea_GOTOF LBRACKET reg_brack RBRACKET regresa_inicio_while .)
    RBRACKET        reduce using rule 99 (While -> WHILE guarda_numero_cuadruplo LPAREN ExpI RPAREN crea_GOTOF LBRACKET reg_brack RBRACKET regresa_inicio_while .)
    RET             reduce using rule 99 (While -> WHILE guarda_numero_cuadruplo LPAREN ExpI RPAREN crea_GOTOF LBRACKET reg_brack RBRACKET regresa_inicio_while .)


state 261

    (86) pos_else -> ELSE crea_else_cuadruplo LBRACKET . reg_brack RBRACKET
    (74) reg_brack -> . Estatutos reg_brack
    (75) reg_brack -> .
    (76) Estatutos -> . Condicion
    (77) Estatutos -> . Ciclo
    (78) Estatutos -> . Return
    (79) Estatutos -> . Asignacion
    (80) Estatutos -> . Print
    (81) Estatutos -> . Llamada_Func
    (82) Estatutos -> . Turtle
    (83) Condicion -> . IF LPAREN ExpI RPAREN crea_GOTOF LBRACKET reg_brack RBRACKET pos_else llena_cuadruplo_if
    (96) Ciclo -> . For
    (97) Ciclo -> . While
    (98) Ciclo -> . DoWhile
    (89) Return -> . RETURN ExpI SEMICOLON resuelve_return
    (14) Asignacion -> . VAR_ID push_var_PilaOperandos ASSIGN push_operador_PilaOperadores ExpI SEMICOLON resuelve_asignacion
    (91) Print -> . PRINT LPAREN VAR_STRING RPAREN SEMICOLON
    (92) Print -> . PRINT LPAREN ExpI RPAREN SEMICOLON crea_print
    (94) Llamada_Func -> . VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion SEMICOLON checa_void
    (112) Turtle -> . Forward
    (113) Turtle -> . Right
    (114) Turtle -> . Left
    (115) Turtle -> . Circle
    (116) Turtle -> . Position
    (117) Turtle -> . IniciaTurtle
    (118) Turtle -> . TerminaTurtle
    (103) For -> . FOR LPAREN VAR_ID ASSIGN ExpI SEMICOLON ExpI SEMICOLON VAR_ID Exp_ciclo RPAREN LBRACKET reg_brack RBRACKET
    (99) While -> . WHILE guarda_numero_cuadruplo LPAREN ExpI RPAREN crea_GOTOF LBRACKET reg_brack RBRACKET regresa_inicio_while
    (102) DoWhile -> . DO LBRACKET reg_brack RBRACKET WHILE LPAREN ExpI RPAREN SEMICOLON
    (119) Forward -> . TUR POINT FORWARD LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_forward
    (121) Right -> . TUR POINT RIGHT LPAREN ExpI RPAREN SEMICOLON crea_quadruplo_right
    (123) Left -> . TUR POINT LEFT LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_left
    (125) Circle -> . TUR POINT CIRCLE LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_circle
    (127) Position -> . TUR POINT POS LPAREN ExpI COMMA ExpI RPAREN SEMICOLON crea_cuadruplo_pos
    (129) IniciaTurtle -> . TUR POINT TURTLE LPAREN RPAREN SEMICOLON crea_cuadruplo_inicia
    (131) TerminaTurtle -> . TUR POINT FINISH LPAREN RPAREN SEMICOLON crea_cuadruplo_termina

    RBRACKET        reduce using rule 75 (reg_brack -> .)
    IF              shift and go to state 48
    RETURN          shift and go to state 62
    VAR_ID          shift and go to state 49
    PRINT           shift and go to state 56
    FOR             shift and go to state 67
    WHILE           shift and go to state 69
    DO              shift and go to state 61
    TUR             shift and go to state 58

    Turtle                         shift and go to state 46
    reg_brack                      shift and go to state 267
    For                            shift and go to state 57
    Asignacion                     shift and go to state 51
    Position                       shift and go to state 66
    While                          shift and go to state 52
    Estatutos                      shift and go to state 53
    Right                          shift and go to state 68
    IniciaTurtle                   shift and go to state 54
    Llamada_Func                   shift and go to state 71
    DoWhile                        shift and go to state 55
    Return                         shift and go to state 50
    Left                           shift and go to state 59
    Circle                         shift and go to state 60
    Forward                        shift and go to state 63
    Print                          shift and go to state 64
    Condicion                      shift and go to state 65
    TerminaTurtle                  shift and go to state 72
    Ciclo                          shift and go to state 70

state 262

    (105) Exp_ciclo -> MINUS VAR_INT .

    RPAREN          reduce using rule 105 (Exp_ciclo -> MINUS VAR_INT .)


state 263

    (107) Exp_ciclo -> DIV VAR_INT .

    RPAREN          reduce using rule 107 (Exp_ciclo -> DIV VAR_INT .)


state 264

    (104) Exp_ciclo -> PLUS VAR_INT .

    RPAREN          reduce using rule 104 (Exp_ciclo -> PLUS VAR_INT .)


state 265

    (103) For -> FOR LPAREN VAR_ID ASSIGN ExpI SEMICOLON ExpI SEMICOLON VAR_ID Exp_ciclo RPAREN . LBRACKET reg_brack RBRACKET

    LBRACKET        shift and go to state 268


state 266

    (106) Exp_ciclo -> MULT VAR_INT .

    RPAREN          reduce using rule 106 (Exp_ciclo -> MULT VAR_INT .)


state 267

    (86) pos_else -> ELSE crea_else_cuadruplo LBRACKET reg_brack . RBRACKET

    RBRACKET        shift and go to state 269


state 268

    (103) For -> FOR LPAREN VAR_ID ASSIGN ExpI SEMICOLON ExpI SEMICOLON VAR_ID Exp_ciclo RPAREN LBRACKET . reg_brack RBRACKET
    (74) reg_brack -> . Estatutos reg_brack
    (75) reg_brack -> .
    (76) Estatutos -> . Condicion
    (77) Estatutos -> . Ciclo
    (78) Estatutos -> . Return
    (79) Estatutos -> . Asignacion
    (80) Estatutos -> . Print
    (81) Estatutos -> . Llamada_Func
    (82) Estatutos -> . Turtle
    (83) Condicion -> . IF LPAREN ExpI RPAREN crea_GOTOF LBRACKET reg_brack RBRACKET pos_else llena_cuadruplo_if
    (96) Ciclo -> . For
    (97) Ciclo -> . While
    (98) Ciclo -> . DoWhile
    (89) Return -> . RETURN ExpI SEMICOLON resuelve_return
    (14) Asignacion -> . VAR_ID push_var_PilaOperandos ASSIGN push_operador_PilaOperadores ExpI SEMICOLON resuelve_asignacion
    (91) Print -> . PRINT LPAREN VAR_STRING RPAREN SEMICOLON
    (92) Print -> . PRINT LPAREN ExpI RPAREN SEMICOLON crea_print
    (94) Llamada_Func -> . VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion SEMICOLON checa_void
    (112) Turtle -> . Forward
    (113) Turtle -> . Right
    (114) Turtle -> . Left
    (115) Turtle -> . Circle
    (116) Turtle -> . Position
    (117) Turtle -> . IniciaTurtle
    (118) Turtle -> . TerminaTurtle
    (103) For -> . FOR LPAREN VAR_ID ASSIGN ExpI SEMICOLON ExpI SEMICOLON VAR_ID Exp_ciclo RPAREN LBRACKET reg_brack RBRACKET
    (99) While -> . WHILE guarda_numero_cuadruplo LPAREN ExpI RPAREN crea_GOTOF LBRACKET reg_brack RBRACKET regresa_inicio_while
    (102) DoWhile -> . DO LBRACKET reg_brack RBRACKET WHILE LPAREN ExpI RPAREN SEMICOLON
    (119) Forward -> . TUR POINT FORWARD LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_forward
    (121) Right -> . TUR POINT RIGHT LPAREN ExpI RPAREN SEMICOLON crea_quadruplo_right
    (123) Left -> . TUR POINT LEFT LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_left
    (125) Circle -> . TUR POINT CIRCLE LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_circle
    (127) Position -> . TUR POINT POS LPAREN ExpI COMMA ExpI RPAREN SEMICOLON crea_cuadruplo_pos
    (129) IniciaTurtle -> . TUR POINT TURTLE LPAREN RPAREN SEMICOLON crea_cuadruplo_inicia
    (131) TerminaTurtle -> . TUR POINT FINISH LPAREN RPAREN SEMICOLON crea_cuadruplo_termina

    RBRACKET        reduce using rule 75 (reg_brack -> .)
    IF              shift and go to state 48
    RETURN          shift and go to state 62
    VAR_ID          shift and go to state 49
    PRINT           shift and go to state 56
    FOR             shift and go to state 67
    WHILE           shift and go to state 69
    DO              shift and go to state 61
    TUR             shift and go to state 58

    Turtle                         shift and go to state 46
    reg_brack                      shift and go to state 270
    For                            shift and go to state 57
    Asignacion                     shift and go to state 51
    Position                       shift and go to state 66
    While                          shift and go to state 52
    Estatutos                      shift and go to state 53
    Right                          shift and go to state 68
    IniciaTurtle                   shift and go to state 54
    Llamada_Func                   shift and go to state 71
    DoWhile                        shift and go to state 55
    Return                         shift and go to state 50
    Left                           shift and go to state 59
    Circle                         shift and go to state 60
    Forward                        shift and go to state 63
    Print                          shift and go to state 64
    Condicion                      shift and go to state 65
    TerminaTurtle                  shift and go to state 72
    Ciclo                          shift and go to state 70

state 269

    (86) pos_else -> ELSE crea_else_cuadruplo LBRACKET reg_brack RBRACKET .

    IF              reduce using rule 86 (pos_else -> ELSE crea_else_cuadruplo LBRACKET reg_brack RBRACKET .)
    RETURN          reduce using rule 86 (pos_else -> ELSE crea_else_cuadruplo LBRACKET reg_brack RBRACKET .)
    VAR_ID          reduce using rule 86 (pos_else -> ELSE crea_else_cuadruplo LBRACKET reg_brack RBRACKET .)
    PRINT           reduce using rule 86 (pos_else -> ELSE crea_else_cuadruplo LBRACKET reg_brack RBRACKET .)
    FOR             reduce using rule 86 (pos_else -> ELSE crea_else_cuadruplo LBRACKET reg_brack RBRACKET .)
    WHILE           reduce using rule 86 (pos_else -> ELSE crea_else_cuadruplo LBRACKET reg_brack RBRACKET .)
    DO              reduce using rule 86 (pos_else -> ELSE crea_else_cuadruplo LBRACKET reg_brack RBRACKET .)
    TUR             reduce using rule 86 (pos_else -> ELSE crea_else_cuadruplo LBRACKET reg_brack RBRACKET .)
    RET             reduce using rule 86 (pos_else -> ELSE crea_else_cuadruplo LBRACKET reg_brack RBRACKET .)
    RBRACKET        reduce using rule 86 (pos_else -> ELSE crea_else_cuadruplo LBRACKET reg_brack RBRACKET .)


state 270

    (103) For -> FOR LPAREN VAR_ID ASSIGN ExpI SEMICOLON ExpI SEMICOLON VAR_ID Exp_ciclo RPAREN LBRACKET reg_brack . RBRACKET

    RBRACKET        shift and go to state 271


state 271

    (103) For -> FOR LPAREN VAR_ID ASSIGN ExpI SEMICOLON ExpI SEMICOLON VAR_ID Exp_ciclo RPAREN LBRACKET reg_brack RBRACKET .

    IF              reduce using rule 103 (For -> FOR LPAREN VAR_ID ASSIGN ExpI SEMICOLON ExpI SEMICOLON VAR_ID Exp_ciclo RPAREN LBRACKET reg_brack RBRACKET .)
    RETURN          reduce using rule 103 (For -> FOR LPAREN VAR_ID ASSIGN ExpI SEMICOLON ExpI SEMICOLON VAR_ID Exp_ciclo RPAREN LBRACKET reg_brack RBRACKET .)
    VAR_ID          reduce using rule 103 (For -> FOR LPAREN VAR_ID ASSIGN ExpI SEMICOLON ExpI SEMICOLON VAR_ID Exp_ciclo RPAREN LBRACKET reg_brack RBRACKET .)
    PRINT           reduce using rule 103 (For -> FOR LPAREN VAR_ID ASSIGN ExpI SEMICOLON ExpI SEMICOLON VAR_ID Exp_ciclo RPAREN LBRACKET reg_brack RBRACKET .)
    FOR             reduce using rule 103 (For -> FOR LPAREN VAR_ID ASSIGN ExpI SEMICOLON ExpI SEMICOLON VAR_ID Exp_ciclo RPAREN LBRACKET reg_brack RBRACKET .)
    WHILE           reduce using rule 103 (For -> FOR LPAREN VAR_ID ASSIGN ExpI SEMICOLON ExpI SEMICOLON VAR_ID Exp_ciclo RPAREN LBRACKET reg_brack RBRACKET .)
    DO              reduce using rule 103 (For -> FOR LPAREN VAR_ID ASSIGN ExpI SEMICOLON ExpI SEMICOLON VAR_ID Exp_ciclo RPAREN LBRACKET reg_brack RBRACKET .)
    TUR             reduce using rule 103 (For -> FOR LPAREN VAR_ID ASSIGN ExpI SEMICOLON ExpI SEMICOLON VAR_ID Exp_ciclo RPAREN LBRACKET reg_brack RBRACKET .)
    RBRACKET        reduce using rule 103 (For -> FOR LPAREN VAR_ID ASSIGN ExpI SEMICOLON ExpI SEMICOLON VAR_ID Exp_ciclo RPAREN LBRACKET reg_brack RBRACKET .)
    RET             reduce using rule 103 (For -> FOR LPAREN VAR_ID ASSIGN ExpI SEMICOLON ExpI SEMICOLON VAR_ID Exp_ciclo RPAREN LBRACKET reg_brack RBRACKET .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for RPAREN in state 106 resolved as shift
