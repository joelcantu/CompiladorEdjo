Created by PLY version 3.10 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> START EDJO VAR_ID crea_primer_cuadruplo crea_funcion_global SEMICOLON Vars funciones Main
Rule 2     crea_primer_cuadruplo -> <empty>
Rule 3     crea_funcion_global -> <empty>
Rule 4     Vars -> Tipo VAR_ID mas_vars agrega_var_funcion SEMICOLON Vars
Rule 5     Vars -> Tipo VAR_ID SLBRACKET VAR_INT push_int_PilaOperandos SRBRACKET agrega_limites_arreglo agrega_arr_funcion SEMICOLON Vars
Rule 6     Vars -> <empty>
Rule 7     agrega_limites_arreglo -> <empty>
Rule 8     agrega_arr_funcion -> <empty>
Rule 9     Tipo -> INT
Rule 10    Tipo -> DECIMAL
Rule 11    Tipo -> STRING
Rule 12    Tipo -> CHAR
Rule 13    Tipo -> BOOL
Rule 14    mas_vars -> COMMA VAR_ID mas_vars
Rule 15    mas_vars -> <empty>
Rule 16    agrega_var_funcion -> <empty>
Rule 17    Asignacion -> VAR_ID push_var_PilaOperandos ASSIGN push_operador_PilaOperadores ExpI SEMICOLON resuelve_asignacion
Rule 18    push_var_PilaOperandos -> <empty>
Rule 19    push_operador_PilaOperadores -> <empty>
Rule 20    resuelve_asignacion -> <empty>
Rule 21    ExpI -> ExpK resuelve_operadores_relacionales
Rule 22    ExpI -> ExpK Operandos push_operador_PilaOperadores ExpK resuelve_operadores_relacionales
Rule 23    Operandos -> LT
Rule 24    Operandos -> GT
Rule 25    Operandos -> NE
Rule 26    Operandos -> LE
Rule 27    Operandos -> GE
Rule 28    Operandos -> EQ
Rule 29    resuelve_operadores_relacionales -> <empty>
Rule 30    ExpK -> ExpT resuelve_termino
Rule 31    ExpK -> ExpT resuelve_termino pos_SUMRES push_operador_PilaOperadores ExpK
Rule 32    resuelve_termino -> <empty>
Rule 33    pos_SUMRES -> PLUS
Rule 34    pos_SUMRES -> MINUS
Rule 35    ExpT -> ExpF resuelve_factor
Rule 36    ExpT -> ExpF resuelve_factor pos_MULTDIV push_operador_PilaOperadores ExpT
Rule 37    resuelve_factor -> <empty>
Rule 38    pos_MULTDIV -> MULT
Rule 39    pos_MULTDIV -> DIV
Rule 40    ExpF -> VAR_CTE
Rule 41    ExpF -> LPAREN agrega_falso ExpI RPAREN quita_falso
Rule 42    ExpF -> VAR_ID push_var_PilaOperandos pos_arreglo
Rule 43    ExpF -> llama_funcion
Rule 44    VAR_CTE -> VAR_INT push_int_PilaOperandos
Rule 45    VAR_CTE -> VAR_DECIMAL push_decimal_PilaOperandos
Rule 46    VAR_CTE -> VAR_STRING push_string_PilaOperandos
Rule 47    VAR_CTE -> VAR_BOOL push_bool_PilaOperandos
Rule 48    VAR_BOOL -> FALSE
Rule 49    VAR_BOOL -> TRUE
Rule 50    push_int_PilaOperandos -> <empty>
Rule 51    push_decimal_PilaOperandos -> <empty>
Rule 52    push_string_PilaOperandos -> <empty>
Rule 53    push_bool_PilaOperandos -> <empty>
Rule 54    agrega_falso -> <empty>
Rule 55    quita_falso -> <empty>
Rule 56    llama_funcion -> VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion guarda_resultado_funcion
Rule 57    checa_funcion_si_existe -> <empty>
Rule 58    argumentos -> ExpI resuelve_argumentos mas_argumentos
Rule 59    argumentos -> <empty>
Rule 60    mas_argumentos -> COMMA ExpI resuelve_argumentos mas_argumentos
Rule 61    mas_argumentos -> <empty>
Rule 62    resuelve_argumentos -> <empty>
Rule 63    resuelve_llamada_funcion -> <empty>
Rule 64    guarda_resultado_funcion -> <empty>
Rule 65    pos_arreglo -> SLBRACKET ExpI SRBRACKET
Rule 66    pos_arreglo -> <empty>
Rule 67    funciones -> FUNC tipo_funcion VAR_ID LPAREN param RPAREN agrega_funcion LBRACKET Vars reg_brack RBRACKET fin_func_cuad funciones
Rule 68    funciones -> <empty>
Rule 69    tipo_funcion -> VOID
Rule 70    tipo_funcion -> Tipo
Rule 71    param -> Tipo VAR_ID pos_commaf
Rule 72    param -> <empty>
Rule 73    pos_commaf -> COMMA Tipo VAR_ID pos_commaf
Rule 74    pos_commaf -> <empty>
Rule 75    agrega_funcion -> <empty>
Rule 76    fin_func_cuad -> <empty>
Rule 77    reg_brack -> Estatutos reg_brack
Rule 78    reg_brack -> <empty>
Rule 79    Estatutos -> Condicion
Rule 80    Estatutos -> Ciclo
Rule 81    Estatutos -> Return
Rule 82    Estatutos -> Asignacion
Rule 83    Estatutos -> Print
Rule 84    Estatutos -> Llamada_Func
Rule 85    Estatutos -> Turtle
Rule 86    Condicion -> IF LPAREN ExpI RPAREN crea_GOTOF LBRACKET reg_brack RBRACKET pos_else llena_cuadruplo_if
Rule 87    crea_GOTOF -> <empty>
Rule 88    llena_cuadruplo_if -> <empty>
Rule 89    pos_else -> ELSE crea_else_cuadruplo LBRACKET reg_brack RBRACKET
Rule 90    pos_else -> <empty>
Rule 91    crea_else_cuadruplo -> <empty>
Rule 92    Return -> RETURN ExpI SEMICOLON resuelve_return
Rule 93    resuelve_return -> <empty>
Rule 94    Print -> PRINT LPAREN ExpI RPAREN SEMICOLON crea_print
Rule 95    crea_print -> <empty>
Rule 96    Llamada_Func -> VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion SEMICOLON checa_void
Rule 97    checa_void -> <empty>
Rule 98    Ciclo -> For
Rule 99    Ciclo -> While
Rule 100   Ciclo -> DoWhile
Rule 101   While -> WHILE guarda_numero_cuadruplo LPAREN ExpI RPAREN crea_GOTOF LBRACKET reg_brack RBRACKET regresa_inicio_while
Rule 102   guarda_numero_cuadruplo -> <empty>
Rule 103   regresa_inicio_while -> <empty>
Rule 104   DoWhile -> DO guarda_numero_cuadruplo LBRACKET reg_brack RBRACKET WHILE LPAREN ExpI RPAREN SEMICOLON crea_GOTOV
Rule 105   crea_GOTOV -> <empty>
Rule 106   For -> FOR LPAREN VAR_ID ASSIGN ExpI SEMICOLON ExpI SEMICOLON VAR_ID Exp_ciclo RPAREN LBRACKET reg_brack RBRACKET
Rule 107   Exp_ciclo -> PLUS VAR_INT
Rule 108   Exp_ciclo -> MINUS VAR_INT
Rule 109   Exp_ciclo -> MULT VAR_INT
Rule 110   Exp_ciclo -> DIV VAR_INT
Rule 111   Exp_ciclo -> PLUSPLUS
Rule 112   Exp_ciclo -> MINUSMINUS
Rule 113   Main -> MAIN agrega_main_funcion LPAREN RPAREN LBRACKET Vars reg_brack RET ZERO SEMICOLON RBRACKET
Rule 114   agrega_main_funcion -> <empty>
Rule 115   Turtle -> Forward
Rule 116   Turtle -> Right
Rule 117   Turtle -> Left
Rule 118   Turtle -> Circle
Rule 119   Turtle -> Position
Rule 120   Turtle -> IniciaTurtle
Rule 121   Turtle -> TerminaTurtle
Rule 122   Forward -> TUR POINT FORWARD LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_forward
Rule 123   crea_cuadruplo_forward -> <empty>
Rule 124   Right -> TUR POINT RIGHT LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_right
Rule 125   crea_cuadruplo_right -> <empty>
Rule 126   Left -> TUR POINT LEFT LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_left
Rule 127   crea_cuadruplo_left -> <empty>
Rule 128   Circle -> TUR POINT CIRCLE LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_circle
Rule 129   crea_cuadruplo_circle -> <empty>
Rule 130   Position -> TUR POINT POS LPAREN ExpI COMMA ExpI RPAREN SEMICOLON crea_cuadruplo_pos
Rule 131   crea_cuadruplo_pos -> <empty>
Rule 132   IniciaTurtle -> TUR POINT TURTLE LPAREN RPAREN SEMICOLON crea_cuadruplo_inicia
Rule 133   crea_cuadruplo_inicia -> <empty>
Rule 134   TerminaTurtle -> TUR POINT FINISH LPAREN RPAREN SEMICOLON crea_cuadruplo_termina
Rule 135   crea_cuadruplo_termina -> <empty>

Terminals, with rules where they appear

ASSIGN               : 17 106
BOOL                 : 13
CHAR                 : 12
CIRCLE               : 128
COMMA                : 14 60 73 130
DECIMAL              : 10
DIV                  : 39 110
DO                   : 104
EDJO                 : 1
ELSE                 : 89
EQ                   : 28
FALSE                : 48
FINISH               : 134
FOR                  : 106
FORWARD              : 122
FUNC                 : 67
GE                   : 27
GT                   : 24
IF                   : 86
INT                  : 9
LBRACKET             : 67 86 89 101 104 106 113
LE                   : 26
LEFT                 : 126
LPAREN               : 41 56 67 86 94 96 101 104 106 113 122 124 126 128 130 132 134
LT                   : 23
MAIN                 : 113
MINUS                : 34 108
MINUSMINUS           : 112
MULT                 : 38 109
NE                   : 25
PLUS                 : 33 107
PLUSPLUS             : 111
POINT                : 122 124 126 128 130 132 134
POS                  : 130
PRINT                : 94
RBRACKET             : 67 86 89 101 104 106 113
RET                  : 113
RETURN               : 92
RIGHT                : 124
RPAREN               : 41 56 67 86 94 96 101 104 106 113 122 124 126 128 130 132 134
SEMICOLON            : 1 4 5 17 92 94 96 104 106 106 113 122 124 126 128 130 132 134
SLBRACKET            : 5 65
SRBRACKET            : 5 65
START                : 1
STRING               : 11
TRUE                 : 49
TUR                  : 122 124 126 128 130 132 134
TURTLE               : 132
VAR_DECIMAL          : 45
VAR_ID               : 1 4 5 14 17 42 56 67 71 73 96 106 106
VAR_INT              : 5 44 107 108 109 110
VAR_STRING           : 46
VOID                 : 69
WHILE                : 101 104
ZERO                 : 113
error                : 

Nonterminals, with rules where they appear

Asignacion           : 82
Ciclo                : 80
Circle               : 118
Condicion            : 79
DoWhile              : 100
Estatutos            : 77
ExpF                 : 35 36
ExpI                 : 17 41 58 60 65 86 92 94 101 104 106 106 122 124 126 128 130 130
ExpK                 : 21 22 22 31
ExpT                 : 30 31 36
Exp_ciclo            : 106
For                  : 98
Forward              : 115
IniciaTurtle         : 120
Left                 : 117
Llamada_Func         : 84
Main                 : 1
Operandos            : 22
Position             : 119
Print                : 83
Return               : 81
Right                : 116
TerminaTurtle        : 121
Tipo                 : 4 5 70 71 73
Turtle               : 85
VAR_BOOL             : 47
VAR_CTE              : 40
Vars                 : 1 4 5 67 113
While                : 99
agrega_arr_funcion   : 5
agrega_falso         : 41 56 96
agrega_funcion       : 67
agrega_limites_arreglo : 5
agrega_main_funcion  : 113
agrega_var_funcion   : 4
argumentos           : 56 96
checa_funcion_si_existe : 56 96
checa_void           : 96
crea_GOTOF           : 86 101
crea_GOTOV           : 104
crea_cuadruplo_circle : 128
crea_cuadruplo_forward : 122
crea_cuadruplo_inicia : 132
crea_cuadruplo_left  : 126
crea_cuadruplo_pos   : 130
crea_cuadruplo_right : 124
crea_cuadruplo_termina : 134
crea_else_cuadruplo  : 89
crea_funcion_global  : 1
crea_primer_cuadruplo : 1
crea_print           : 94
fin_func_cuad        : 67
funciones            : 1 67
guarda_numero_cuadruplo : 101 104
guarda_resultado_funcion : 56
llama_funcion        : 43
llena_cuadruplo_if   : 86
mas_argumentos       : 58 60
mas_vars             : 4 14
param                : 67
pos_MULTDIV          : 36
pos_SUMRES           : 31
pos_arreglo          : 42
pos_commaf           : 71 73
pos_else             : 86
program              : 0
push_bool_PilaOperandos : 47
push_decimal_PilaOperandos : 45
push_int_PilaOperandos : 5 44
push_operador_PilaOperadores : 17 22 31 36
push_string_PilaOperandos : 46
push_var_PilaOperandos : 17 42
quita_falso          : 41 56 96
reg_brack            : 67 77 86 89 101 104 106 113
regresa_inicio_while : 101
resuelve_argumentos  : 58 60
resuelve_asignacion  : 17
resuelve_factor      : 35 36
resuelve_llamada_funcion : 56 96
resuelve_operadores_relacionales : 21 22
resuelve_return      : 92
resuelve_termino     : 30 31
tipo_funcion         : 67

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . START EDJO VAR_ID crea_primer_cuadruplo crea_funcion_global SEMICOLON Vars funciones Main

    START           shift and go to state 2

    program                        shift and go to state 1

state 1

    (0) S' -> program .



state 2

    (1) program -> START . EDJO VAR_ID crea_primer_cuadruplo crea_funcion_global SEMICOLON Vars funciones Main

    EDJO            shift and go to state 3


state 3

    (1) program -> START EDJO . VAR_ID crea_primer_cuadruplo crea_funcion_global SEMICOLON Vars funciones Main

    VAR_ID          shift and go to state 4


state 4

    (1) program -> START EDJO VAR_ID . crea_primer_cuadruplo crea_funcion_global SEMICOLON Vars funciones Main
    (2) crea_primer_cuadruplo -> .

    SEMICOLON       reduce using rule 2 (crea_primer_cuadruplo -> .)

    crea_primer_cuadruplo          shift and go to state 5

state 5

    (1) program -> START EDJO VAR_ID crea_primer_cuadruplo . crea_funcion_global SEMICOLON Vars funciones Main
    (3) crea_funcion_global -> .

    SEMICOLON       reduce using rule 3 (crea_funcion_global -> .)

    crea_funcion_global            shift and go to state 6

state 6

    (1) program -> START EDJO VAR_ID crea_primer_cuadruplo crea_funcion_global . SEMICOLON Vars funciones Main

    SEMICOLON       shift and go to state 7


state 7

    (1) program -> START EDJO VAR_ID crea_primer_cuadruplo crea_funcion_global SEMICOLON . Vars funciones Main
    (4) Vars -> . Tipo VAR_ID mas_vars agrega_var_funcion SEMICOLON Vars
    (5) Vars -> . Tipo VAR_ID SLBRACKET VAR_INT push_int_PilaOperandos SRBRACKET agrega_limites_arreglo agrega_arr_funcion SEMICOLON Vars
    (6) Vars -> .
    (9) Tipo -> . INT
    (10) Tipo -> . DECIMAL
    (11) Tipo -> . STRING
    (12) Tipo -> . CHAR
    (13) Tipo -> . BOOL

    FUNC            reduce using rule 6 (Vars -> .)
    MAIN            reduce using rule 6 (Vars -> .)
    INT             shift and go to state 10
    DECIMAL         shift and go to state 11
    STRING          shift and go to state 12
    CHAR            shift and go to state 13
    BOOL            shift and go to state 14

    Vars                           shift and go to state 8
    Tipo                           shift and go to state 9

state 8

    (1) program -> START EDJO VAR_ID crea_primer_cuadruplo crea_funcion_global SEMICOLON Vars . funciones Main
    (67) funciones -> . FUNC tipo_funcion VAR_ID LPAREN param RPAREN agrega_funcion LBRACKET Vars reg_brack RBRACKET fin_func_cuad funciones
    (68) funciones -> .

    FUNC            shift and go to state 16
    MAIN            reduce using rule 68 (funciones -> .)

    funciones                      shift and go to state 15

state 9

    (4) Vars -> Tipo . VAR_ID mas_vars agrega_var_funcion SEMICOLON Vars
    (5) Vars -> Tipo . VAR_ID SLBRACKET VAR_INT push_int_PilaOperandos SRBRACKET agrega_limites_arreglo agrega_arr_funcion SEMICOLON Vars

    VAR_ID          shift and go to state 17


state 10

    (9) Tipo -> INT .

    VAR_ID          reduce using rule 9 (Tipo -> INT .)


state 11

    (10) Tipo -> DECIMAL .

    VAR_ID          reduce using rule 10 (Tipo -> DECIMAL .)


state 12

    (11) Tipo -> STRING .

    VAR_ID          reduce using rule 11 (Tipo -> STRING .)


state 13

    (12) Tipo -> CHAR .

    VAR_ID          reduce using rule 12 (Tipo -> CHAR .)


state 14

    (13) Tipo -> BOOL .

    VAR_ID          reduce using rule 13 (Tipo -> BOOL .)


state 15

    (1) program -> START EDJO VAR_ID crea_primer_cuadruplo crea_funcion_global SEMICOLON Vars funciones . Main
    (113) Main -> . MAIN agrega_main_funcion LPAREN RPAREN LBRACKET Vars reg_brack RET ZERO SEMICOLON RBRACKET

    MAIN            shift and go to state 19

    Main                           shift and go to state 18

state 16

    (67) funciones -> FUNC . tipo_funcion VAR_ID LPAREN param RPAREN agrega_funcion LBRACKET Vars reg_brack RBRACKET fin_func_cuad funciones
    (69) tipo_funcion -> . VOID
    (70) tipo_funcion -> . Tipo
    (9) Tipo -> . INT
    (10) Tipo -> . DECIMAL
    (11) Tipo -> . STRING
    (12) Tipo -> . CHAR
    (13) Tipo -> . BOOL

    VOID            shift and go to state 21
    INT             shift and go to state 10
    DECIMAL         shift and go to state 11
    STRING          shift and go to state 12
    CHAR            shift and go to state 13
    BOOL            shift and go to state 14

    tipo_funcion                   shift and go to state 20
    Tipo                           shift and go to state 22

state 17

    (4) Vars -> Tipo VAR_ID . mas_vars agrega_var_funcion SEMICOLON Vars
    (5) Vars -> Tipo VAR_ID . SLBRACKET VAR_INT push_int_PilaOperandos SRBRACKET agrega_limites_arreglo agrega_arr_funcion SEMICOLON Vars
    (14) mas_vars -> . COMMA VAR_ID mas_vars
    (15) mas_vars -> .

    SLBRACKET       shift and go to state 24
    COMMA           shift and go to state 25
    SEMICOLON       reduce using rule 15 (mas_vars -> .)

    mas_vars                       shift and go to state 23

state 18

    (1) program -> START EDJO VAR_ID crea_primer_cuadruplo crea_funcion_global SEMICOLON Vars funciones Main .

    $end            reduce using rule 1 (program -> START EDJO VAR_ID crea_primer_cuadruplo crea_funcion_global SEMICOLON Vars funciones Main .)


state 19

    (113) Main -> MAIN . agrega_main_funcion LPAREN RPAREN LBRACKET Vars reg_brack RET ZERO SEMICOLON RBRACKET
    (114) agrega_main_funcion -> .

    LPAREN          reduce using rule 114 (agrega_main_funcion -> .)

    agrega_main_funcion            shift and go to state 26

state 20

    (67) funciones -> FUNC tipo_funcion . VAR_ID LPAREN param RPAREN agrega_funcion LBRACKET Vars reg_brack RBRACKET fin_func_cuad funciones

    VAR_ID          shift and go to state 27


state 21

    (69) tipo_funcion -> VOID .

    VAR_ID          reduce using rule 69 (tipo_funcion -> VOID .)


state 22

    (70) tipo_funcion -> Tipo .

    VAR_ID          reduce using rule 70 (tipo_funcion -> Tipo .)


state 23

    (4) Vars -> Tipo VAR_ID mas_vars . agrega_var_funcion SEMICOLON Vars
    (16) agrega_var_funcion -> .

    SEMICOLON       reduce using rule 16 (agrega_var_funcion -> .)

    agrega_var_funcion             shift and go to state 28

state 24

    (5) Vars -> Tipo VAR_ID SLBRACKET . VAR_INT push_int_PilaOperandos SRBRACKET agrega_limites_arreglo agrega_arr_funcion SEMICOLON Vars

    VAR_INT         shift and go to state 29


state 25

    (14) mas_vars -> COMMA . VAR_ID mas_vars

    VAR_ID          shift and go to state 30


state 26

    (113) Main -> MAIN agrega_main_funcion . LPAREN RPAREN LBRACKET Vars reg_brack RET ZERO SEMICOLON RBRACKET

    LPAREN          shift and go to state 31


state 27

    (67) funciones -> FUNC tipo_funcion VAR_ID . LPAREN param RPAREN agrega_funcion LBRACKET Vars reg_brack RBRACKET fin_func_cuad funciones

    LPAREN          shift and go to state 32


state 28

    (4) Vars -> Tipo VAR_ID mas_vars agrega_var_funcion . SEMICOLON Vars

    SEMICOLON       shift and go to state 33


state 29

    (5) Vars -> Tipo VAR_ID SLBRACKET VAR_INT . push_int_PilaOperandos SRBRACKET agrega_limites_arreglo agrega_arr_funcion SEMICOLON Vars
    (50) push_int_PilaOperandos -> .

    SRBRACKET       reduce using rule 50 (push_int_PilaOperandos -> .)

    push_int_PilaOperandos         shift and go to state 34

state 30

    (14) mas_vars -> COMMA VAR_ID . mas_vars
    (14) mas_vars -> . COMMA VAR_ID mas_vars
    (15) mas_vars -> .

    COMMA           shift and go to state 25
    SEMICOLON       reduce using rule 15 (mas_vars -> .)

    mas_vars                       shift and go to state 35

state 31

    (113) Main -> MAIN agrega_main_funcion LPAREN . RPAREN LBRACKET Vars reg_brack RET ZERO SEMICOLON RBRACKET

    RPAREN          shift and go to state 36


state 32

    (67) funciones -> FUNC tipo_funcion VAR_ID LPAREN . param RPAREN agrega_funcion LBRACKET Vars reg_brack RBRACKET fin_func_cuad funciones
    (71) param -> . Tipo VAR_ID pos_commaf
    (72) param -> .
    (9) Tipo -> . INT
    (10) Tipo -> . DECIMAL
    (11) Tipo -> . STRING
    (12) Tipo -> . CHAR
    (13) Tipo -> . BOOL

    RPAREN          reduce using rule 72 (param -> .)
    INT             shift and go to state 10
    DECIMAL         shift and go to state 11
    STRING          shift and go to state 12
    CHAR            shift and go to state 13
    BOOL            shift and go to state 14

    param                          shift and go to state 37
    Tipo                           shift and go to state 38

state 33

    (4) Vars -> Tipo VAR_ID mas_vars agrega_var_funcion SEMICOLON . Vars
    (4) Vars -> . Tipo VAR_ID mas_vars agrega_var_funcion SEMICOLON Vars
    (5) Vars -> . Tipo VAR_ID SLBRACKET VAR_INT push_int_PilaOperandos SRBRACKET agrega_limites_arreglo agrega_arr_funcion SEMICOLON Vars
    (6) Vars -> .
    (9) Tipo -> . INT
    (10) Tipo -> . DECIMAL
    (11) Tipo -> . STRING
    (12) Tipo -> . CHAR
    (13) Tipo -> . BOOL

    FUNC            reduce using rule 6 (Vars -> .)
    MAIN            reduce using rule 6 (Vars -> .)
    IF              reduce using rule 6 (Vars -> .)
    RETURN          reduce using rule 6 (Vars -> .)
    VAR_ID          reduce using rule 6 (Vars -> .)
    PRINT           reduce using rule 6 (Vars -> .)
    FOR             reduce using rule 6 (Vars -> .)
    WHILE           reduce using rule 6 (Vars -> .)
    DO              reduce using rule 6 (Vars -> .)
    TUR             reduce using rule 6 (Vars -> .)
    RET             reduce using rule 6 (Vars -> .)
    RBRACKET        reduce using rule 6 (Vars -> .)
    INT             shift and go to state 10
    DECIMAL         shift and go to state 11
    STRING          shift and go to state 12
    CHAR            shift and go to state 13
    BOOL            shift and go to state 14

    Tipo                           shift and go to state 9
    Vars                           shift and go to state 39

state 34

    (5) Vars -> Tipo VAR_ID SLBRACKET VAR_INT push_int_PilaOperandos . SRBRACKET agrega_limites_arreglo agrega_arr_funcion SEMICOLON Vars

    SRBRACKET       shift and go to state 40


state 35

    (14) mas_vars -> COMMA VAR_ID mas_vars .

    SEMICOLON       reduce using rule 14 (mas_vars -> COMMA VAR_ID mas_vars .)


state 36

    (113) Main -> MAIN agrega_main_funcion LPAREN RPAREN . LBRACKET Vars reg_brack RET ZERO SEMICOLON RBRACKET

    LBRACKET        shift and go to state 41


state 37

    (67) funciones -> FUNC tipo_funcion VAR_ID LPAREN param . RPAREN agrega_funcion LBRACKET Vars reg_brack RBRACKET fin_func_cuad funciones

    RPAREN          shift and go to state 42


state 38

    (71) param -> Tipo . VAR_ID pos_commaf

    VAR_ID          shift and go to state 43


state 39

    (4) Vars -> Tipo VAR_ID mas_vars agrega_var_funcion SEMICOLON Vars .

    FUNC            reduce using rule 4 (Vars -> Tipo VAR_ID mas_vars agrega_var_funcion SEMICOLON Vars .)
    MAIN            reduce using rule 4 (Vars -> Tipo VAR_ID mas_vars agrega_var_funcion SEMICOLON Vars .)
    IF              reduce using rule 4 (Vars -> Tipo VAR_ID mas_vars agrega_var_funcion SEMICOLON Vars .)
    RETURN          reduce using rule 4 (Vars -> Tipo VAR_ID mas_vars agrega_var_funcion SEMICOLON Vars .)
    VAR_ID          reduce using rule 4 (Vars -> Tipo VAR_ID mas_vars agrega_var_funcion SEMICOLON Vars .)
    PRINT           reduce using rule 4 (Vars -> Tipo VAR_ID mas_vars agrega_var_funcion SEMICOLON Vars .)
    FOR             reduce using rule 4 (Vars -> Tipo VAR_ID mas_vars agrega_var_funcion SEMICOLON Vars .)
    WHILE           reduce using rule 4 (Vars -> Tipo VAR_ID mas_vars agrega_var_funcion SEMICOLON Vars .)
    DO              reduce using rule 4 (Vars -> Tipo VAR_ID mas_vars agrega_var_funcion SEMICOLON Vars .)
    TUR             reduce using rule 4 (Vars -> Tipo VAR_ID mas_vars agrega_var_funcion SEMICOLON Vars .)
    RET             reduce using rule 4 (Vars -> Tipo VAR_ID mas_vars agrega_var_funcion SEMICOLON Vars .)
    RBRACKET        reduce using rule 4 (Vars -> Tipo VAR_ID mas_vars agrega_var_funcion SEMICOLON Vars .)


state 40

    (5) Vars -> Tipo VAR_ID SLBRACKET VAR_INT push_int_PilaOperandos SRBRACKET . agrega_limites_arreglo agrega_arr_funcion SEMICOLON Vars
    (7) agrega_limites_arreglo -> .

    SEMICOLON       reduce using rule 7 (agrega_limites_arreglo -> .)

    agrega_limites_arreglo         shift and go to state 44

state 41

    (113) Main -> MAIN agrega_main_funcion LPAREN RPAREN LBRACKET . Vars reg_brack RET ZERO SEMICOLON RBRACKET
    (4) Vars -> . Tipo VAR_ID mas_vars agrega_var_funcion SEMICOLON Vars
    (5) Vars -> . Tipo VAR_ID SLBRACKET VAR_INT push_int_PilaOperandos SRBRACKET agrega_limites_arreglo agrega_arr_funcion SEMICOLON Vars
    (6) Vars -> .
    (9) Tipo -> . INT
    (10) Tipo -> . DECIMAL
    (11) Tipo -> . STRING
    (12) Tipo -> . CHAR
    (13) Tipo -> . BOOL

    IF              reduce using rule 6 (Vars -> .)
    RETURN          reduce using rule 6 (Vars -> .)
    VAR_ID          reduce using rule 6 (Vars -> .)
    PRINT           reduce using rule 6 (Vars -> .)
    FOR             reduce using rule 6 (Vars -> .)
    WHILE           reduce using rule 6 (Vars -> .)
    DO              reduce using rule 6 (Vars -> .)
    TUR             reduce using rule 6 (Vars -> .)
    RET             reduce using rule 6 (Vars -> .)
    INT             shift and go to state 10
    DECIMAL         shift and go to state 11
    STRING          shift and go to state 12
    CHAR            shift and go to state 13
    BOOL            shift and go to state 14

    Vars                           shift and go to state 45
    Tipo                           shift and go to state 9

state 42

    (67) funciones -> FUNC tipo_funcion VAR_ID LPAREN param RPAREN . agrega_funcion LBRACKET Vars reg_brack RBRACKET fin_func_cuad funciones
    (75) agrega_funcion -> .

    LBRACKET        reduce using rule 75 (agrega_funcion -> .)

    agrega_funcion                 shift and go to state 46

state 43

    (71) param -> Tipo VAR_ID . pos_commaf
    (73) pos_commaf -> . COMMA Tipo VAR_ID pos_commaf
    (74) pos_commaf -> .

    COMMA           shift and go to state 48
    RPAREN          reduce using rule 74 (pos_commaf -> .)

    pos_commaf                     shift and go to state 47

state 44

    (5) Vars -> Tipo VAR_ID SLBRACKET VAR_INT push_int_PilaOperandos SRBRACKET agrega_limites_arreglo . agrega_arr_funcion SEMICOLON Vars
    (8) agrega_arr_funcion -> .

    SEMICOLON       reduce using rule 8 (agrega_arr_funcion -> .)

    agrega_arr_funcion             shift and go to state 49

state 45

    (113) Main -> MAIN agrega_main_funcion LPAREN RPAREN LBRACKET Vars . reg_brack RET ZERO SEMICOLON RBRACKET
    (77) reg_brack -> . Estatutos reg_brack
    (78) reg_brack -> .
    (79) Estatutos -> . Condicion
    (80) Estatutos -> . Ciclo
    (81) Estatutos -> . Return
    (82) Estatutos -> . Asignacion
    (83) Estatutos -> . Print
    (84) Estatutos -> . Llamada_Func
    (85) Estatutos -> . Turtle
    (86) Condicion -> . IF LPAREN ExpI RPAREN crea_GOTOF LBRACKET reg_brack RBRACKET pos_else llena_cuadruplo_if
    (98) Ciclo -> . For
    (99) Ciclo -> . While
    (100) Ciclo -> . DoWhile
    (92) Return -> . RETURN ExpI SEMICOLON resuelve_return
    (17) Asignacion -> . VAR_ID push_var_PilaOperandos ASSIGN push_operador_PilaOperadores ExpI SEMICOLON resuelve_asignacion
    (94) Print -> . PRINT LPAREN ExpI RPAREN SEMICOLON crea_print
    (96) Llamada_Func -> . VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion SEMICOLON checa_void
    (115) Turtle -> . Forward
    (116) Turtle -> . Right
    (117) Turtle -> . Left
    (118) Turtle -> . Circle
    (119) Turtle -> . Position
    (120) Turtle -> . IniciaTurtle
    (121) Turtle -> . TerminaTurtle
    (106) For -> . FOR LPAREN VAR_ID ASSIGN ExpI SEMICOLON ExpI SEMICOLON VAR_ID Exp_ciclo RPAREN LBRACKET reg_brack RBRACKET
    (101) While -> . WHILE guarda_numero_cuadruplo LPAREN ExpI RPAREN crea_GOTOF LBRACKET reg_brack RBRACKET regresa_inicio_while
    (104) DoWhile -> . DO guarda_numero_cuadruplo LBRACKET reg_brack RBRACKET WHILE LPAREN ExpI RPAREN SEMICOLON crea_GOTOV
    (122) Forward -> . TUR POINT FORWARD LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_forward
    (124) Right -> . TUR POINT RIGHT LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_right
    (126) Left -> . TUR POINT LEFT LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_left
    (128) Circle -> . TUR POINT CIRCLE LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_circle
    (130) Position -> . TUR POINT POS LPAREN ExpI COMMA ExpI RPAREN SEMICOLON crea_cuadruplo_pos
    (132) IniciaTurtle -> . TUR POINT TURTLE LPAREN RPAREN SEMICOLON crea_cuadruplo_inicia
    (134) TerminaTurtle -> . TUR POINT FINISH LPAREN RPAREN SEMICOLON crea_cuadruplo_termina

    RET             reduce using rule 78 (reg_brack -> .)
    IF              shift and go to state 59
    RETURN          shift and go to state 63
    VAR_ID          shift and go to state 64
    PRINT           shift and go to state 65
    FOR             shift and go to state 73
    WHILE           shift and go to state 74
    DO              shift and go to state 75
    TUR             shift and go to state 76

    reg_brack                      shift and go to state 50
    Estatutos                      shift and go to state 51
    Condicion                      shift and go to state 52
    Ciclo                          shift and go to state 53
    Return                         shift and go to state 54
    Asignacion                     shift and go to state 55
    Print                          shift and go to state 56
    Llamada_Func                   shift and go to state 57
    Turtle                         shift and go to state 58
    For                            shift and go to state 60
    While                          shift and go to state 61
    DoWhile                        shift and go to state 62
    Forward                        shift and go to state 66
    Right                          shift and go to state 67
    Left                           shift and go to state 68
    Circle                         shift and go to state 69
    Position                       shift and go to state 70
    IniciaTurtle                   shift and go to state 71
    TerminaTurtle                  shift and go to state 72

state 46

    (67) funciones -> FUNC tipo_funcion VAR_ID LPAREN param RPAREN agrega_funcion . LBRACKET Vars reg_brack RBRACKET fin_func_cuad funciones

    LBRACKET        shift and go to state 77


state 47

    (71) param -> Tipo VAR_ID pos_commaf .

    RPAREN          reduce using rule 71 (param -> Tipo VAR_ID pos_commaf .)


state 48

    (73) pos_commaf -> COMMA . Tipo VAR_ID pos_commaf
    (9) Tipo -> . INT
    (10) Tipo -> . DECIMAL
    (11) Tipo -> . STRING
    (12) Tipo -> . CHAR
    (13) Tipo -> . BOOL

    INT             shift and go to state 10
    DECIMAL         shift and go to state 11
    STRING          shift and go to state 12
    CHAR            shift and go to state 13
    BOOL            shift and go to state 14

    Tipo                           shift and go to state 78

state 49

    (5) Vars -> Tipo VAR_ID SLBRACKET VAR_INT push_int_PilaOperandos SRBRACKET agrega_limites_arreglo agrega_arr_funcion . SEMICOLON Vars

    SEMICOLON       shift and go to state 79


state 50

    (113) Main -> MAIN agrega_main_funcion LPAREN RPAREN LBRACKET Vars reg_brack . RET ZERO SEMICOLON RBRACKET

    RET             shift and go to state 80


state 51

    (77) reg_brack -> Estatutos . reg_brack
    (77) reg_brack -> . Estatutos reg_brack
    (78) reg_brack -> .
    (79) Estatutos -> . Condicion
    (80) Estatutos -> . Ciclo
    (81) Estatutos -> . Return
    (82) Estatutos -> . Asignacion
    (83) Estatutos -> . Print
    (84) Estatutos -> . Llamada_Func
    (85) Estatutos -> . Turtle
    (86) Condicion -> . IF LPAREN ExpI RPAREN crea_GOTOF LBRACKET reg_brack RBRACKET pos_else llena_cuadruplo_if
    (98) Ciclo -> . For
    (99) Ciclo -> . While
    (100) Ciclo -> . DoWhile
    (92) Return -> . RETURN ExpI SEMICOLON resuelve_return
    (17) Asignacion -> . VAR_ID push_var_PilaOperandos ASSIGN push_operador_PilaOperadores ExpI SEMICOLON resuelve_asignacion
    (94) Print -> . PRINT LPAREN ExpI RPAREN SEMICOLON crea_print
    (96) Llamada_Func -> . VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion SEMICOLON checa_void
    (115) Turtle -> . Forward
    (116) Turtle -> . Right
    (117) Turtle -> . Left
    (118) Turtle -> . Circle
    (119) Turtle -> . Position
    (120) Turtle -> . IniciaTurtle
    (121) Turtle -> . TerminaTurtle
    (106) For -> . FOR LPAREN VAR_ID ASSIGN ExpI SEMICOLON ExpI SEMICOLON VAR_ID Exp_ciclo RPAREN LBRACKET reg_brack RBRACKET
    (101) While -> . WHILE guarda_numero_cuadruplo LPAREN ExpI RPAREN crea_GOTOF LBRACKET reg_brack RBRACKET regresa_inicio_while
    (104) DoWhile -> . DO guarda_numero_cuadruplo LBRACKET reg_brack RBRACKET WHILE LPAREN ExpI RPAREN SEMICOLON crea_GOTOV
    (122) Forward -> . TUR POINT FORWARD LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_forward
    (124) Right -> . TUR POINT RIGHT LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_right
    (126) Left -> . TUR POINT LEFT LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_left
    (128) Circle -> . TUR POINT CIRCLE LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_circle
    (130) Position -> . TUR POINT POS LPAREN ExpI COMMA ExpI RPAREN SEMICOLON crea_cuadruplo_pos
    (132) IniciaTurtle -> . TUR POINT TURTLE LPAREN RPAREN SEMICOLON crea_cuadruplo_inicia
    (134) TerminaTurtle -> . TUR POINT FINISH LPAREN RPAREN SEMICOLON crea_cuadruplo_termina

    RET             reduce using rule 78 (reg_brack -> .)
    RBRACKET        reduce using rule 78 (reg_brack -> .)
    IF              shift and go to state 59
    RETURN          shift and go to state 63
    VAR_ID          shift and go to state 64
    PRINT           shift and go to state 65
    FOR             shift and go to state 73
    WHILE           shift and go to state 74
    DO              shift and go to state 75
    TUR             shift and go to state 76

    Estatutos                      shift and go to state 51
    reg_brack                      shift and go to state 81
    Condicion                      shift and go to state 52
    Ciclo                          shift and go to state 53
    Return                         shift and go to state 54
    Asignacion                     shift and go to state 55
    Print                          shift and go to state 56
    Llamada_Func                   shift and go to state 57
    Turtle                         shift and go to state 58
    For                            shift and go to state 60
    While                          shift and go to state 61
    DoWhile                        shift and go to state 62
    Forward                        shift and go to state 66
    Right                          shift and go to state 67
    Left                           shift and go to state 68
    Circle                         shift and go to state 69
    Position                       shift and go to state 70
    IniciaTurtle                   shift and go to state 71
    TerminaTurtle                  shift and go to state 72

state 52

    (79) Estatutos -> Condicion .

    IF              reduce using rule 79 (Estatutos -> Condicion .)
    RETURN          reduce using rule 79 (Estatutos -> Condicion .)
    VAR_ID          reduce using rule 79 (Estatutos -> Condicion .)
    PRINT           reduce using rule 79 (Estatutos -> Condicion .)
    FOR             reduce using rule 79 (Estatutos -> Condicion .)
    WHILE           reduce using rule 79 (Estatutos -> Condicion .)
    DO              reduce using rule 79 (Estatutos -> Condicion .)
    TUR             reduce using rule 79 (Estatutos -> Condicion .)
    RET             reduce using rule 79 (Estatutos -> Condicion .)
    RBRACKET        reduce using rule 79 (Estatutos -> Condicion .)


state 53

    (80) Estatutos -> Ciclo .

    IF              reduce using rule 80 (Estatutos -> Ciclo .)
    RETURN          reduce using rule 80 (Estatutos -> Ciclo .)
    VAR_ID          reduce using rule 80 (Estatutos -> Ciclo .)
    PRINT           reduce using rule 80 (Estatutos -> Ciclo .)
    FOR             reduce using rule 80 (Estatutos -> Ciclo .)
    WHILE           reduce using rule 80 (Estatutos -> Ciclo .)
    DO              reduce using rule 80 (Estatutos -> Ciclo .)
    TUR             reduce using rule 80 (Estatutos -> Ciclo .)
    RET             reduce using rule 80 (Estatutos -> Ciclo .)
    RBRACKET        reduce using rule 80 (Estatutos -> Ciclo .)


state 54

    (81) Estatutos -> Return .

    IF              reduce using rule 81 (Estatutos -> Return .)
    RETURN          reduce using rule 81 (Estatutos -> Return .)
    VAR_ID          reduce using rule 81 (Estatutos -> Return .)
    PRINT           reduce using rule 81 (Estatutos -> Return .)
    FOR             reduce using rule 81 (Estatutos -> Return .)
    WHILE           reduce using rule 81 (Estatutos -> Return .)
    DO              reduce using rule 81 (Estatutos -> Return .)
    TUR             reduce using rule 81 (Estatutos -> Return .)
    RET             reduce using rule 81 (Estatutos -> Return .)
    RBRACKET        reduce using rule 81 (Estatutos -> Return .)


state 55

    (82) Estatutos -> Asignacion .

    IF              reduce using rule 82 (Estatutos -> Asignacion .)
    RETURN          reduce using rule 82 (Estatutos -> Asignacion .)
    VAR_ID          reduce using rule 82 (Estatutos -> Asignacion .)
    PRINT           reduce using rule 82 (Estatutos -> Asignacion .)
    FOR             reduce using rule 82 (Estatutos -> Asignacion .)
    WHILE           reduce using rule 82 (Estatutos -> Asignacion .)
    DO              reduce using rule 82 (Estatutos -> Asignacion .)
    TUR             reduce using rule 82 (Estatutos -> Asignacion .)
    RET             reduce using rule 82 (Estatutos -> Asignacion .)
    RBRACKET        reduce using rule 82 (Estatutos -> Asignacion .)


state 56

    (83) Estatutos -> Print .

    IF              reduce using rule 83 (Estatutos -> Print .)
    RETURN          reduce using rule 83 (Estatutos -> Print .)
    VAR_ID          reduce using rule 83 (Estatutos -> Print .)
    PRINT           reduce using rule 83 (Estatutos -> Print .)
    FOR             reduce using rule 83 (Estatutos -> Print .)
    WHILE           reduce using rule 83 (Estatutos -> Print .)
    DO              reduce using rule 83 (Estatutos -> Print .)
    TUR             reduce using rule 83 (Estatutos -> Print .)
    RET             reduce using rule 83 (Estatutos -> Print .)
    RBRACKET        reduce using rule 83 (Estatutos -> Print .)


state 57

    (84) Estatutos -> Llamada_Func .

    IF              reduce using rule 84 (Estatutos -> Llamada_Func .)
    RETURN          reduce using rule 84 (Estatutos -> Llamada_Func .)
    VAR_ID          reduce using rule 84 (Estatutos -> Llamada_Func .)
    PRINT           reduce using rule 84 (Estatutos -> Llamada_Func .)
    FOR             reduce using rule 84 (Estatutos -> Llamada_Func .)
    WHILE           reduce using rule 84 (Estatutos -> Llamada_Func .)
    DO              reduce using rule 84 (Estatutos -> Llamada_Func .)
    TUR             reduce using rule 84 (Estatutos -> Llamada_Func .)
    RET             reduce using rule 84 (Estatutos -> Llamada_Func .)
    RBRACKET        reduce using rule 84 (Estatutos -> Llamada_Func .)


state 58

    (85) Estatutos -> Turtle .

    IF              reduce using rule 85 (Estatutos -> Turtle .)
    RETURN          reduce using rule 85 (Estatutos -> Turtle .)
    VAR_ID          reduce using rule 85 (Estatutos -> Turtle .)
    PRINT           reduce using rule 85 (Estatutos -> Turtle .)
    FOR             reduce using rule 85 (Estatutos -> Turtle .)
    WHILE           reduce using rule 85 (Estatutos -> Turtle .)
    DO              reduce using rule 85 (Estatutos -> Turtle .)
    TUR             reduce using rule 85 (Estatutos -> Turtle .)
    RET             reduce using rule 85 (Estatutos -> Turtle .)
    RBRACKET        reduce using rule 85 (Estatutos -> Turtle .)


state 59

    (86) Condicion -> IF . LPAREN ExpI RPAREN crea_GOTOF LBRACKET reg_brack RBRACKET pos_else llena_cuadruplo_if

    LPAREN          shift and go to state 82


state 60

    (98) Ciclo -> For .

    IF              reduce using rule 98 (Ciclo -> For .)
    RETURN          reduce using rule 98 (Ciclo -> For .)
    VAR_ID          reduce using rule 98 (Ciclo -> For .)
    PRINT           reduce using rule 98 (Ciclo -> For .)
    FOR             reduce using rule 98 (Ciclo -> For .)
    WHILE           reduce using rule 98 (Ciclo -> For .)
    DO              reduce using rule 98 (Ciclo -> For .)
    TUR             reduce using rule 98 (Ciclo -> For .)
    RET             reduce using rule 98 (Ciclo -> For .)
    RBRACKET        reduce using rule 98 (Ciclo -> For .)


state 61

    (99) Ciclo -> While .

    IF              reduce using rule 99 (Ciclo -> While .)
    RETURN          reduce using rule 99 (Ciclo -> While .)
    VAR_ID          reduce using rule 99 (Ciclo -> While .)
    PRINT           reduce using rule 99 (Ciclo -> While .)
    FOR             reduce using rule 99 (Ciclo -> While .)
    WHILE           reduce using rule 99 (Ciclo -> While .)
    DO              reduce using rule 99 (Ciclo -> While .)
    TUR             reduce using rule 99 (Ciclo -> While .)
    RET             reduce using rule 99 (Ciclo -> While .)
    RBRACKET        reduce using rule 99 (Ciclo -> While .)


state 62

    (100) Ciclo -> DoWhile .

    IF              reduce using rule 100 (Ciclo -> DoWhile .)
    RETURN          reduce using rule 100 (Ciclo -> DoWhile .)
    VAR_ID          reduce using rule 100 (Ciclo -> DoWhile .)
    PRINT           reduce using rule 100 (Ciclo -> DoWhile .)
    FOR             reduce using rule 100 (Ciclo -> DoWhile .)
    WHILE           reduce using rule 100 (Ciclo -> DoWhile .)
    DO              reduce using rule 100 (Ciclo -> DoWhile .)
    TUR             reduce using rule 100 (Ciclo -> DoWhile .)
    RET             reduce using rule 100 (Ciclo -> DoWhile .)
    RBRACKET        reduce using rule 100 (Ciclo -> DoWhile .)


state 63

    (92) Return -> RETURN . ExpI SEMICOLON resuelve_return
    (21) ExpI -> . ExpK resuelve_operadores_relacionales
    (22) ExpI -> . ExpK Operandos push_operador_PilaOperadores ExpK resuelve_operadores_relacionales
    (30) ExpK -> . ExpT resuelve_termino
    (31) ExpK -> . ExpT resuelve_termino pos_SUMRES push_operador_PilaOperadores ExpK
    (35) ExpT -> . ExpF resuelve_factor
    (36) ExpT -> . ExpF resuelve_factor pos_MULTDIV push_operador_PilaOperadores ExpT
    (40) ExpF -> . VAR_CTE
    (41) ExpF -> . LPAREN agrega_falso ExpI RPAREN quita_falso
    (42) ExpF -> . VAR_ID push_var_PilaOperandos pos_arreglo
    (43) ExpF -> . llama_funcion
    (44) VAR_CTE -> . VAR_INT push_int_PilaOperandos
    (45) VAR_CTE -> . VAR_DECIMAL push_decimal_PilaOperandos
    (46) VAR_CTE -> . VAR_STRING push_string_PilaOperandos
    (47) VAR_CTE -> . VAR_BOOL push_bool_PilaOperandos
    (56) llama_funcion -> . VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion guarda_resultado_funcion
    (48) VAR_BOOL -> . FALSE
    (49) VAR_BOOL -> . TRUE

    LPAREN          shift and go to state 88
    VAR_ID          shift and go to state 89
    VAR_INT         shift and go to state 91
    VAR_DECIMAL     shift and go to state 92
    VAR_STRING      shift and go to state 93
    FALSE           shift and go to state 95
    TRUE            shift and go to state 96

    ExpI                           shift and go to state 83
    ExpK                           shift and go to state 84
    ExpT                           shift and go to state 85
    ExpF                           shift and go to state 86
    VAR_CTE                        shift and go to state 87
    llama_funcion                  shift and go to state 90
    VAR_BOOL                       shift and go to state 94

state 64

    (17) Asignacion -> VAR_ID . push_var_PilaOperandos ASSIGN push_operador_PilaOperadores ExpI SEMICOLON resuelve_asignacion
    (96) Llamada_Func -> VAR_ID . LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion SEMICOLON checa_void
    (18) push_var_PilaOperandos -> .

    LPAREN          shift and go to state 98
    ASSIGN          reduce using rule 18 (push_var_PilaOperandos -> .)

    push_var_PilaOperandos         shift and go to state 97

state 65

    (94) Print -> PRINT . LPAREN ExpI RPAREN SEMICOLON crea_print

    LPAREN          shift and go to state 99


state 66

    (115) Turtle -> Forward .

    IF              reduce using rule 115 (Turtle -> Forward .)
    RETURN          reduce using rule 115 (Turtle -> Forward .)
    VAR_ID          reduce using rule 115 (Turtle -> Forward .)
    PRINT           reduce using rule 115 (Turtle -> Forward .)
    FOR             reduce using rule 115 (Turtle -> Forward .)
    WHILE           reduce using rule 115 (Turtle -> Forward .)
    DO              reduce using rule 115 (Turtle -> Forward .)
    TUR             reduce using rule 115 (Turtle -> Forward .)
    RET             reduce using rule 115 (Turtle -> Forward .)
    RBRACKET        reduce using rule 115 (Turtle -> Forward .)


state 67

    (116) Turtle -> Right .

    IF              reduce using rule 116 (Turtle -> Right .)
    RETURN          reduce using rule 116 (Turtle -> Right .)
    VAR_ID          reduce using rule 116 (Turtle -> Right .)
    PRINT           reduce using rule 116 (Turtle -> Right .)
    FOR             reduce using rule 116 (Turtle -> Right .)
    WHILE           reduce using rule 116 (Turtle -> Right .)
    DO              reduce using rule 116 (Turtle -> Right .)
    TUR             reduce using rule 116 (Turtle -> Right .)
    RET             reduce using rule 116 (Turtle -> Right .)
    RBRACKET        reduce using rule 116 (Turtle -> Right .)


state 68

    (117) Turtle -> Left .

    IF              reduce using rule 117 (Turtle -> Left .)
    RETURN          reduce using rule 117 (Turtle -> Left .)
    VAR_ID          reduce using rule 117 (Turtle -> Left .)
    PRINT           reduce using rule 117 (Turtle -> Left .)
    FOR             reduce using rule 117 (Turtle -> Left .)
    WHILE           reduce using rule 117 (Turtle -> Left .)
    DO              reduce using rule 117 (Turtle -> Left .)
    TUR             reduce using rule 117 (Turtle -> Left .)
    RET             reduce using rule 117 (Turtle -> Left .)
    RBRACKET        reduce using rule 117 (Turtle -> Left .)


state 69

    (118) Turtle -> Circle .

    IF              reduce using rule 118 (Turtle -> Circle .)
    RETURN          reduce using rule 118 (Turtle -> Circle .)
    VAR_ID          reduce using rule 118 (Turtle -> Circle .)
    PRINT           reduce using rule 118 (Turtle -> Circle .)
    FOR             reduce using rule 118 (Turtle -> Circle .)
    WHILE           reduce using rule 118 (Turtle -> Circle .)
    DO              reduce using rule 118 (Turtle -> Circle .)
    TUR             reduce using rule 118 (Turtle -> Circle .)
    RET             reduce using rule 118 (Turtle -> Circle .)
    RBRACKET        reduce using rule 118 (Turtle -> Circle .)


state 70

    (119) Turtle -> Position .

    IF              reduce using rule 119 (Turtle -> Position .)
    RETURN          reduce using rule 119 (Turtle -> Position .)
    VAR_ID          reduce using rule 119 (Turtle -> Position .)
    PRINT           reduce using rule 119 (Turtle -> Position .)
    FOR             reduce using rule 119 (Turtle -> Position .)
    WHILE           reduce using rule 119 (Turtle -> Position .)
    DO              reduce using rule 119 (Turtle -> Position .)
    TUR             reduce using rule 119 (Turtle -> Position .)
    RET             reduce using rule 119 (Turtle -> Position .)
    RBRACKET        reduce using rule 119 (Turtle -> Position .)


state 71

    (120) Turtle -> IniciaTurtle .

    IF              reduce using rule 120 (Turtle -> IniciaTurtle .)
    RETURN          reduce using rule 120 (Turtle -> IniciaTurtle .)
    VAR_ID          reduce using rule 120 (Turtle -> IniciaTurtle .)
    PRINT           reduce using rule 120 (Turtle -> IniciaTurtle .)
    FOR             reduce using rule 120 (Turtle -> IniciaTurtle .)
    WHILE           reduce using rule 120 (Turtle -> IniciaTurtle .)
    DO              reduce using rule 120 (Turtle -> IniciaTurtle .)
    TUR             reduce using rule 120 (Turtle -> IniciaTurtle .)
    RET             reduce using rule 120 (Turtle -> IniciaTurtle .)
    RBRACKET        reduce using rule 120 (Turtle -> IniciaTurtle .)


state 72

    (121) Turtle -> TerminaTurtle .

    IF              reduce using rule 121 (Turtle -> TerminaTurtle .)
    RETURN          reduce using rule 121 (Turtle -> TerminaTurtle .)
    VAR_ID          reduce using rule 121 (Turtle -> TerminaTurtle .)
    PRINT           reduce using rule 121 (Turtle -> TerminaTurtle .)
    FOR             reduce using rule 121 (Turtle -> TerminaTurtle .)
    WHILE           reduce using rule 121 (Turtle -> TerminaTurtle .)
    DO              reduce using rule 121 (Turtle -> TerminaTurtle .)
    TUR             reduce using rule 121 (Turtle -> TerminaTurtle .)
    RET             reduce using rule 121 (Turtle -> TerminaTurtle .)
    RBRACKET        reduce using rule 121 (Turtle -> TerminaTurtle .)


state 73

    (106) For -> FOR . LPAREN VAR_ID ASSIGN ExpI SEMICOLON ExpI SEMICOLON VAR_ID Exp_ciclo RPAREN LBRACKET reg_brack RBRACKET

    LPAREN          shift and go to state 100


state 74

    (101) While -> WHILE . guarda_numero_cuadruplo LPAREN ExpI RPAREN crea_GOTOF LBRACKET reg_brack RBRACKET regresa_inicio_while
    (102) guarda_numero_cuadruplo -> .

    LPAREN          reduce using rule 102 (guarda_numero_cuadruplo -> .)

    guarda_numero_cuadruplo        shift and go to state 101

state 75

    (104) DoWhile -> DO . guarda_numero_cuadruplo LBRACKET reg_brack RBRACKET WHILE LPAREN ExpI RPAREN SEMICOLON crea_GOTOV
    (102) guarda_numero_cuadruplo -> .

    LBRACKET        reduce using rule 102 (guarda_numero_cuadruplo -> .)

    guarda_numero_cuadruplo        shift and go to state 102

state 76

    (122) Forward -> TUR . POINT FORWARD LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_forward
    (124) Right -> TUR . POINT RIGHT LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_right
    (126) Left -> TUR . POINT LEFT LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_left
    (128) Circle -> TUR . POINT CIRCLE LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_circle
    (130) Position -> TUR . POINT POS LPAREN ExpI COMMA ExpI RPAREN SEMICOLON crea_cuadruplo_pos
    (132) IniciaTurtle -> TUR . POINT TURTLE LPAREN RPAREN SEMICOLON crea_cuadruplo_inicia
    (134) TerminaTurtle -> TUR . POINT FINISH LPAREN RPAREN SEMICOLON crea_cuadruplo_termina

    POINT           shift and go to state 103


state 77

    (67) funciones -> FUNC tipo_funcion VAR_ID LPAREN param RPAREN agrega_funcion LBRACKET . Vars reg_brack RBRACKET fin_func_cuad funciones
    (4) Vars -> . Tipo VAR_ID mas_vars agrega_var_funcion SEMICOLON Vars
    (5) Vars -> . Tipo VAR_ID SLBRACKET VAR_INT push_int_PilaOperandos SRBRACKET agrega_limites_arreglo agrega_arr_funcion SEMICOLON Vars
    (6) Vars -> .
    (9) Tipo -> . INT
    (10) Tipo -> . DECIMAL
    (11) Tipo -> . STRING
    (12) Tipo -> . CHAR
    (13) Tipo -> . BOOL

    IF              reduce using rule 6 (Vars -> .)
    RETURN          reduce using rule 6 (Vars -> .)
    VAR_ID          reduce using rule 6 (Vars -> .)
    PRINT           reduce using rule 6 (Vars -> .)
    FOR             reduce using rule 6 (Vars -> .)
    WHILE           reduce using rule 6 (Vars -> .)
    DO              reduce using rule 6 (Vars -> .)
    TUR             reduce using rule 6 (Vars -> .)
    RBRACKET        reduce using rule 6 (Vars -> .)
    INT             shift and go to state 10
    DECIMAL         shift and go to state 11
    STRING          shift and go to state 12
    CHAR            shift and go to state 13
    BOOL            shift and go to state 14

    Vars                           shift and go to state 104
    Tipo                           shift and go to state 9

state 78

    (73) pos_commaf -> COMMA Tipo . VAR_ID pos_commaf

    VAR_ID          shift and go to state 105


state 79

    (5) Vars -> Tipo VAR_ID SLBRACKET VAR_INT push_int_PilaOperandos SRBRACKET agrega_limites_arreglo agrega_arr_funcion SEMICOLON . Vars
    (4) Vars -> . Tipo VAR_ID mas_vars agrega_var_funcion SEMICOLON Vars
    (5) Vars -> . Tipo VAR_ID SLBRACKET VAR_INT push_int_PilaOperandos SRBRACKET agrega_limites_arreglo agrega_arr_funcion SEMICOLON Vars
    (6) Vars -> .
    (9) Tipo -> . INT
    (10) Tipo -> . DECIMAL
    (11) Tipo -> . STRING
    (12) Tipo -> . CHAR
    (13) Tipo -> . BOOL

    FUNC            reduce using rule 6 (Vars -> .)
    MAIN            reduce using rule 6 (Vars -> .)
    IF              reduce using rule 6 (Vars -> .)
    RETURN          reduce using rule 6 (Vars -> .)
    VAR_ID          reduce using rule 6 (Vars -> .)
    PRINT           reduce using rule 6 (Vars -> .)
    FOR             reduce using rule 6 (Vars -> .)
    WHILE           reduce using rule 6 (Vars -> .)
    DO              reduce using rule 6 (Vars -> .)
    TUR             reduce using rule 6 (Vars -> .)
    RET             reduce using rule 6 (Vars -> .)
    RBRACKET        reduce using rule 6 (Vars -> .)
    INT             shift and go to state 10
    DECIMAL         shift and go to state 11
    STRING          shift and go to state 12
    CHAR            shift and go to state 13
    BOOL            shift and go to state 14

    Tipo                           shift and go to state 9
    Vars                           shift and go to state 106

state 80

    (113) Main -> MAIN agrega_main_funcion LPAREN RPAREN LBRACKET Vars reg_brack RET . ZERO SEMICOLON RBRACKET

    ZERO            shift and go to state 107


state 81

    (77) reg_brack -> Estatutos reg_brack .

    RET             reduce using rule 77 (reg_brack -> Estatutos reg_brack .)
    RBRACKET        reduce using rule 77 (reg_brack -> Estatutos reg_brack .)


state 82

    (86) Condicion -> IF LPAREN . ExpI RPAREN crea_GOTOF LBRACKET reg_brack RBRACKET pos_else llena_cuadruplo_if
    (21) ExpI -> . ExpK resuelve_operadores_relacionales
    (22) ExpI -> . ExpK Operandos push_operador_PilaOperadores ExpK resuelve_operadores_relacionales
    (30) ExpK -> . ExpT resuelve_termino
    (31) ExpK -> . ExpT resuelve_termino pos_SUMRES push_operador_PilaOperadores ExpK
    (35) ExpT -> . ExpF resuelve_factor
    (36) ExpT -> . ExpF resuelve_factor pos_MULTDIV push_operador_PilaOperadores ExpT
    (40) ExpF -> . VAR_CTE
    (41) ExpF -> . LPAREN agrega_falso ExpI RPAREN quita_falso
    (42) ExpF -> . VAR_ID push_var_PilaOperandos pos_arreglo
    (43) ExpF -> . llama_funcion
    (44) VAR_CTE -> . VAR_INT push_int_PilaOperandos
    (45) VAR_CTE -> . VAR_DECIMAL push_decimal_PilaOperandos
    (46) VAR_CTE -> . VAR_STRING push_string_PilaOperandos
    (47) VAR_CTE -> . VAR_BOOL push_bool_PilaOperandos
    (56) llama_funcion -> . VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion guarda_resultado_funcion
    (48) VAR_BOOL -> . FALSE
    (49) VAR_BOOL -> . TRUE

    LPAREN          shift and go to state 88
    VAR_ID          shift and go to state 89
    VAR_INT         shift and go to state 91
    VAR_DECIMAL     shift and go to state 92
    VAR_STRING      shift and go to state 93
    FALSE           shift and go to state 95
    TRUE            shift and go to state 96

    ExpI                           shift and go to state 108
    ExpK                           shift and go to state 84
    ExpT                           shift and go to state 85
    ExpF                           shift and go to state 86
    VAR_CTE                        shift and go to state 87
    llama_funcion                  shift and go to state 90
    VAR_BOOL                       shift and go to state 94

state 83

    (92) Return -> RETURN ExpI . SEMICOLON resuelve_return

    SEMICOLON       shift and go to state 109


state 84

    (21) ExpI -> ExpK . resuelve_operadores_relacionales
    (22) ExpI -> ExpK . Operandos push_operador_PilaOperadores ExpK resuelve_operadores_relacionales
    (29) resuelve_operadores_relacionales -> .
    (23) Operandos -> . LT
    (24) Operandos -> . GT
    (25) Operandos -> . NE
    (26) Operandos -> . LE
    (27) Operandos -> . GE
    (28) Operandos -> . EQ

    SEMICOLON       reduce using rule 29 (resuelve_operadores_relacionales -> .)
    RPAREN          reduce using rule 29 (resuelve_operadores_relacionales -> .)
    SRBRACKET       reduce using rule 29 (resuelve_operadores_relacionales -> .)
    COMMA           reduce using rule 29 (resuelve_operadores_relacionales -> .)
    LT              shift and go to state 112
    GT              shift and go to state 113
    NE              shift and go to state 114
    LE              shift and go to state 115
    GE              shift and go to state 116
    EQ              shift and go to state 117

    resuelve_operadores_relacionales shift and go to state 110
    Operandos                      shift and go to state 111

state 85

    (30) ExpK -> ExpT . resuelve_termino
    (31) ExpK -> ExpT . resuelve_termino pos_SUMRES push_operador_PilaOperadores ExpK
    (32) resuelve_termino -> .

    PLUS            reduce using rule 32 (resuelve_termino -> .)
    MINUS           reduce using rule 32 (resuelve_termino -> .)
    LT              reduce using rule 32 (resuelve_termino -> .)
    GT              reduce using rule 32 (resuelve_termino -> .)
    NE              reduce using rule 32 (resuelve_termino -> .)
    LE              reduce using rule 32 (resuelve_termino -> .)
    GE              reduce using rule 32 (resuelve_termino -> .)
    EQ              reduce using rule 32 (resuelve_termino -> .)
    SEMICOLON       reduce using rule 32 (resuelve_termino -> .)
    RPAREN          reduce using rule 32 (resuelve_termino -> .)
    SRBRACKET       reduce using rule 32 (resuelve_termino -> .)
    COMMA           reduce using rule 32 (resuelve_termino -> .)

    resuelve_termino               shift and go to state 118

state 86

    (35) ExpT -> ExpF . resuelve_factor
    (36) ExpT -> ExpF . resuelve_factor pos_MULTDIV push_operador_PilaOperadores ExpT
    (37) resuelve_factor -> .

    MULT            reduce using rule 37 (resuelve_factor -> .)
    DIV             reduce using rule 37 (resuelve_factor -> .)
    PLUS            reduce using rule 37 (resuelve_factor -> .)
    MINUS           reduce using rule 37 (resuelve_factor -> .)
    LT              reduce using rule 37 (resuelve_factor -> .)
    GT              reduce using rule 37 (resuelve_factor -> .)
    NE              reduce using rule 37 (resuelve_factor -> .)
    LE              reduce using rule 37 (resuelve_factor -> .)
    GE              reduce using rule 37 (resuelve_factor -> .)
    EQ              reduce using rule 37 (resuelve_factor -> .)
    SEMICOLON       reduce using rule 37 (resuelve_factor -> .)
    RPAREN          reduce using rule 37 (resuelve_factor -> .)
    SRBRACKET       reduce using rule 37 (resuelve_factor -> .)
    COMMA           reduce using rule 37 (resuelve_factor -> .)

    resuelve_factor                shift and go to state 119

state 87

    (40) ExpF -> VAR_CTE .

    MULT            reduce using rule 40 (ExpF -> VAR_CTE .)
    DIV             reduce using rule 40 (ExpF -> VAR_CTE .)
    PLUS            reduce using rule 40 (ExpF -> VAR_CTE .)
    MINUS           reduce using rule 40 (ExpF -> VAR_CTE .)
    LT              reduce using rule 40 (ExpF -> VAR_CTE .)
    GT              reduce using rule 40 (ExpF -> VAR_CTE .)
    NE              reduce using rule 40 (ExpF -> VAR_CTE .)
    LE              reduce using rule 40 (ExpF -> VAR_CTE .)
    GE              reduce using rule 40 (ExpF -> VAR_CTE .)
    EQ              reduce using rule 40 (ExpF -> VAR_CTE .)
    SEMICOLON       reduce using rule 40 (ExpF -> VAR_CTE .)
    RPAREN          reduce using rule 40 (ExpF -> VAR_CTE .)
    SRBRACKET       reduce using rule 40 (ExpF -> VAR_CTE .)
    COMMA           reduce using rule 40 (ExpF -> VAR_CTE .)


state 88

    (41) ExpF -> LPAREN . agrega_falso ExpI RPAREN quita_falso
    (54) agrega_falso -> .

    LPAREN          reduce using rule 54 (agrega_falso -> .)
    VAR_ID          reduce using rule 54 (agrega_falso -> .)
    VAR_INT         reduce using rule 54 (agrega_falso -> .)
    VAR_DECIMAL     reduce using rule 54 (agrega_falso -> .)
    VAR_STRING      reduce using rule 54 (agrega_falso -> .)
    FALSE           reduce using rule 54 (agrega_falso -> .)
    TRUE            reduce using rule 54 (agrega_falso -> .)

    agrega_falso                   shift and go to state 120

state 89

    (42) ExpF -> VAR_ID . push_var_PilaOperandos pos_arreglo
    (56) llama_funcion -> VAR_ID . LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion guarda_resultado_funcion
    (18) push_var_PilaOperandos -> .

    LPAREN          shift and go to state 122
    SLBRACKET       reduce using rule 18 (push_var_PilaOperandos -> .)
    MULT            reduce using rule 18 (push_var_PilaOperandos -> .)
    DIV             reduce using rule 18 (push_var_PilaOperandos -> .)
    PLUS            reduce using rule 18 (push_var_PilaOperandos -> .)
    MINUS           reduce using rule 18 (push_var_PilaOperandos -> .)
    LT              reduce using rule 18 (push_var_PilaOperandos -> .)
    GT              reduce using rule 18 (push_var_PilaOperandos -> .)
    NE              reduce using rule 18 (push_var_PilaOperandos -> .)
    LE              reduce using rule 18 (push_var_PilaOperandos -> .)
    GE              reduce using rule 18 (push_var_PilaOperandos -> .)
    EQ              reduce using rule 18 (push_var_PilaOperandos -> .)
    SEMICOLON       reduce using rule 18 (push_var_PilaOperandos -> .)
    RPAREN          reduce using rule 18 (push_var_PilaOperandos -> .)
    SRBRACKET       reduce using rule 18 (push_var_PilaOperandos -> .)
    COMMA           reduce using rule 18 (push_var_PilaOperandos -> .)

    push_var_PilaOperandos         shift and go to state 121

state 90

    (43) ExpF -> llama_funcion .

    MULT            reduce using rule 43 (ExpF -> llama_funcion .)
    DIV             reduce using rule 43 (ExpF -> llama_funcion .)
    PLUS            reduce using rule 43 (ExpF -> llama_funcion .)
    MINUS           reduce using rule 43 (ExpF -> llama_funcion .)
    LT              reduce using rule 43 (ExpF -> llama_funcion .)
    GT              reduce using rule 43 (ExpF -> llama_funcion .)
    NE              reduce using rule 43 (ExpF -> llama_funcion .)
    LE              reduce using rule 43 (ExpF -> llama_funcion .)
    GE              reduce using rule 43 (ExpF -> llama_funcion .)
    EQ              reduce using rule 43 (ExpF -> llama_funcion .)
    SEMICOLON       reduce using rule 43 (ExpF -> llama_funcion .)
    RPAREN          reduce using rule 43 (ExpF -> llama_funcion .)
    SRBRACKET       reduce using rule 43 (ExpF -> llama_funcion .)
    COMMA           reduce using rule 43 (ExpF -> llama_funcion .)


state 91

    (44) VAR_CTE -> VAR_INT . push_int_PilaOperandos
    (50) push_int_PilaOperandos -> .

    MULT            reduce using rule 50 (push_int_PilaOperandos -> .)
    DIV             reduce using rule 50 (push_int_PilaOperandos -> .)
    PLUS            reduce using rule 50 (push_int_PilaOperandos -> .)
    MINUS           reduce using rule 50 (push_int_PilaOperandos -> .)
    LT              reduce using rule 50 (push_int_PilaOperandos -> .)
    GT              reduce using rule 50 (push_int_PilaOperandos -> .)
    NE              reduce using rule 50 (push_int_PilaOperandos -> .)
    LE              reduce using rule 50 (push_int_PilaOperandos -> .)
    GE              reduce using rule 50 (push_int_PilaOperandos -> .)
    EQ              reduce using rule 50 (push_int_PilaOperandos -> .)
    SEMICOLON       reduce using rule 50 (push_int_PilaOperandos -> .)
    RPAREN          reduce using rule 50 (push_int_PilaOperandos -> .)
    SRBRACKET       reduce using rule 50 (push_int_PilaOperandos -> .)
    COMMA           reduce using rule 50 (push_int_PilaOperandos -> .)

    push_int_PilaOperandos         shift and go to state 123

state 92

    (45) VAR_CTE -> VAR_DECIMAL . push_decimal_PilaOperandos
    (51) push_decimal_PilaOperandos -> .

    MULT            reduce using rule 51 (push_decimal_PilaOperandos -> .)
    DIV             reduce using rule 51 (push_decimal_PilaOperandos -> .)
    PLUS            reduce using rule 51 (push_decimal_PilaOperandos -> .)
    MINUS           reduce using rule 51 (push_decimal_PilaOperandos -> .)
    LT              reduce using rule 51 (push_decimal_PilaOperandos -> .)
    GT              reduce using rule 51 (push_decimal_PilaOperandos -> .)
    NE              reduce using rule 51 (push_decimal_PilaOperandos -> .)
    LE              reduce using rule 51 (push_decimal_PilaOperandos -> .)
    GE              reduce using rule 51 (push_decimal_PilaOperandos -> .)
    EQ              reduce using rule 51 (push_decimal_PilaOperandos -> .)
    SEMICOLON       reduce using rule 51 (push_decimal_PilaOperandos -> .)
    RPAREN          reduce using rule 51 (push_decimal_PilaOperandos -> .)
    SRBRACKET       reduce using rule 51 (push_decimal_PilaOperandos -> .)
    COMMA           reduce using rule 51 (push_decimal_PilaOperandos -> .)

    push_decimal_PilaOperandos     shift and go to state 124

state 93

    (46) VAR_CTE -> VAR_STRING . push_string_PilaOperandos
    (52) push_string_PilaOperandos -> .

    MULT            reduce using rule 52 (push_string_PilaOperandos -> .)
    DIV             reduce using rule 52 (push_string_PilaOperandos -> .)
    PLUS            reduce using rule 52 (push_string_PilaOperandos -> .)
    MINUS           reduce using rule 52 (push_string_PilaOperandos -> .)
    LT              reduce using rule 52 (push_string_PilaOperandos -> .)
    GT              reduce using rule 52 (push_string_PilaOperandos -> .)
    NE              reduce using rule 52 (push_string_PilaOperandos -> .)
    LE              reduce using rule 52 (push_string_PilaOperandos -> .)
    GE              reduce using rule 52 (push_string_PilaOperandos -> .)
    EQ              reduce using rule 52 (push_string_PilaOperandos -> .)
    SEMICOLON       reduce using rule 52 (push_string_PilaOperandos -> .)
    RPAREN          reduce using rule 52 (push_string_PilaOperandos -> .)
    SRBRACKET       reduce using rule 52 (push_string_PilaOperandos -> .)
    COMMA           reduce using rule 52 (push_string_PilaOperandos -> .)

    push_string_PilaOperandos      shift and go to state 125

state 94

    (47) VAR_CTE -> VAR_BOOL . push_bool_PilaOperandos
    (53) push_bool_PilaOperandos -> .

    MULT            reduce using rule 53 (push_bool_PilaOperandos -> .)
    DIV             reduce using rule 53 (push_bool_PilaOperandos -> .)
    PLUS            reduce using rule 53 (push_bool_PilaOperandos -> .)
    MINUS           reduce using rule 53 (push_bool_PilaOperandos -> .)
    LT              reduce using rule 53 (push_bool_PilaOperandos -> .)
    GT              reduce using rule 53 (push_bool_PilaOperandos -> .)
    NE              reduce using rule 53 (push_bool_PilaOperandos -> .)
    LE              reduce using rule 53 (push_bool_PilaOperandos -> .)
    GE              reduce using rule 53 (push_bool_PilaOperandos -> .)
    EQ              reduce using rule 53 (push_bool_PilaOperandos -> .)
    SEMICOLON       reduce using rule 53 (push_bool_PilaOperandos -> .)
    RPAREN          reduce using rule 53 (push_bool_PilaOperandos -> .)
    SRBRACKET       reduce using rule 53 (push_bool_PilaOperandos -> .)
    COMMA           reduce using rule 53 (push_bool_PilaOperandos -> .)

    push_bool_PilaOperandos        shift and go to state 126

state 95

    (48) VAR_BOOL -> FALSE .

    MULT            reduce using rule 48 (VAR_BOOL -> FALSE .)
    DIV             reduce using rule 48 (VAR_BOOL -> FALSE .)
    PLUS            reduce using rule 48 (VAR_BOOL -> FALSE .)
    MINUS           reduce using rule 48 (VAR_BOOL -> FALSE .)
    LT              reduce using rule 48 (VAR_BOOL -> FALSE .)
    GT              reduce using rule 48 (VAR_BOOL -> FALSE .)
    NE              reduce using rule 48 (VAR_BOOL -> FALSE .)
    LE              reduce using rule 48 (VAR_BOOL -> FALSE .)
    GE              reduce using rule 48 (VAR_BOOL -> FALSE .)
    EQ              reduce using rule 48 (VAR_BOOL -> FALSE .)
    SEMICOLON       reduce using rule 48 (VAR_BOOL -> FALSE .)
    RPAREN          reduce using rule 48 (VAR_BOOL -> FALSE .)
    SRBRACKET       reduce using rule 48 (VAR_BOOL -> FALSE .)
    COMMA           reduce using rule 48 (VAR_BOOL -> FALSE .)


state 96

    (49) VAR_BOOL -> TRUE .

    MULT            reduce using rule 49 (VAR_BOOL -> TRUE .)
    DIV             reduce using rule 49 (VAR_BOOL -> TRUE .)
    PLUS            reduce using rule 49 (VAR_BOOL -> TRUE .)
    MINUS           reduce using rule 49 (VAR_BOOL -> TRUE .)
    LT              reduce using rule 49 (VAR_BOOL -> TRUE .)
    GT              reduce using rule 49 (VAR_BOOL -> TRUE .)
    NE              reduce using rule 49 (VAR_BOOL -> TRUE .)
    LE              reduce using rule 49 (VAR_BOOL -> TRUE .)
    GE              reduce using rule 49 (VAR_BOOL -> TRUE .)
    EQ              reduce using rule 49 (VAR_BOOL -> TRUE .)
    SEMICOLON       reduce using rule 49 (VAR_BOOL -> TRUE .)
    RPAREN          reduce using rule 49 (VAR_BOOL -> TRUE .)
    SRBRACKET       reduce using rule 49 (VAR_BOOL -> TRUE .)
    COMMA           reduce using rule 49 (VAR_BOOL -> TRUE .)


state 97

    (17) Asignacion -> VAR_ID push_var_PilaOperandos . ASSIGN push_operador_PilaOperadores ExpI SEMICOLON resuelve_asignacion

    ASSIGN          shift and go to state 127


state 98

    (96) Llamada_Func -> VAR_ID LPAREN . agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion SEMICOLON checa_void
    (54) agrega_falso -> .

    LPAREN          reduce using rule 54 (agrega_falso -> .)
    VAR_ID          reduce using rule 54 (agrega_falso -> .)
    VAR_INT         reduce using rule 54 (agrega_falso -> .)
    VAR_DECIMAL     reduce using rule 54 (agrega_falso -> .)
    VAR_STRING      reduce using rule 54 (agrega_falso -> .)
    FALSE           reduce using rule 54 (agrega_falso -> .)
    TRUE            reduce using rule 54 (agrega_falso -> .)
    RPAREN          reduce using rule 54 (agrega_falso -> .)

    agrega_falso                   shift and go to state 128

state 99

    (94) Print -> PRINT LPAREN . ExpI RPAREN SEMICOLON crea_print
    (21) ExpI -> . ExpK resuelve_operadores_relacionales
    (22) ExpI -> . ExpK Operandos push_operador_PilaOperadores ExpK resuelve_operadores_relacionales
    (30) ExpK -> . ExpT resuelve_termino
    (31) ExpK -> . ExpT resuelve_termino pos_SUMRES push_operador_PilaOperadores ExpK
    (35) ExpT -> . ExpF resuelve_factor
    (36) ExpT -> . ExpF resuelve_factor pos_MULTDIV push_operador_PilaOperadores ExpT
    (40) ExpF -> . VAR_CTE
    (41) ExpF -> . LPAREN agrega_falso ExpI RPAREN quita_falso
    (42) ExpF -> . VAR_ID push_var_PilaOperandos pos_arreglo
    (43) ExpF -> . llama_funcion
    (44) VAR_CTE -> . VAR_INT push_int_PilaOperandos
    (45) VAR_CTE -> . VAR_DECIMAL push_decimal_PilaOperandos
    (46) VAR_CTE -> . VAR_STRING push_string_PilaOperandos
    (47) VAR_CTE -> . VAR_BOOL push_bool_PilaOperandos
    (56) llama_funcion -> . VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion guarda_resultado_funcion
    (48) VAR_BOOL -> . FALSE
    (49) VAR_BOOL -> . TRUE

    LPAREN          shift and go to state 88
    VAR_ID          shift and go to state 89
    VAR_INT         shift and go to state 91
    VAR_DECIMAL     shift and go to state 92
    VAR_STRING      shift and go to state 93
    FALSE           shift and go to state 95
    TRUE            shift and go to state 96

    ExpI                           shift and go to state 129
    ExpK                           shift and go to state 84
    ExpT                           shift and go to state 85
    ExpF                           shift and go to state 86
    VAR_CTE                        shift and go to state 87
    llama_funcion                  shift and go to state 90
    VAR_BOOL                       shift and go to state 94

state 100

    (106) For -> FOR LPAREN . VAR_ID ASSIGN ExpI SEMICOLON ExpI SEMICOLON VAR_ID Exp_ciclo RPAREN LBRACKET reg_brack RBRACKET

    VAR_ID          shift and go to state 130


state 101

    (101) While -> WHILE guarda_numero_cuadruplo . LPAREN ExpI RPAREN crea_GOTOF LBRACKET reg_brack RBRACKET regresa_inicio_while

    LPAREN          shift and go to state 131


state 102

    (104) DoWhile -> DO guarda_numero_cuadruplo . LBRACKET reg_brack RBRACKET WHILE LPAREN ExpI RPAREN SEMICOLON crea_GOTOV

    LBRACKET        shift and go to state 132


state 103

    (122) Forward -> TUR POINT . FORWARD LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_forward
    (124) Right -> TUR POINT . RIGHT LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_right
    (126) Left -> TUR POINT . LEFT LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_left
    (128) Circle -> TUR POINT . CIRCLE LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_circle
    (130) Position -> TUR POINT . POS LPAREN ExpI COMMA ExpI RPAREN SEMICOLON crea_cuadruplo_pos
    (132) IniciaTurtle -> TUR POINT . TURTLE LPAREN RPAREN SEMICOLON crea_cuadruplo_inicia
    (134) TerminaTurtle -> TUR POINT . FINISH LPAREN RPAREN SEMICOLON crea_cuadruplo_termina

    FORWARD         shift and go to state 133
    RIGHT           shift and go to state 134
    LEFT            shift and go to state 135
    CIRCLE          shift and go to state 136
    POS             shift and go to state 137
    TURTLE          shift and go to state 138
    FINISH          shift and go to state 139


state 104

    (67) funciones -> FUNC tipo_funcion VAR_ID LPAREN param RPAREN agrega_funcion LBRACKET Vars . reg_brack RBRACKET fin_func_cuad funciones
    (77) reg_brack -> . Estatutos reg_brack
    (78) reg_brack -> .
    (79) Estatutos -> . Condicion
    (80) Estatutos -> . Ciclo
    (81) Estatutos -> . Return
    (82) Estatutos -> . Asignacion
    (83) Estatutos -> . Print
    (84) Estatutos -> . Llamada_Func
    (85) Estatutos -> . Turtle
    (86) Condicion -> . IF LPAREN ExpI RPAREN crea_GOTOF LBRACKET reg_brack RBRACKET pos_else llena_cuadruplo_if
    (98) Ciclo -> . For
    (99) Ciclo -> . While
    (100) Ciclo -> . DoWhile
    (92) Return -> . RETURN ExpI SEMICOLON resuelve_return
    (17) Asignacion -> . VAR_ID push_var_PilaOperandos ASSIGN push_operador_PilaOperadores ExpI SEMICOLON resuelve_asignacion
    (94) Print -> . PRINT LPAREN ExpI RPAREN SEMICOLON crea_print
    (96) Llamada_Func -> . VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion SEMICOLON checa_void
    (115) Turtle -> . Forward
    (116) Turtle -> . Right
    (117) Turtle -> . Left
    (118) Turtle -> . Circle
    (119) Turtle -> . Position
    (120) Turtle -> . IniciaTurtle
    (121) Turtle -> . TerminaTurtle
    (106) For -> . FOR LPAREN VAR_ID ASSIGN ExpI SEMICOLON ExpI SEMICOLON VAR_ID Exp_ciclo RPAREN LBRACKET reg_brack RBRACKET
    (101) While -> . WHILE guarda_numero_cuadruplo LPAREN ExpI RPAREN crea_GOTOF LBRACKET reg_brack RBRACKET regresa_inicio_while
    (104) DoWhile -> . DO guarda_numero_cuadruplo LBRACKET reg_brack RBRACKET WHILE LPAREN ExpI RPAREN SEMICOLON crea_GOTOV
    (122) Forward -> . TUR POINT FORWARD LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_forward
    (124) Right -> . TUR POINT RIGHT LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_right
    (126) Left -> . TUR POINT LEFT LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_left
    (128) Circle -> . TUR POINT CIRCLE LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_circle
    (130) Position -> . TUR POINT POS LPAREN ExpI COMMA ExpI RPAREN SEMICOLON crea_cuadruplo_pos
    (132) IniciaTurtle -> . TUR POINT TURTLE LPAREN RPAREN SEMICOLON crea_cuadruplo_inicia
    (134) TerminaTurtle -> . TUR POINT FINISH LPAREN RPAREN SEMICOLON crea_cuadruplo_termina

    RBRACKET        reduce using rule 78 (reg_brack -> .)
    IF              shift and go to state 59
    RETURN          shift and go to state 63
    VAR_ID          shift and go to state 64
    PRINT           shift and go to state 65
    FOR             shift and go to state 73
    WHILE           shift and go to state 74
    DO              shift and go to state 75
    TUR             shift and go to state 76

    reg_brack                      shift and go to state 140
    Estatutos                      shift and go to state 51
    Condicion                      shift and go to state 52
    Ciclo                          shift and go to state 53
    Return                         shift and go to state 54
    Asignacion                     shift and go to state 55
    Print                          shift and go to state 56
    Llamada_Func                   shift and go to state 57
    Turtle                         shift and go to state 58
    For                            shift and go to state 60
    While                          shift and go to state 61
    DoWhile                        shift and go to state 62
    Forward                        shift and go to state 66
    Right                          shift and go to state 67
    Left                           shift and go to state 68
    Circle                         shift and go to state 69
    Position                       shift and go to state 70
    IniciaTurtle                   shift and go to state 71
    TerminaTurtle                  shift and go to state 72

state 105

    (73) pos_commaf -> COMMA Tipo VAR_ID . pos_commaf
    (73) pos_commaf -> . COMMA Tipo VAR_ID pos_commaf
    (74) pos_commaf -> .

    COMMA           shift and go to state 48
    RPAREN          reduce using rule 74 (pos_commaf -> .)

    pos_commaf                     shift and go to state 141

state 106

    (5) Vars -> Tipo VAR_ID SLBRACKET VAR_INT push_int_PilaOperandos SRBRACKET agrega_limites_arreglo agrega_arr_funcion SEMICOLON Vars .

    FUNC            reduce using rule 5 (Vars -> Tipo VAR_ID SLBRACKET VAR_INT push_int_PilaOperandos SRBRACKET agrega_limites_arreglo agrega_arr_funcion SEMICOLON Vars .)
    MAIN            reduce using rule 5 (Vars -> Tipo VAR_ID SLBRACKET VAR_INT push_int_PilaOperandos SRBRACKET agrega_limites_arreglo agrega_arr_funcion SEMICOLON Vars .)
    IF              reduce using rule 5 (Vars -> Tipo VAR_ID SLBRACKET VAR_INT push_int_PilaOperandos SRBRACKET agrega_limites_arreglo agrega_arr_funcion SEMICOLON Vars .)
    RETURN          reduce using rule 5 (Vars -> Tipo VAR_ID SLBRACKET VAR_INT push_int_PilaOperandos SRBRACKET agrega_limites_arreglo agrega_arr_funcion SEMICOLON Vars .)
    VAR_ID          reduce using rule 5 (Vars -> Tipo VAR_ID SLBRACKET VAR_INT push_int_PilaOperandos SRBRACKET agrega_limites_arreglo agrega_arr_funcion SEMICOLON Vars .)
    PRINT           reduce using rule 5 (Vars -> Tipo VAR_ID SLBRACKET VAR_INT push_int_PilaOperandos SRBRACKET agrega_limites_arreglo agrega_arr_funcion SEMICOLON Vars .)
    FOR             reduce using rule 5 (Vars -> Tipo VAR_ID SLBRACKET VAR_INT push_int_PilaOperandos SRBRACKET agrega_limites_arreglo agrega_arr_funcion SEMICOLON Vars .)
    WHILE           reduce using rule 5 (Vars -> Tipo VAR_ID SLBRACKET VAR_INT push_int_PilaOperandos SRBRACKET agrega_limites_arreglo agrega_arr_funcion SEMICOLON Vars .)
    DO              reduce using rule 5 (Vars -> Tipo VAR_ID SLBRACKET VAR_INT push_int_PilaOperandos SRBRACKET agrega_limites_arreglo agrega_arr_funcion SEMICOLON Vars .)
    TUR             reduce using rule 5 (Vars -> Tipo VAR_ID SLBRACKET VAR_INT push_int_PilaOperandos SRBRACKET agrega_limites_arreglo agrega_arr_funcion SEMICOLON Vars .)
    RET             reduce using rule 5 (Vars -> Tipo VAR_ID SLBRACKET VAR_INT push_int_PilaOperandos SRBRACKET agrega_limites_arreglo agrega_arr_funcion SEMICOLON Vars .)
    RBRACKET        reduce using rule 5 (Vars -> Tipo VAR_ID SLBRACKET VAR_INT push_int_PilaOperandos SRBRACKET agrega_limites_arreglo agrega_arr_funcion SEMICOLON Vars .)


state 107

    (113) Main -> MAIN agrega_main_funcion LPAREN RPAREN LBRACKET Vars reg_brack RET ZERO . SEMICOLON RBRACKET

    SEMICOLON       shift and go to state 142


state 108

    (86) Condicion -> IF LPAREN ExpI . RPAREN crea_GOTOF LBRACKET reg_brack RBRACKET pos_else llena_cuadruplo_if

    RPAREN          shift and go to state 143


state 109

    (92) Return -> RETURN ExpI SEMICOLON . resuelve_return
    (93) resuelve_return -> .

    IF              reduce using rule 93 (resuelve_return -> .)
    RETURN          reduce using rule 93 (resuelve_return -> .)
    VAR_ID          reduce using rule 93 (resuelve_return -> .)
    PRINT           reduce using rule 93 (resuelve_return -> .)
    FOR             reduce using rule 93 (resuelve_return -> .)
    WHILE           reduce using rule 93 (resuelve_return -> .)
    DO              reduce using rule 93 (resuelve_return -> .)
    TUR             reduce using rule 93 (resuelve_return -> .)
    RET             reduce using rule 93 (resuelve_return -> .)
    RBRACKET        reduce using rule 93 (resuelve_return -> .)

    resuelve_return                shift and go to state 144

state 110

    (21) ExpI -> ExpK resuelve_operadores_relacionales .

    SEMICOLON       reduce using rule 21 (ExpI -> ExpK resuelve_operadores_relacionales .)
    RPAREN          reduce using rule 21 (ExpI -> ExpK resuelve_operadores_relacionales .)
    SRBRACKET       reduce using rule 21 (ExpI -> ExpK resuelve_operadores_relacionales .)
    COMMA           reduce using rule 21 (ExpI -> ExpK resuelve_operadores_relacionales .)


state 111

    (22) ExpI -> ExpK Operandos . push_operador_PilaOperadores ExpK resuelve_operadores_relacionales
    (19) push_operador_PilaOperadores -> .

    LPAREN          reduce using rule 19 (push_operador_PilaOperadores -> .)
    VAR_ID          reduce using rule 19 (push_operador_PilaOperadores -> .)
    VAR_INT         reduce using rule 19 (push_operador_PilaOperadores -> .)
    VAR_DECIMAL     reduce using rule 19 (push_operador_PilaOperadores -> .)
    VAR_STRING      reduce using rule 19 (push_operador_PilaOperadores -> .)
    FALSE           reduce using rule 19 (push_operador_PilaOperadores -> .)
    TRUE            reduce using rule 19 (push_operador_PilaOperadores -> .)

    push_operador_PilaOperadores   shift and go to state 145

state 112

    (23) Operandos -> LT .

    LPAREN          reduce using rule 23 (Operandos -> LT .)
    VAR_ID          reduce using rule 23 (Operandos -> LT .)
    VAR_INT         reduce using rule 23 (Operandos -> LT .)
    VAR_DECIMAL     reduce using rule 23 (Operandos -> LT .)
    VAR_STRING      reduce using rule 23 (Operandos -> LT .)
    FALSE           reduce using rule 23 (Operandos -> LT .)
    TRUE            reduce using rule 23 (Operandos -> LT .)


state 113

    (24) Operandos -> GT .

    LPAREN          reduce using rule 24 (Operandos -> GT .)
    VAR_ID          reduce using rule 24 (Operandos -> GT .)
    VAR_INT         reduce using rule 24 (Operandos -> GT .)
    VAR_DECIMAL     reduce using rule 24 (Operandos -> GT .)
    VAR_STRING      reduce using rule 24 (Operandos -> GT .)
    FALSE           reduce using rule 24 (Operandos -> GT .)
    TRUE            reduce using rule 24 (Operandos -> GT .)


state 114

    (25) Operandos -> NE .

    LPAREN          reduce using rule 25 (Operandos -> NE .)
    VAR_ID          reduce using rule 25 (Operandos -> NE .)
    VAR_INT         reduce using rule 25 (Operandos -> NE .)
    VAR_DECIMAL     reduce using rule 25 (Operandos -> NE .)
    VAR_STRING      reduce using rule 25 (Operandos -> NE .)
    FALSE           reduce using rule 25 (Operandos -> NE .)
    TRUE            reduce using rule 25 (Operandos -> NE .)


state 115

    (26) Operandos -> LE .

    LPAREN          reduce using rule 26 (Operandos -> LE .)
    VAR_ID          reduce using rule 26 (Operandos -> LE .)
    VAR_INT         reduce using rule 26 (Operandos -> LE .)
    VAR_DECIMAL     reduce using rule 26 (Operandos -> LE .)
    VAR_STRING      reduce using rule 26 (Operandos -> LE .)
    FALSE           reduce using rule 26 (Operandos -> LE .)
    TRUE            reduce using rule 26 (Operandos -> LE .)


state 116

    (27) Operandos -> GE .

    LPAREN          reduce using rule 27 (Operandos -> GE .)
    VAR_ID          reduce using rule 27 (Operandos -> GE .)
    VAR_INT         reduce using rule 27 (Operandos -> GE .)
    VAR_DECIMAL     reduce using rule 27 (Operandos -> GE .)
    VAR_STRING      reduce using rule 27 (Operandos -> GE .)
    FALSE           reduce using rule 27 (Operandos -> GE .)
    TRUE            reduce using rule 27 (Operandos -> GE .)


state 117

    (28) Operandos -> EQ .

    LPAREN          reduce using rule 28 (Operandos -> EQ .)
    VAR_ID          reduce using rule 28 (Operandos -> EQ .)
    VAR_INT         reduce using rule 28 (Operandos -> EQ .)
    VAR_DECIMAL     reduce using rule 28 (Operandos -> EQ .)
    VAR_STRING      reduce using rule 28 (Operandos -> EQ .)
    FALSE           reduce using rule 28 (Operandos -> EQ .)
    TRUE            reduce using rule 28 (Operandos -> EQ .)


state 118

    (30) ExpK -> ExpT resuelve_termino .
    (31) ExpK -> ExpT resuelve_termino . pos_SUMRES push_operador_PilaOperadores ExpK
    (33) pos_SUMRES -> . PLUS
    (34) pos_SUMRES -> . MINUS

    LT              reduce using rule 30 (ExpK -> ExpT resuelve_termino .)
    GT              reduce using rule 30 (ExpK -> ExpT resuelve_termino .)
    NE              reduce using rule 30 (ExpK -> ExpT resuelve_termino .)
    LE              reduce using rule 30 (ExpK -> ExpT resuelve_termino .)
    GE              reduce using rule 30 (ExpK -> ExpT resuelve_termino .)
    EQ              reduce using rule 30 (ExpK -> ExpT resuelve_termino .)
    SEMICOLON       reduce using rule 30 (ExpK -> ExpT resuelve_termino .)
    RPAREN          reduce using rule 30 (ExpK -> ExpT resuelve_termino .)
    SRBRACKET       reduce using rule 30 (ExpK -> ExpT resuelve_termino .)
    COMMA           reduce using rule 30 (ExpK -> ExpT resuelve_termino .)
    PLUS            shift and go to state 147
    MINUS           shift and go to state 148

    pos_SUMRES                     shift and go to state 146

state 119

    (35) ExpT -> ExpF resuelve_factor .
    (36) ExpT -> ExpF resuelve_factor . pos_MULTDIV push_operador_PilaOperadores ExpT
    (38) pos_MULTDIV -> . MULT
    (39) pos_MULTDIV -> . DIV

    PLUS            reduce using rule 35 (ExpT -> ExpF resuelve_factor .)
    MINUS           reduce using rule 35 (ExpT -> ExpF resuelve_factor .)
    LT              reduce using rule 35 (ExpT -> ExpF resuelve_factor .)
    GT              reduce using rule 35 (ExpT -> ExpF resuelve_factor .)
    NE              reduce using rule 35 (ExpT -> ExpF resuelve_factor .)
    LE              reduce using rule 35 (ExpT -> ExpF resuelve_factor .)
    GE              reduce using rule 35 (ExpT -> ExpF resuelve_factor .)
    EQ              reduce using rule 35 (ExpT -> ExpF resuelve_factor .)
    SEMICOLON       reduce using rule 35 (ExpT -> ExpF resuelve_factor .)
    RPAREN          reduce using rule 35 (ExpT -> ExpF resuelve_factor .)
    SRBRACKET       reduce using rule 35 (ExpT -> ExpF resuelve_factor .)
    COMMA           reduce using rule 35 (ExpT -> ExpF resuelve_factor .)
    MULT            shift and go to state 150
    DIV             shift and go to state 151

    pos_MULTDIV                    shift and go to state 149

state 120

    (41) ExpF -> LPAREN agrega_falso . ExpI RPAREN quita_falso
    (21) ExpI -> . ExpK resuelve_operadores_relacionales
    (22) ExpI -> . ExpK Operandos push_operador_PilaOperadores ExpK resuelve_operadores_relacionales
    (30) ExpK -> . ExpT resuelve_termino
    (31) ExpK -> . ExpT resuelve_termino pos_SUMRES push_operador_PilaOperadores ExpK
    (35) ExpT -> . ExpF resuelve_factor
    (36) ExpT -> . ExpF resuelve_factor pos_MULTDIV push_operador_PilaOperadores ExpT
    (40) ExpF -> . VAR_CTE
    (41) ExpF -> . LPAREN agrega_falso ExpI RPAREN quita_falso
    (42) ExpF -> . VAR_ID push_var_PilaOperandos pos_arreglo
    (43) ExpF -> . llama_funcion
    (44) VAR_CTE -> . VAR_INT push_int_PilaOperandos
    (45) VAR_CTE -> . VAR_DECIMAL push_decimal_PilaOperandos
    (46) VAR_CTE -> . VAR_STRING push_string_PilaOperandos
    (47) VAR_CTE -> . VAR_BOOL push_bool_PilaOperandos
    (56) llama_funcion -> . VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion guarda_resultado_funcion
    (48) VAR_BOOL -> . FALSE
    (49) VAR_BOOL -> . TRUE

    LPAREN          shift and go to state 88
    VAR_ID          shift and go to state 89
    VAR_INT         shift and go to state 91
    VAR_DECIMAL     shift and go to state 92
    VAR_STRING      shift and go to state 93
    FALSE           shift and go to state 95
    TRUE            shift and go to state 96

    ExpI                           shift and go to state 152
    ExpK                           shift and go to state 84
    ExpT                           shift and go to state 85
    ExpF                           shift and go to state 86
    VAR_CTE                        shift and go to state 87
    llama_funcion                  shift and go to state 90
    VAR_BOOL                       shift and go to state 94

state 121

    (42) ExpF -> VAR_ID push_var_PilaOperandos . pos_arreglo
    (65) pos_arreglo -> . SLBRACKET ExpI SRBRACKET
    (66) pos_arreglo -> .

    SLBRACKET       shift and go to state 154
    MULT            reduce using rule 66 (pos_arreglo -> .)
    DIV             reduce using rule 66 (pos_arreglo -> .)
    PLUS            reduce using rule 66 (pos_arreglo -> .)
    MINUS           reduce using rule 66 (pos_arreglo -> .)
    LT              reduce using rule 66 (pos_arreglo -> .)
    GT              reduce using rule 66 (pos_arreglo -> .)
    NE              reduce using rule 66 (pos_arreglo -> .)
    LE              reduce using rule 66 (pos_arreglo -> .)
    GE              reduce using rule 66 (pos_arreglo -> .)
    EQ              reduce using rule 66 (pos_arreglo -> .)
    SEMICOLON       reduce using rule 66 (pos_arreglo -> .)
    RPAREN          reduce using rule 66 (pos_arreglo -> .)
    SRBRACKET       reduce using rule 66 (pos_arreglo -> .)
    COMMA           reduce using rule 66 (pos_arreglo -> .)

    pos_arreglo                    shift and go to state 153

state 122

    (56) llama_funcion -> VAR_ID LPAREN . agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion guarda_resultado_funcion
    (54) agrega_falso -> .

    LPAREN          reduce using rule 54 (agrega_falso -> .)
    VAR_ID          reduce using rule 54 (agrega_falso -> .)
    VAR_INT         reduce using rule 54 (agrega_falso -> .)
    VAR_DECIMAL     reduce using rule 54 (agrega_falso -> .)
    VAR_STRING      reduce using rule 54 (agrega_falso -> .)
    FALSE           reduce using rule 54 (agrega_falso -> .)
    TRUE            reduce using rule 54 (agrega_falso -> .)
    RPAREN          reduce using rule 54 (agrega_falso -> .)

    agrega_falso                   shift and go to state 155

state 123

    (44) VAR_CTE -> VAR_INT push_int_PilaOperandos .

    MULT            reduce using rule 44 (VAR_CTE -> VAR_INT push_int_PilaOperandos .)
    DIV             reduce using rule 44 (VAR_CTE -> VAR_INT push_int_PilaOperandos .)
    PLUS            reduce using rule 44 (VAR_CTE -> VAR_INT push_int_PilaOperandos .)
    MINUS           reduce using rule 44 (VAR_CTE -> VAR_INT push_int_PilaOperandos .)
    LT              reduce using rule 44 (VAR_CTE -> VAR_INT push_int_PilaOperandos .)
    GT              reduce using rule 44 (VAR_CTE -> VAR_INT push_int_PilaOperandos .)
    NE              reduce using rule 44 (VAR_CTE -> VAR_INT push_int_PilaOperandos .)
    LE              reduce using rule 44 (VAR_CTE -> VAR_INT push_int_PilaOperandos .)
    GE              reduce using rule 44 (VAR_CTE -> VAR_INT push_int_PilaOperandos .)
    EQ              reduce using rule 44 (VAR_CTE -> VAR_INT push_int_PilaOperandos .)
    SEMICOLON       reduce using rule 44 (VAR_CTE -> VAR_INT push_int_PilaOperandos .)
    RPAREN          reduce using rule 44 (VAR_CTE -> VAR_INT push_int_PilaOperandos .)
    SRBRACKET       reduce using rule 44 (VAR_CTE -> VAR_INT push_int_PilaOperandos .)
    COMMA           reduce using rule 44 (VAR_CTE -> VAR_INT push_int_PilaOperandos .)


state 124

    (45) VAR_CTE -> VAR_DECIMAL push_decimal_PilaOperandos .

    MULT            reduce using rule 45 (VAR_CTE -> VAR_DECIMAL push_decimal_PilaOperandos .)
    DIV             reduce using rule 45 (VAR_CTE -> VAR_DECIMAL push_decimal_PilaOperandos .)
    PLUS            reduce using rule 45 (VAR_CTE -> VAR_DECIMAL push_decimal_PilaOperandos .)
    MINUS           reduce using rule 45 (VAR_CTE -> VAR_DECIMAL push_decimal_PilaOperandos .)
    LT              reduce using rule 45 (VAR_CTE -> VAR_DECIMAL push_decimal_PilaOperandos .)
    GT              reduce using rule 45 (VAR_CTE -> VAR_DECIMAL push_decimal_PilaOperandos .)
    NE              reduce using rule 45 (VAR_CTE -> VAR_DECIMAL push_decimal_PilaOperandos .)
    LE              reduce using rule 45 (VAR_CTE -> VAR_DECIMAL push_decimal_PilaOperandos .)
    GE              reduce using rule 45 (VAR_CTE -> VAR_DECIMAL push_decimal_PilaOperandos .)
    EQ              reduce using rule 45 (VAR_CTE -> VAR_DECIMAL push_decimal_PilaOperandos .)
    SEMICOLON       reduce using rule 45 (VAR_CTE -> VAR_DECIMAL push_decimal_PilaOperandos .)
    RPAREN          reduce using rule 45 (VAR_CTE -> VAR_DECIMAL push_decimal_PilaOperandos .)
    SRBRACKET       reduce using rule 45 (VAR_CTE -> VAR_DECIMAL push_decimal_PilaOperandos .)
    COMMA           reduce using rule 45 (VAR_CTE -> VAR_DECIMAL push_decimal_PilaOperandos .)


state 125

    (46) VAR_CTE -> VAR_STRING push_string_PilaOperandos .

    MULT            reduce using rule 46 (VAR_CTE -> VAR_STRING push_string_PilaOperandos .)
    DIV             reduce using rule 46 (VAR_CTE -> VAR_STRING push_string_PilaOperandos .)
    PLUS            reduce using rule 46 (VAR_CTE -> VAR_STRING push_string_PilaOperandos .)
    MINUS           reduce using rule 46 (VAR_CTE -> VAR_STRING push_string_PilaOperandos .)
    LT              reduce using rule 46 (VAR_CTE -> VAR_STRING push_string_PilaOperandos .)
    GT              reduce using rule 46 (VAR_CTE -> VAR_STRING push_string_PilaOperandos .)
    NE              reduce using rule 46 (VAR_CTE -> VAR_STRING push_string_PilaOperandos .)
    LE              reduce using rule 46 (VAR_CTE -> VAR_STRING push_string_PilaOperandos .)
    GE              reduce using rule 46 (VAR_CTE -> VAR_STRING push_string_PilaOperandos .)
    EQ              reduce using rule 46 (VAR_CTE -> VAR_STRING push_string_PilaOperandos .)
    SEMICOLON       reduce using rule 46 (VAR_CTE -> VAR_STRING push_string_PilaOperandos .)
    RPAREN          reduce using rule 46 (VAR_CTE -> VAR_STRING push_string_PilaOperandos .)
    SRBRACKET       reduce using rule 46 (VAR_CTE -> VAR_STRING push_string_PilaOperandos .)
    COMMA           reduce using rule 46 (VAR_CTE -> VAR_STRING push_string_PilaOperandos .)


state 126

    (47) VAR_CTE -> VAR_BOOL push_bool_PilaOperandos .

    MULT            reduce using rule 47 (VAR_CTE -> VAR_BOOL push_bool_PilaOperandos .)
    DIV             reduce using rule 47 (VAR_CTE -> VAR_BOOL push_bool_PilaOperandos .)
    PLUS            reduce using rule 47 (VAR_CTE -> VAR_BOOL push_bool_PilaOperandos .)
    MINUS           reduce using rule 47 (VAR_CTE -> VAR_BOOL push_bool_PilaOperandos .)
    LT              reduce using rule 47 (VAR_CTE -> VAR_BOOL push_bool_PilaOperandos .)
    GT              reduce using rule 47 (VAR_CTE -> VAR_BOOL push_bool_PilaOperandos .)
    NE              reduce using rule 47 (VAR_CTE -> VAR_BOOL push_bool_PilaOperandos .)
    LE              reduce using rule 47 (VAR_CTE -> VAR_BOOL push_bool_PilaOperandos .)
    GE              reduce using rule 47 (VAR_CTE -> VAR_BOOL push_bool_PilaOperandos .)
    EQ              reduce using rule 47 (VAR_CTE -> VAR_BOOL push_bool_PilaOperandos .)
    SEMICOLON       reduce using rule 47 (VAR_CTE -> VAR_BOOL push_bool_PilaOperandos .)
    RPAREN          reduce using rule 47 (VAR_CTE -> VAR_BOOL push_bool_PilaOperandos .)
    SRBRACKET       reduce using rule 47 (VAR_CTE -> VAR_BOOL push_bool_PilaOperandos .)
    COMMA           reduce using rule 47 (VAR_CTE -> VAR_BOOL push_bool_PilaOperandos .)


state 127

    (17) Asignacion -> VAR_ID push_var_PilaOperandos ASSIGN . push_operador_PilaOperadores ExpI SEMICOLON resuelve_asignacion
    (19) push_operador_PilaOperadores -> .

    LPAREN          reduce using rule 19 (push_operador_PilaOperadores -> .)
    VAR_ID          reduce using rule 19 (push_operador_PilaOperadores -> .)
    VAR_INT         reduce using rule 19 (push_operador_PilaOperadores -> .)
    VAR_DECIMAL     reduce using rule 19 (push_operador_PilaOperadores -> .)
    VAR_STRING      reduce using rule 19 (push_operador_PilaOperadores -> .)
    FALSE           reduce using rule 19 (push_operador_PilaOperadores -> .)
    TRUE            reduce using rule 19 (push_operador_PilaOperadores -> .)

    push_operador_PilaOperadores   shift and go to state 156

state 128

    (96) Llamada_Func -> VAR_ID LPAREN agrega_falso . checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion SEMICOLON checa_void
    (57) checa_funcion_si_existe -> .

    LPAREN          reduce using rule 57 (checa_funcion_si_existe -> .)
    VAR_ID          reduce using rule 57 (checa_funcion_si_existe -> .)
    VAR_INT         reduce using rule 57 (checa_funcion_si_existe -> .)
    VAR_DECIMAL     reduce using rule 57 (checa_funcion_si_existe -> .)
    VAR_STRING      reduce using rule 57 (checa_funcion_si_existe -> .)
    FALSE           reduce using rule 57 (checa_funcion_si_existe -> .)
    TRUE            reduce using rule 57 (checa_funcion_si_existe -> .)
    RPAREN          reduce using rule 57 (checa_funcion_si_existe -> .)

    checa_funcion_si_existe        shift and go to state 157

state 129

    (94) Print -> PRINT LPAREN ExpI . RPAREN SEMICOLON crea_print

    RPAREN          shift and go to state 158


state 130

    (106) For -> FOR LPAREN VAR_ID . ASSIGN ExpI SEMICOLON ExpI SEMICOLON VAR_ID Exp_ciclo RPAREN LBRACKET reg_brack RBRACKET

    ASSIGN          shift and go to state 159


state 131

    (101) While -> WHILE guarda_numero_cuadruplo LPAREN . ExpI RPAREN crea_GOTOF LBRACKET reg_brack RBRACKET regresa_inicio_while
    (21) ExpI -> . ExpK resuelve_operadores_relacionales
    (22) ExpI -> . ExpK Operandos push_operador_PilaOperadores ExpK resuelve_operadores_relacionales
    (30) ExpK -> . ExpT resuelve_termino
    (31) ExpK -> . ExpT resuelve_termino pos_SUMRES push_operador_PilaOperadores ExpK
    (35) ExpT -> . ExpF resuelve_factor
    (36) ExpT -> . ExpF resuelve_factor pos_MULTDIV push_operador_PilaOperadores ExpT
    (40) ExpF -> . VAR_CTE
    (41) ExpF -> . LPAREN agrega_falso ExpI RPAREN quita_falso
    (42) ExpF -> . VAR_ID push_var_PilaOperandos pos_arreglo
    (43) ExpF -> . llama_funcion
    (44) VAR_CTE -> . VAR_INT push_int_PilaOperandos
    (45) VAR_CTE -> . VAR_DECIMAL push_decimal_PilaOperandos
    (46) VAR_CTE -> . VAR_STRING push_string_PilaOperandos
    (47) VAR_CTE -> . VAR_BOOL push_bool_PilaOperandos
    (56) llama_funcion -> . VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion guarda_resultado_funcion
    (48) VAR_BOOL -> . FALSE
    (49) VAR_BOOL -> . TRUE

    LPAREN          shift and go to state 88
    VAR_ID          shift and go to state 89
    VAR_INT         shift and go to state 91
    VAR_DECIMAL     shift and go to state 92
    VAR_STRING      shift and go to state 93
    FALSE           shift and go to state 95
    TRUE            shift and go to state 96

    ExpI                           shift and go to state 160
    ExpK                           shift and go to state 84
    ExpT                           shift and go to state 85
    ExpF                           shift and go to state 86
    VAR_CTE                        shift and go to state 87
    llama_funcion                  shift and go to state 90
    VAR_BOOL                       shift and go to state 94

state 132

    (104) DoWhile -> DO guarda_numero_cuadruplo LBRACKET . reg_brack RBRACKET WHILE LPAREN ExpI RPAREN SEMICOLON crea_GOTOV
    (77) reg_brack -> . Estatutos reg_brack
    (78) reg_brack -> .
    (79) Estatutos -> . Condicion
    (80) Estatutos -> . Ciclo
    (81) Estatutos -> . Return
    (82) Estatutos -> . Asignacion
    (83) Estatutos -> . Print
    (84) Estatutos -> . Llamada_Func
    (85) Estatutos -> . Turtle
    (86) Condicion -> . IF LPAREN ExpI RPAREN crea_GOTOF LBRACKET reg_brack RBRACKET pos_else llena_cuadruplo_if
    (98) Ciclo -> . For
    (99) Ciclo -> . While
    (100) Ciclo -> . DoWhile
    (92) Return -> . RETURN ExpI SEMICOLON resuelve_return
    (17) Asignacion -> . VAR_ID push_var_PilaOperandos ASSIGN push_operador_PilaOperadores ExpI SEMICOLON resuelve_asignacion
    (94) Print -> . PRINT LPAREN ExpI RPAREN SEMICOLON crea_print
    (96) Llamada_Func -> . VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion SEMICOLON checa_void
    (115) Turtle -> . Forward
    (116) Turtle -> . Right
    (117) Turtle -> . Left
    (118) Turtle -> . Circle
    (119) Turtle -> . Position
    (120) Turtle -> . IniciaTurtle
    (121) Turtle -> . TerminaTurtle
    (106) For -> . FOR LPAREN VAR_ID ASSIGN ExpI SEMICOLON ExpI SEMICOLON VAR_ID Exp_ciclo RPAREN LBRACKET reg_brack RBRACKET
    (101) While -> . WHILE guarda_numero_cuadruplo LPAREN ExpI RPAREN crea_GOTOF LBRACKET reg_brack RBRACKET regresa_inicio_while
    (104) DoWhile -> . DO guarda_numero_cuadruplo LBRACKET reg_brack RBRACKET WHILE LPAREN ExpI RPAREN SEMICOLON crea_GOTOV
    (122) Forward -> . TUR POINT FORWARD LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_forward
    (124) Right -> . TUR POINT RIGHT LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_right
    (126) Left -> . TUR POINT LEFT LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_left
    (128) Circle -> . TUR POINT CIRCLE LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_circle
    (130) Position -> . TUR POINT POS LPAREN ExpI COMMA ExpI RPAREN SEMICOLON crea_cuadruplo_pos
    (132) IniciaTurtle -> . TUR POINT TURTLE LPAREN RPAREN SEMICOLON crea_cuadruplo_inicia
    (134) TerminaTurtle -> . TUR POINT FINISH LPAREN RPAREN SEMICOLON crea_cuadruplo_termina

    RBRACKET        reduce using rule 78 (reg_brack -> .)
    IF              shift and go to state 59
    RETURN          shift and go to state 63
    VAR_ID          shift and go to state 64
    PRINT           shift and go to state 65
    FOR             shift and go to state 73
    WHILE           shift and go to state 74
    DO              shift and go to state 75
    TUR             shift and go to state 76

    reg_brack                      shift and go to state 161
    Estatutos                      shift and go to state 51
    Condicion                      shift and go to state 52
    Ciclo                          shift and go to state 53
    Return                         shift and go to state 54
    Asignacion                     shift and go to state 55
    Print                          shift and go to state 56
    Llamada_Func                   shift and go to state 57
    Turtle                         shift and go to state 58
    For                            shift and go to state 60
    While                          shift and go to state 61
    DoWhile                        shift and go to state 62
    Forward                        shift and go to state 66
    Right                          shift and go to state 67
    Left                           shift and go to state 68
    Circle                         shift and go to state 69
    Position                       shift and go to state 70
    IniciaTurtle                   shift and go to state 71
    TerminaTurtle                  shift and go to state 72

state 133

    (122) Forward -> TUR POINT FORWARD . LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_forward

    LPAREN          shift and go to state 162


state 134

    (124) Right -> TUR POINT RIGHT . LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_right

    LPAREN          shift and go to state 163


state 135

    (126) Left -> TUR POINT LEFT . LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_left

    LPAREN          shift and go to state 164


state 136

    (128) Circle -> TUR POINT CIRCLE . LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_circle

    LPAREN          shift and go to state 165


state 137

    (130) Position -> TUR POINT POS . LPAREN ExpI COMMA ExpI RPAREN SEMICOLON crea_cuadruplo_pos

    LPAREN          shift and go to state 166


state 138

    (132) IniciaTurtle -> TUR POINT TURTLE . LPAREN RPAREN SEMICOLON crea_cuadruplo_inicia

    LPAREN          shift and go to state 167


state 139

    (134) TerminaTurtle -> TUR POINT FINISH . LPAREN RPAREN SEMICOLON crea_cuadruplo_termina

    LPAREN          shift and go to state 168


state 140

    (67) funciones -> FUNC tipo_funcion VAR_ID LPAREN param RPAREN agrega_funcion LBRACKET Vars reg_brack . RBRACKET fin_func_cuad funciones

    RBRACKET        shift and go to state 169


state 141

    (73) pos_commaf -> COMMA Tipo VAR_ID pos_commaf .

    RPAREN          reduce using rule 73 (pos_commaf -> COMMA Tipo VAR_ID pos_commaf .)


state 142

    (113) Main -> MAIN agrega_main_funcion LPAREN RPAREN LBRACKET Vars reg_brack RET ZERO SEMICOLON . RBRACKET

    RBRACKET        shift and go to state 170


state 143

    (86) Condicion -> IF LPAREN ExpI RPAREN . crea_GOTOF LBRACKET reg_brack RBRACKET pos_else llena_cuadruplo_if
    (87) crea_GOTOF -> .

    LBRACKET        reduce using rule 87 (crea_GOTOF -> .)

    crea_GOTOF                     shift and go to state 171

state 144

    (92) Return -> RETURN ExpI SEMICOLON resuelve_return .

    IF              reduce using rule 92 (Return -> RETURN ExpI SEMICOLON resuelve_return .)
    RETURN          reduce using rule 92 (Return -> RETURN ExpI SEMICOLON resuelve_return .)
    VAR_ID          reduce using rule 92 (Return -> RETURN ExpI SEMICOLON resuelve_return .)
    PRINT           reduce using rule 92 (Return -> RETURN ExpI SEMICOLON resuelve_return .)
    FOR             reduce using rule 92 (Return -> RETURN ExpI SEMICOLON resuelve_return .)
    WHILE           reduce using rule 92 (Return -> RETURN ExpI SEMICOLON resuelve_return .)
    DO              reduce using rule 92 (Return -> RETURN ExpI SEMICOLON resuelve_return .)
    TUR             reduce using rule 92 (Return -> RETURN ExpI SEMICOLON resuelve_return .)
    RET             reduce using rule 92 (Return -> RETURN ExpI SEMICOLON resuelve_return .)
    RBRACKET        reduce using rule 92 (Return -> RETURN ExpI SEMICOLON resuelve_return .)


state 145

    (22) ExpI -> ExpK Operandos push_operador_PilaOperadores . ExpK resuelve_operadores_relacionales
    (30) ExpK -> . ExpT resuelve_termino
    (31) ExpK -> . ExpT resuelve_termino pos_SUMRES push_operador_PilaOperadores ExpK
    (35) ExpT -> . ExpF resuelve_factor
    (36) ExpT -> . ExpF resuelve_factor pos_MULTDIV push_operador_PilaOperadores ExpT
    (40) ExpF -> . VAR_CTE
    (41) ExpF -> . LPAREN agrega_falso ExpI RPAREN quita_falso
    (42) ExpF -> . VAR_ID push_var_PilaOperandos pos_arreglo
    (43) ExpF -> . llama_funcion
    (44) VAR_CTE -> . VAR_INT push_int_PilaOperandos
    (45) VAR_CTE -> . VAR_DECIMAL push_decimal_PilaOperandos
    (46) VAR_CTE -> . VAR_STRING push_string_PilaOperandos
    (47) VAR_CTE -> . VAR_BOOL push_bool_PilaOperandos
    (56) llama_funcion -> . VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion guarda_resultado_funcion
    (48) VAR_BOOL -> . FALSE
    (49) VAR_BOOL -> . TRUE

    LPAREN          shift and go to state 88
    VAR_ID          shift and go to state 89
    VAR_INT         shift and go to state 91
    VAR_DECIMAL     shift and go to state 92
    VAR_STRING      shift and go to state 93
    FALSE           shift and go to state 95
    TRUE            shift and go to state 96

    ExpK                           shift and go to state 172
    ExpT                           shift and go to state 85
    ExpF                           shift and go to state 86
    VAR_CTE                        shift and go to state 87
    llama_funcion                  shift and go to state 90
    VAR_BOOL                       shift and go to state 94

state 146

    (31) ExpK -> ExpT resuelve_termino pos_SUMRES . push_operador_PilaOperadores ExpK
    (19) push_operador_PilaOperadores -> .

    LPAREN          reduce using rule 19 (push_operador_PilaOperadores -> .)
    VAR_ID          reduce using rule 19 (push_operador_PilaOperadores -> .)
    VAR_INT         reduce using rule 19 (push_operador_PilaOperadores -> .)
    VAR_DECIMAL     reduce using rule 19 (push_operador_PilaOperadores -> .)
    VAR_STRING      reduce using rule 19 (push_operador_PilaOperadores -> .)
    FALSE           reduce using rule 19 (push_operador_PilaOperadores -> .)
    TRUE            reduce using rule 19 (push_operador_PilaOperadores -> .)

    push_operador_PilaOperadores   shift and go to state 173

state 147

    (33) pos_SUMRES -> PLUS .

    LPAREN          reduce using rule 33 (pos_SUMRES -> PLUS .)
    VAR_ID          reduce using rule 33 (pos_SUMRES -> PLUS .)
    VAR_INT         reduce using rule 33 (pos_SUMRES -> PLUS .)
    VAR_DECIMAL     reduce using rule 33 (pos_SUMRES -> PLUS .)
    VAR_STRING      reduce using rule 33 (pos_SUMRES -> PLUS .)
    FALSE           reduce using rule 33 (pos_SUMRES -> PLUS .)
    TRUE            reduce using rule 33 (pos_SUMRES -> PLUS .)


state 148

    (34) pos_SUMRES -> MINUS .

    LPAREN          reduce using rule 34 (pos_SUMRES -> MINUS .)
    VAR_ID          reduce using rule 34 (pos_SUMRES -> MINUS .)
    VAR_INT         reduce using rule 34 (pos_SUMRES -> MINUS .)
    VAR_DECIMAL     reduce using rule 34 (pos_SUMRES -> MINUS .)
    VAR_STRING      reduce using rule 34 (pos_SUMRES -> MINUS .)
    FALSE           reduce using rule 34 (pos_SUMRES -> MINUS .)
    TRUE            reduce using rule 34 (pos_SUMRES -> MINUS .)


state 149

    (36) ExpT -> ExpF resuelve_factor pos_MULTDIV . push_operador_PilaOperadores ExpT
    (19) push_operador_PilaOperadores -> .

    LPAREN          reduce using rule 19 (push_operador_PilaOperadores -> .)
    VAR_ID          reduce using rule 19 (push_operador_PilaOperadores -> .)
    VAR_INT         reduce using rule 19 (push_operador_PilaOperadores -> .)
    VAR_DECIMAL     reduce using rule 19 (push_operador_PilaOperadores -> .)
    VAR_STRING      reduce using rule 19 (push_operador_PilaOperadores -> .)
    FALSE           reduce using rule 19 (push_operador_PilaOperadores -> .)
    TRUE            reduce using rule 19 (push_operador_PilaOperadores -> .)

    push_operador_PilaOperadores   shift and go to state 174

state 150

    (38) pos_MULTDIV -> MULT .

    LPAREN          reduce using rule 38 (pos_MULTDIV -> MULT .)
    VAR_ID          reduce using rule 38 (pos_MULTDIV -> MULT .)
    VAR_INT         reduce using rule 38 (pos_MULTDIV -> MULT .)
    VAR_DECIMAL     reduce using rule 38 (pos_MULTDIV -> MULT .)
    VAR_STRING      reduce using rule 38 (pos_MULTDIV -> MULT .)
    FALSE           reduce using rule 38 (pos_MULTDIV -> MULT .)
    TRUE            reduce using rule 38 (pos_MULTDIV -> MULT .)


state 151

    (39) pos_MULTDIV -> DIV .

    LPAREN          reduce using rule 39 (pos_MULTDIV -> DIV .)
    VAR_ID          reduce using rule 39 (pos_MULTDIV -> DIV .)
    VAR_INT         reduce using rule 39 (pos_MULTDIV -> DIV .)
    VAR_DECIMAL     reduce using rule 39 (pos_MULTDIV -> DIV .)
    VAR_STRING      reduce using rule 39 (pos_MULTDIV -> DIV .)
    FALSE           reduce using rule 39 (pos_MULTDIV -> DIV .)
    TRUE            reduce using rule 39 (pos_MULTDIV -> DIV .)


state 152

    (41) ExpF -> LPAREN agrega_falso ExpI . RPAREN quita_falso

    RPAREN          shift and go to state 175


state 153

    (42) ExpF -> VAR_ID push_var_PilaOperandos pos_arreglo .

    MULT            reduce using rule 42 (ExpF -> VAR_ID push_var_PilaOperandos pos_arreglo .)
    DIV             reduce using rule 42 (ExpF -> VAR_ID push_var_PilaOperandos pos_arreglo .)
    PLUS            reduce using rule 42 (ExpF -> VAR_ID push_var_PilaOperandos pos_arreglo .)
    MINUS           reduce using rule 42 (ExpF -> VAR_ID push_var_PilaOperandos pos_arreglo .)
    LT              reduce using rule 42 (ExpF -> VAR_ID push_var_PilaOperandos pos_arreglo .)
    GT              reduce using rule 42 (ExpF -> VAR_ID push_var_PilaOperandos pos_arreglo .)
    NE              reduce using rule 42 (ExpF -> VAR_ID push_var_PilaOperandos pos_arreglo .)
    LE              reduce using rule 42 (ExpF -> VAR_ID push_var_PilaOperandos pos_arreglo .)
    GE              reduce using rule 42 (ExpF -> VAR_ID push_var_PilaOperandos pos_arreglo .)
    EQ              reduce using rule 42 (ExpF -> VAR_ID push_var_PilaOperandos pos_arreglo .)
    SEMICOLON       reduce using rule 42 (ExpF -> VAR_ID push_var_PilaOperandos pos_arreglo .)
    RPAREN          reduce using rule 42 (ExpF -> VAR_ID push_var_PilaOperandos pos_arreglo .)
    SRBRACKET       reduce using rule 42 (ExpF -> VAR_ID push_var_PilaOperandos pos_arreglo .)
    COMMA           reduce using rule 42 (ExpF -> VAR_ID push_var_PilaOperandos pos_arreglo .)


state 154

    (65) pos_arreglo -> SLBRACKET . ExpI SRBRACKET
    (21) ExpI -> . ExpK resuelve_operadores_relacionales
    (22) ExpI -> . ExpK Operandos push_operador_PilaOperadores ExpK resuelve_operadores_relacionales
    (30) ExpK -> . ExpT resuelve_termino
    (31) ExpK -> . ExpT resuelve_termino pos_SUMRES push_operador_PilaOperadores ExpK
    (35) ExpT -> . ExpF resuelve_factor
    (36) ExpT -> . ExpF resuelve_factor pos_MULTDIV push_operador_PilaOperadores ExpT
    (40) ExpF -> . VAR_CTE
    (41) ExpF -> . LPAREN agrega_falso ExpI RPAREN quita_falso
    (42) ExpF -> . VAR_ID push_var_PilaOperandos pos_arreglo
    (43) ExpF -> . llama_funcion
    (44) VAR_CTE -> . VAR_INT push_int_PilaOperandos
    (45) VAR_CTE -> . VAR_DECIMAL push_decimal_PilaOperandos
    (46) VAR_CTE -> . VAR_STRING push_string_PilaOperandos
    (47) VAR_CTE -> . VAR_BOOL push_bool_PilaOperandos
    (56) llama_funcion -> . VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion guarda_resultado_funcion
    (48) VAR_BOOL -> . FALSE
    (49) VAR_BOOL -> . TRUE

    LPAREN          shift and go to state 88
    VAR_ID          shift and go to state 89
    VAR_INT         shift and go to state 91
    VAR_DECIMAL     shift and go to state 92
    VAR_STRING      shift and go to state 93
    FALSE           shift and go to state 95
    TRUE            shift and go to state 96

    ExpI                           shift and go to state 176
    ExpK                           shift and go to state 84
    ExpT                           shift and go to state 85
    ExpF                           shift and go to state 86
    VAR_CTE                        shift and go to state 87
    llama_funcion                  shift and go to state 90
    VAR_BOOL                       shift and go to state 94

state 155

    (56) llama_funcion -> VAR_ID LPAREN agrega_falso . checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion guarda_resultado_funcion
    (57) checa_funcion_si_existe -> .

    LPAREN          reduce using rule 57 (checa_funcion_si_existe -> .)
    VAR_ID          reduce using rule 57 (checa_funcion_si_existe -> .)
    VAR_INT         reduce using rule 57 (checa_funcion_si_existe -> .)
    VAR_DECIMAL     reduce using rule 57 (checa_funcion_si_existe -> .)
    VAR_STRING      reduce using rule 57 (checa_funcion_si_existe -> .)
    FALSE           reduce using rule 57 (checa_funcion_si_existe -> .)
    TRUE            reduce using rule 57 (checa_funcion_si_existe -> .)
    RPAREN          reduce using rule 57 (checa_funcion_si_existe -> .)

    checa_funcion_si_existe        shift and go to state 177

state 156

    (17) Asignacion -> VAR_ID push_var_PilaOperandos ASSIGN push_operador_PilaOperadores . ExpI SEMICOLON resuelve_asignacion
    (21) ExpI -> . ExpK resuelve_operadores_relacionales
    (22) ExpI -> . ExpK Operandos push_operador_PilaOperadores ExpK resuelve_operadores_relacionales
    (30) ExpK -> . ExpT resuelve_termino
    (31) ExpK -> . ExpT resuelve_termino pos_SUMRES push_operador_PilaOperadores ExpK
    (35) ExpT -> . ExpF resuelve_factor
    (36) ExpT -> . ExpF resuelve_factor pos_MULTDIV push_operador_PilaOperadores ExpT
    (40) ExpF -> . VAR_CTE
    (41) ExpF -> . LPAREN agrega_falso ExpI RPAREN quita_falso
    (42) ExpF -> . VAR_ID push_var_PilaOperandos pos_arreglo
    (43) ExpF -> . llama_funcion
    (44) VAR_CTE -> . VAR_INT push_int_PilaOperandos
    (45) VAR_CTE -> . VAR_DECIMAL push_decimal_PilaOperandos
    (46) VAR_CTE -> . VAR_STRING push_string_PilaOperandos
    (47) VAR_CTE -> . VAR_BOOL push_bool_PilaOperandos
    (56) llama_funcion -> . VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion guarda_resultado_funcion
    (48) VAR_BOOL -> . FALSE
    (49) VAR_BOOL -> . TRUE

    LPAREN          shift and go to state 88
    VAR_ID          shift and go to state 89
    VAR_INT         shift and go to state 91
    VAR_DECIMAL     shift and go to state 92
    VAR_STRING      shift and go to state 93
    FALSE           shift and go to state 95
    TRUE            shift and go to state 96

    ExpI                           shift and go to state 178
    ExpK                           shift and go to state 84
    ExpT                           shift and go to state 85
    ExpF                           shift and go to state 86
    VAR_CTE                        shift and go to state 87
    llama_funcion                  shift and go to state 90
    VAR_BOOL                       shift and go to state 94

state 157

    (96) Llamada_Func -> VAR_ID LPAREN agrega_falso checa_funcion_si_existe . argumentos RPAREN quita_falso resuelve_llamada_funcion SEMICOLON checa_void
    (58) argumentos -> . ExpI resuelve_argumentos mas_argumentos
    (59) argumentos -> .
    (21) ExpI -> . ExpK resuelve_operadores_relacionales
    (22) ExpI -> . ExpK Operandos push_operador_PilaOperadores ExpK resuelve_operadores_relacionales
    (30) ExpK -> . ExpT resuelve_termino
    (31) ExpK -> . ExpT resuelve_termino pos_SUMRES push_operador_PilaOperadores ExpK
    (35) ExpT -> . ExpF resuelve_factor
    (36) ExpT -> . ExpF resuelve_factor pos_MULTDIV push_operador_PilaOperadores ExpT
    (40) ExpF -> . VAR_CTE
    (41) ExpF -> . LPAREN agrega_falso ExpI RPAREN quita_falso
    (42) ExpF -> . VAR_ID push_var_PilaOperandos pos_arreglo
    (43) ExpF -> . llama_funcion
    (44) VAR_CTE -> . VAR_INT push_int_PilaOperandos
    (45) VAR_CTE -> . VAR_DECIMAL push_decimal_PilaOperandos
    (46) VAR_CTE -> . VAR_STRING push_string_PilaOperandos
    (47) VAR_CTE -> . VAR_BOOL push_bool_PilaOperandos
    (56) llama_funcion -> . VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion guarda_resultado_funcion
    (48) VAR_BOOL -> . FALSE
    (49) VAR_BOOL -> . TRUE

    RPAREN          reduce using rule 59 (argumentos -> .)
    LPAREN          shift and go to state 88
    VAR_ID          shift and go to state 89
    VAR_INT         shift and go to state 91
    VAR_DECIMAL     shift and go to state 92
    VAR_STRING      shift and go to state 93
    FALSE           shift and go to state 95
    TRUE            shift and go to state 96

    argumentos                     shift and go to state 179
    ExpI                           shift and go to state 180
    ExpK                           shift and go to state 84
    ExpT                           shift and go to state 85
    ExpF                           shift and go to state 86
    VAR_CTE                        shift and go to state 87
    llama_funcion                  shift and go to state 90
    VAR_BOOL                       shift and go to state 94

state 158

    (94) Print -> PRINT LPAREN ExpI RPAREN . SEMICOLON crea_print

    SEMICOLON       shift and go to state 181


state 159

    (106) For -> FOR LPAREN VAR_ID ASSIGN . ExpI SEMICOLON ExpI SEMICOLON VAR_ID Exp_ciclo RPAREN LBRACKET reg_brack RBRACKET
    (21) ExpI -> . ExpK resuelve_operadores_relacionales
    (22) ExpI -> . ExpK Operandos push_operador_PilaOperadores ExpK resuelve_operadores_relacionales
    (30) ExpK -> . ExpT resuelve_termino
    (31) ExpK -> . ExpT resuelve_termino pos_SUMRES push_operador_PilaOperadores ExpK
    (35) ExpT -> . ExpF resuelve_factor
    (36) ExpT -> . ExpF resuelve_factor pos_MULTDIV push_operador_PilaOperadores ExpT
    (40) ExpF -> . VAR_CTE
    (41) ExpF -> . LPAREN agrega_falso ExpI RPAREN quita_falso
    (42) ExpF -> . VAR_ID push_var_PilaOperandos pos_arreglo
    (43) ExpF -> . llama_funcion
    (44) VAR_CTE -> . VAR_INT push_int_PilaOperandos
    (45) VAR_CTE -> . VAR_DECIMAL push_decimal_PilaOperandos
    (46) VAR_CTE -> . VAR_STRING push_string_PilaOperandos
    (47) VAR_CTE -> . VAR_BOOL push_bool_PilaOperandos
    (56) llama_funcion -> . VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion guarda_resultado_funcion
    (48) VAR_BOOL -> . FALSE
    (49) VAR_BOOL -> . TRUE

    LPAREN          shift and go to state 88
    VAR_ID          shift and go to state 89
    VAR_INT         shift and go to state 91
    VAR_DECIMAL     shift and go to state 92
    VAR_STRING      shift and go to state 93
    FALSE           shift and go to state 95
    TRUE            shift and go to state 96

    ExpI                           shift and go to state 182
    ExpK                           shift and go to state 84
    ExpT                           shift and go to state 85
    ExpF                           shift and go to state 86
    VAR_CTE                        shift and go to state 87
    llama_funcion                  shift and go to state 90
    VAR_BOOL                       shift and go to state 94

state 160

    (101) While -> WHILE guarda_numero_cuadruplo LPAREN ExpI . RPAREN crea_GOTOF LBRACKET reg_brack RBRACKET regresa_inicio_while

    RPAREN          shift and go to state 183


state 161

    (104) DoWhile -> DO guarda_numero_cuadruplo LBRACKET reg_brack . RBRACKET WHILE LPAREN ExpI RPAREN SEMICOLON crea_GOTOV

    RBRACKET        shift and go to state 184


state 162

    (122) Forward -> TUR POINT FORWARD LPAREN . ExpI RPAREN SEMICOLON crea_cuadruplo_forward
    (21) ExpI -> . ExpK resuelve_operadores_relacionales
    (22) ExpI -> . ExpK Operandos push_operador_PilaOperadores ExpK resuelve_operadores_relacionales
    (30) ExpK -> . ExpT resuelve_termino
    (31) ExpK -> . ExpT resuelve_termino pos_SUMRES push_operador_PilaOperadores ExpK
    (35) ExpT -> . ExpF resuelve_factor
    (36) ExpT -> . ExpF resuelve_factor pos_MULTDIV push_operador_PilaOperadores ExpT
    (40) ExpF -> . VAR_CTE
    (41) ExpF -> . LPAREN agrega_falso ExpI RPAREN quita_falso
    (42) ExpF -> . VAR_ID push_var_PilaOperandos pos_arreglo
    (43) ExpF -> . llama_funcion
    (44) VAR_CTE -> . VAR_INT push_int_PilaOperandos
    (45) VAR_CTE -> . VAR_DECIMAL push_decimal_PilaOperandos
    (46) VAR_CTE -> . VAR_STRING push_string_PilaOperandos
    (47) VAR_CTE -> . VAR_BOOL push_bool_PilaOperandos
    (56) llama_funcion -> . VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion guarda_resultado_funcion
    (48) VAR_BOOL -> . FALSE
    (49) VAR_BOOL -> . TRUE

    LPAREN          shift and go to state 88
    VAR_ID          shift and go to state 89
    VAR_INT         shift and go to state 91
    VAR_DECIMAL     shift and go to state 92
    VAR_STRING      shift and go to state 93
    FALSE           shift and go to state 95
    TRUE            shift and go to state 96

    ExpI                           shift and go to state 185
    ExpK                           shift and go to state 84
    ExpT                           shift and go to state 85
    ExpF                           shift and go to state 86
    VAR_CTE                        shift and go to state 87
    llama_funcion                  shift and go to state 90
    VAR_BOOL                       shift and go to state 94

state 163

    (124) Right -> TUR POINT RIGHT LPAREN . ExpI RPAREN SEMICOLON crea_cuadruplo_right
    (21) ExpI -> . ExpK resuelve_operadores_relacionales
    (22) ExpI -> . ExpK Operandos push_operador_PilaOperadores ExpK resuelve_operadores_relacionales
    (30) ExpK -> . ExpT resuelve_termino
    (31) ExpK -> . ExpT resuelve_termino pos_SUMRES push_operador_PilaOperadores ExpK
    (35) ExpT -> . ExpF resuelve_factor
    (36) ExpT -> . ExpF resuelve_factor pos_MULTDIV push_operador_PilaOperadores ExpT
    (40) ExpF -> . VAR_CTE
    (41) ExpF -> . LPAREN agrega_falso ExpI RPAREN quita_falso
    (42) ExpF -> . VAR_ID push_var_PilaOperandos pos_arreglo
    (43) ExpF -> . llama_funcion
    (44) VAR_CTE -> . VAR_INT push_int_PilaOperandos
    (45) VAR_CTE -> . VAR_DECIMAL push_decimal_PilaOperandos
    (46) VAR_CTE -> . VAR_STRING push_string_PilaOperandos
    (47) VAR_CTE -> . VAR_BOOL push_bool_PilaOperandos
    (56) llama_funcion -> . VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion guarda_resultado_funcion
    (48) VAR_BOOL -> . FALSE
    (49) VAR_BOOL -> . TRUE

    LPAREN          shift and go to state 88
    VAR_ID          shift and go to state 89
    VAR_INT         shift and go to state 91
    VAR_DECIMAL     shift and go to state 92
    VAR_STRING      shift and go to state 93
    FALSE           shift and go to state 95
    TRUE            shift and go to state 96

    ExpI                           shift and go to state 186
    ExpK                           shift and go to state 84
    ExpT                           shift and go to state 85
    ExpF                           shift and go to state 86
    VAR_CTE                        shift and go to state 87
    llama_funcion                  shift and go to state 90
    VAR_BOOL                       shift and go to state 94

state 164

    (126) Left -> TUR POINT LEFT LPAREN . ExpI RPAREN SEMICOLON crea_cuadruplo_left
    (21) ExpI -> . ExpK resuelve_operadores_relacionales
    (22) ExpI -> . ExpK Operandos push_operador_PilaOperadores ExpK resuelve_operadores_relacionales
    (30) ExpK -> . ExpT resuelve_termino
    (31) ExpK -> . ExpT resuelve_termino pos_SUMRES push_operador_PilaOperadores ExpK
    (35) ExpT -> . ExpF resuelve_factor
    (36) ExpT -> . ExpF resuelve_factor pos_MULTDIV push_operador_PilaOperadores ExpT
    (40) ExpF -> . VAR_CTE
    (41) ExpF -> . LPAREN agrega_falso ExpI RPAREN quita_falso
    (42) ExpF -> . VAR_ID push_var_PilaOperandos pos_arreglo
    (43) ExpF -> . llama_funcion
    (44) VAR_CTE -> . VAR_INT push_int_PilaOperandos
    (45) VAR_CTE -> . VAR_DECIMAL push_decimal_PilaOperandos
    (46) VAR_CTE -> . VAR_STRING push_string_PilaOperandos
    (47) VAR_CTE -> . VAR_BOOL push_bool_PilaOperandos
    (56) llama_funcion -> . VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion guarda_resultado_funcion
    (48) VAR_BOOL -> . FALSE
    (49) VAR_BOOL -> . TRUE

    LPAREN          shift and go to state 88
    VAR_ID          shift and go to state 89
    VAR_INT         shift and go to state 91
    VAR_DECIMAL     shift and go to state 92
    VAR_STRING      shift and go to state 93
    FALSE           shift and go to state 95
    TRUE            shift and go to state 96

    ExpI                           shift and go to state 187
    ExpK                           shift and go to state 84
    ExpT                           shift and go to state 85
    ExpF                           shift and go to state 86
    VAR_CTE                        shift and go to state 87
    llama_funcion                  shift and go to state 90
    VAR_BOOL                       shift and go to state 94

state 165

    (128) Circle -> TUR POINT CIRCLE LPAREN . ExpI RPAREN SEMICOLON crea_cuadruplo_circle
    (21) ExpI -> . ExpK resuelve_operadores_relacionales
    (22) ExpI -> . ExpK Operandos push_operador_PilaOperadores ExpK resuelve_operadores_relacionales
    (30) ExpK -> . ExpT resuelve_termino
    (31) ExpK -> . ExpT resuelve_termino pos_SUMRES push_operador_PilaOperadores ExpK
    (35) ExpT -> . ExpF resuelve_factor
    (36) ExpT -> . ExpF resuelve_factor pos_MULTDIV push_operador_PilaOperadores ExpT
    (40) ExpF -> . VAR_CTE
    (41) ExpF -> . LPAREN agrega_falso ExpI RPAREN quita_falso
    (42) ExpF -> . VAR_ID push_var_PilaOperandos pos_arreglo
    (43) ExpF -> . llama_funcion
    (44) VAR_CTE -> . VAR_INT push_int_PilaOperandos
    (45) VAR_CTE -> . VAR_DECIMAL push_decimal_PilaOperandos
    (46) VAR_CTE -> . VAR_STRING push_string_PilaOperandos
    (47) VAR_CTE -> . VAR_BOOL push_bool_PilaOperandos
    (56) llama_funcion -> . VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion guarda_resultado_funcion
    (48) VAR_BOOL -> . FALSE
    (49) VAR_BOOL -> . TRUE

    LPAREN          shift and go to state 88
    VAR_ID          shift and go to state 89
    VAR_INT         shift and go to state 91
    VAR_DECIMAL     shift and go to state 92
    VAR_STRING      shift and go to state 93
    FALSE           shift and go to state 95
    TRUE            shift and go to state 96

    ExpI                           shift and go to state 188
    ExpK                           shift and go to state 84
    ExpT                           shift and go to state 85
    ExpF                           shift and go to state 86
    VAR_CTE                        shift and go to state 87
    llama_funcion                  shift and go to state 90
    VAR_BOOL                       shift and go to state 94

state 166

    (130) Position -> TUR POINT POS LPAREN . ExpI COMMA ExpI RPAREN SEMICOLON crea_cuadruplo_pos
    (21) ExpI -> . ExpK resuelve_operadores_relacionales
    (22) ExpI -> . ExpK Operandos push_operador_PilaOperadores ExpK resuelve_operadores_relacionales
    (30) ExpK -> . ExpT resuelve_termino
    (31) ExpK -> . ExpT resuelve_termino pos_SUMRES push_operador_PilaOperadores ExpK
    (35) ExpT -> . ExpF resuelve_factor
    (36) ExpT -> . ExpF resuelve_factor pos_MULTDIV push_operador_PilaOperadores ExpT
    (40) ExpF -> . VAR_CTE
    (41) ExpF -> . LPAREN agrega_falso ExpI RPAREN quita_falso
    (42) ExpF -> . VAR_ID push_var_PilaOperandos pos_arreglo
    (43) ExpF -> . llama_funcion
    (44) VAR_CTE -> . VAR_INT push_int_PilaOperandos
    (45) VAR_CTE -> . VAR_DECIMAL push_decimal_PilaOperandos
    (46) VAR_CTE -> . VAR_STRING push_string_PilaOperandos
    (47) VAR_CTE -> . VAR_BOOL push_bool_PilaOperandos
    (56) llama_funcion -> . VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion guarda_resultado_funcion
    (48) VAR_BOOL -> . FALSE
    (49) VAR_BOOL -> . TRUE

    LPAREN          shift and go to state 88
    VAR_ID          shift and go to state 89
    VAR_INT         shift and go to state 91
    VAR_DECIMAL     shift and go to state 92
    VAR_STRING      shift and go to state 93
    FALSE           shift and go to state 95
    TRUE            shift and go to state 96

    ExpI                           shift and go to state 189
    ExpK                           shift and go to state 84
    ExpT                           shift and go to state 85
    ExpF                           shift and go to state 86
    VAR_CTE                        shift and go to state 87
    llama_funcion                  shift and go to state 90
    VAR_BOOL                       shift and go to state 94

state 167

    (132) IniciaTurtle -> TUR POINT TURTLE LPAREN . RPAREN SEMICOLON crea_cuadruplo_inicia

    RPAREN          shift and go to state 190


state 168

    (134) TerminaTurtle -> TUR POINT FINISH LPAREN . RPAREN SEMICOLON crea_cuadruplo_termina

    RPAREN          shift and go to state 191


state 169

    (67) funciones -> FUNC tipo_funcion VAR_ID LPAREN param RPAREN agrega_funcion LBRACKET Vars reg_brack RBRACKET . fin_func_cuad funciones
    (76) fin_func_cuad -> .

    FUNC            reduce using rule 76 (fin_func_cuad -> .)
    MAIN            reduce using rule 76 (fin_func_cuad -> .)

    fin_func_cuad                  shift and go to state 192

state 170

    (113) Main -> MAIN agrega_main_funcion LPAREN RPAREN LBRACKET Vars reg_brack RET ZERO SEMICOLON RBRACKET .

    $end            reduce using rule 113 (Main -> MAIN agrega_main_funcion LPAREN RPAREN LBRACKET Vars reg_brack RET ZERO SEMICOLON RBRACKET .)


state 171

    (86) Condicion -> IF LPAREN ExpI RPAREN crea_GOTOF . LBRACKET reg_brack RBRACKET pos_else llena_cuadruplo_if

    LBRACKET        shift and go to state 193


state 172

    (22) ExpI -> ExpK Operandos push_operador_PilaOperadores ExpK . resuelve_operadores_relacionales
    (29) resuelve_operadores_relacionales -> .

    SEMICOLON       reduce using rule 29 (resuelve_operadores_relacionales -> .)
    RPAREN          reduce using rule 29 (resuelve_operadores_relacionales -> .)
    SRBRACKET       reduce using rule 29 (resuelve_operadores_relacionales -> .)
    COMMA           reduce using rule 29 (resuelve_operadores_relacionales -> .)

    resuelve_operadores_relacionales shift and go to state 194

state 173

    (31) ExpK -> ExpT resuelve_termino pos_SUMRES push_operador_PilaOperadores . ExpK
    (30) ExpK -> . ExpT resuelve_termino
    (31) ExpK -> . ExpT resuelve_termino pos_SUMRES push_operador_PilaOperadores ExpK
    (35) ExpT -> . ExpF resuelve_factor
    (36) ExpT -> . ExpF resuelve_factor pos_MULTDIV push_operador_PilaOperadores ExpT
    (40) ExpF -> . VAR_CTE
    (41) ExpF -> . LPAREN agrega_falso ExpI RPAREN quita_falso
    (42) ExpF -> . VAR_ID push_var_PilaOperandos pos_arreglo
    (43) ExpF -> . llama_funcion
    (44) VAR_CTE -> . VAR_INT push_int_PilaOperandos
    (45) VAR_CTE -> . VAR_DECIMAL push_decimal_PilaOperandos
    (46) VAR_CTE -> . VAR_STRING push_string_PilaOperandos
    (47) VAR_CTE -> . VAR_BOOL push_bool_PilaOperandos
    (56) llama_funcion -> . VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion guarda_resultado_funcion
    (48) VAR_BOOL -> . FALSE
    (49) VAR_BOOL -> . TRUE

    LPAREN          shift and go to state 88
    VAR_ID          shift and go to state 89
    VAR_INT         shift and go to state 91
    VAR_DECIMAL     shift and go to state 92
    VAR_STRING      shift and go to state 93
    FALSE           shift and go to state 95
    TRUE            shift and go to state 96

    ExpT                           shift and go to state 85
    ExpK                           shift and go to state 195
    ExpF                           shift and go to state 86
    VAR_CTE                        shift and go to state 87
    llama_funcion                  shift and go to state 90
    VAR_BOOL                       shift and go to state 94

state 174

    (36) ExpT -> ExpF resuelve_factor pos_MULTDIV push_operador_PilaOperadores . ExpT
    (35) ExpT -> . ExpF resuelve_factor
    (36) ExpT -> . ExpF resuelve_factor pos_MULTDIV push_operador_PilaOperadores ExpT
    (40) ExpF -> . VAR_CTE
    (41) ExpF -> . LPAREN agrega_falso ExpI RPAREN quita_falso
    (42) ExpF -> . VAR_ID push_var_PilaOperandos pos_arreglo
    (43) ExpF -> . llama_funcion
    (44) VAR_CTE -> . VAR_INT push_int_PilaOperandos
    (45) VAR_CTE -> . VAR_DECIMAL push_decimal_PilaOperandos
    (46) VAR_CTE -> . VAR_STRING push_string_PilaOperandos
    (47) VAR_CTE -> . VAR_BOOL push_bool_PilaOperandos
    (56) llama_funcion -> . VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion guarda_resultado_funcion
    (48) VAR_BOOL -> . FALSE
    (49) VAR_BOOL -> . TRUE

    LPAREN          shift and go to state 88
    VAR_ID          shift and go to state 89
    VAR_INT         shift and go to state 91
    VAR_DECIMAL     shift and go to state 92
    VAR_STRING      shift and go to state 93
    FALSE           shift and go to state 95
    TRUE            shift and go to state 96

    ExpF                           shift and go to state 86
    ExpT                           shift and go to state 196
    VAR_CTE                        shift and go to state 87
    llama_funcion                  shift and go to state 90
    VAR_BOOL                       shift and go to state 94

state 175

    (41) ExpF -> LPAREN agrega_falso ExpI RPAREN . quita_falso
    (55) quita_falso -> .

    MULT            reduce using rule 55 (quita_falso -> .)
    DIV             reduce using rule 55 (quita_falso -> .)
    PLUS            reduce using rule 55 (quita_falso -> .)
    MINUS           reduce using rule 55 (quita_falso -> .)
    LT              reduce using rule 55 (quita_falso -> .)
    GT              reduce using rule 55 (quita_falso -> .)
    NE              reduce using rule 55 (quita_falso -> .)
    LE              reduce using rule 55 (quita_falso -> .)
    GE              reduce using rule 55 (quita_falso -> .)
    EQ              reduce using rule 55 (quita_falso -> .)
    SEMICOLON       reduce using rule 55 (quita_falso -> .)
    RPAREN          reduce using rule 55 (quita_falso -> .)
    SRBRACKET       reduce using rule 55 (quita_falso -> .)
    COMMA           reduce using rule 55 (quita_falso -> .)

    quita_falso                    shift and go to state 197

state 176

    (65) pos_arreglo -> SLBRACKET ExpI . SRBRACKET

    SRBRACKET       shift and go to state 198


state 177

    (56) llama_funcion -> VAR_ID LPAREN agrega_falso checa_funcion_si_existe . argumentos RPAREN quita_falso resuelve_llamada_funcion guarda_resultado_funcion
    (58) argumentos -> . ExpI resuelve_argumentos mas_argumentos
    (59) argumentos -> .
    (21) ExpI -> . ExpK resuelve_operadores_relacionales
    (22) ExpI -> . ExpK Operandos push_operador_PilaOperadores ExpK resuelve_operadores_relacionales
    (30) ExpK -> . ExpT resuelve_termino
    (31) ExpK -> . ExpT resuelve_termino pos_SUMRES push_operador_PilaOperadores ExpK
    (35) ExpT -> . ExpF resuelve_factor
    (36) ExpT -> . ExpF resuelve_factor pos_MULTDIV push_operador_PilaOperadores ExpT
    (40) ExpF -> . VAR_CTE
    (41) ExpF -> . LPAREN agrega_falso ExpI RPAREN quita_falso
    (42) ExpF -> . VAR_ID push_var_PilaOperandos pos_arreglo
    (43) ExpF -> . llama_funcion
    (44) VAR_CTE -> . VAR_INT push_int_PilaOperandos
    (45) VAR_CTE -> . VAR_DECIMAL push_decimal_PilaOperandos
    (46) VAR_CTE -> . VAR_STRING push_string_PilaOperandos
    (47) VAR_CTE -> . VAR_BOOL push_bool_PilaOperandos
    (56) llama_funcion -> . VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion guarda_resultado_funcion
    (48) VAR_BOOL -> . FALSE
    (49) VAR_BOOL -> . TRUE

    RPAREN          reduce using rule 59 (argumentos -> .)
    LPAREN          shift and go to state 88
    VAR_ID          shift and go to state 89
    VAR_INT         shift and go to state 91
    VAR_DECIMAL     shift and go to state 92
    VAR_STRING      shift and go to state 93
    FALSE           shift and go to state 95
    TRUE            shift and go to state 96

    argumentos                     shift and go to state 199
    ExpI                           shift and go to state 180
    ExpK                           shift and go to state 84
    ExpT                           shift and go to state 85
    ExpF                           shift and go to state 86
    VAR_CTE                        shift and go to state 87
    llama_funcion                  shift and go to state 90
    VAR_BOOL                       shift and go to state 94

state 178

    (17) Asignacion -> VAR_ID push_var_PilaOperandos ASSIGN push_operador_PilaOperadores ExpI . SEMICOLON resuelve_asignacion

    SEMICOLON       shift and go to state 200


state 179

    (96) Llamada_Func -> VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos . RPAREN quita_falso resuelve_llamada_funcion SEMICOLON checa_void

    RPAREN          shift and go to state 201


state 180

    (58) argumentos -> ExpI . resuelve_argumentos mas_argumentos
    (62) resuelve_argumentos -> .

    COMMA           reduce using rule 62 (resuelve_argumentos -> .)
    RPAREN          reduce using rule 62 (resuelve_argumentos -> .)

    resuelve_argumentos            shift and go to state 202

state 181

    (94) Print -> PRINT LPAREN ExpI RPAREN SEMICOLON . crea_print
    (95) crea_print -> .

    IF              reduce using rule 95 (crea_print -> .)
    RETURN          reduce using rule 95 (crea_print -> .)
    VAR_ID          reduce using rule 95 (crea_print -> .)
    PRINT           reduce using rule 95 (crea_print -> .)
    FOR             reduce using rule 95 (crea_print -> .)
    WHILE           reduce using rule 95 (crea_print -> .)
    DO              reduce using rule 95 (crea_print -> .)
    TUR             reduce using rule 95 (crea_print -> .)
    RET             reduce using rule 95 (crea_print -> .)
    RBRACKET        reduce using rule 95 (crea_print -> .)

    crea_print                     shift and go to state 203

state 182

    (106) For -> FOR LPAREN VAR_ID ASSIGN ExpI . SEMICOLON ExpI SEMICOLON VAR_ID Exp_ciclo RPAREN LBRACKET reg_brack RBRACKET

    SEMICOLON       shift and go to state 204


state 183

    (101) While -> WHILE guarda_numero_cuadruplo LPAREN ExpI RPAREN . crea_GOTOF LBRACKET reg_brack RBRACKET regresa_inicio_while
    (87) crea_GOTOF -> .

    LBRACKET        reduce using rule 87 (crea_GOTOF -> .)

    crea_GOTOF                     shift and go to state 205

state 184

    (104) DoWhile -> DO guarda_numero_cuadruplo LBRACKET reg_brack RBRACKET . WHILE LPAREN ExpI RPAREN SEMICOLON crea_GOTOV

    WHILE           shift and go to state 206


state 185

    (122) Forward -> TUR POINT FORWARD LPAREN ExpI . RPAREN SEMICOLON crea_cuadruplo_forward

    RPAREN          shift and go to state 207


state 186

    (124) Right -> TUR POINT RIGHT LPAREN ExpI . RPAREN SEMICOLON crea_cuadruplo_right

    RPAREN          shift and go to state 208


state 187

    (126) Left -> TUR POINT LEFT LPAREN ExpI . RPAREN SEMICOLON crea_cuadruplo_left

    RPAREN          shift and go to state 209


state 188

    (128) Circle -> TUR POINT CIRCLE LPAREN ExpI . RPAREN SEMICOLON crea_cuadruplo_circle

    RPAREN          shift and go to state 210


state 189

    (130) Position -> TUR POINT POS LPAREN ExpI . COMMA ExpI RPAREN SEMICOLON crea_cuadruplo_pos

    COMMA           shift and go to state 211


state 190

    (132) IniciaTurtle -> TUR POINT TURTLE LPAREN RPAREN . SEMICOLON crea_cuadruplo_inicia

    SEMICOLON       shift and go to state 212


state 191

    (134) TerminaTurtle -> TUR POINT FINISH LPAREN RPAREN . SEMICOLON crea_cuadruplo_termina

    SEMICOLON       shift and go to state 213


state 192

    (67) funciones -> FUNC tipo_funcion VAR_ID LPAREN param RPAREN agrega_funcion LBRACKET Vars reg_brack RBRACKET fin_func_cuad . funciones
    (67) funciones -> . FUNC tipo_funcion VAR_ID LPAREN param RPAREN agrega_funcion LBRACKET Vars reg_brack RBRACKET fin_func_cuad funciones
    (68) funciones -> .

    FUNC            shift and go to state 16
    MAIN            reduce using rule 68 (funciones -> .)

    funciones                      shift and go to state 214

state 193

    (86) Condicion -> IF LPAREN ExpI RPAREN crea_GOTOF LBRACKET . reg_brack RBRACKET pos_else llena_cuadruplo_if
    (77) reg_brack -> . Estatutos reg_brack
    (78) reg_brack -> .
    (79) Estatutos -> . Condicion
    (80) Estatutos -> . Ciclo
    (81) Estatutos -> . Return
    (82) Estatutos -> . Asignacion
    (83) Estatutos -> . Print
    (84) Estatutos -> . Llamada_Func
    (85) Estatutos -> . Turtle
    (86) Condicion -> . IF LPAREN ExpI RPAREN crea_GOTOF LBRACKET reg_brack RBRACKET pos_else llena_cuadruplo_if
    (98) Ciclo -> . For
    (99) Ciclo -> . While
    (100) Ciclo -> . DoWhile
    (92) Return -> . RETURN ExpI SEMICOLON resuelve_return
    (17) Asignacion -> . VAR_ID push_var_PilaOperandos ASSIGN push_operador_PilaOperadores ExpI SEMICOLON resuelve_asignacion
    (94) Print -> . PRINT LPAREN ExpI RPAREN SEMICOLON crea_print
    (96) Llamada_Func -> . VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion SEMICOLON checa_void
    (115) Turtle -> . Forward
    (116) Turtle -> . Right
    (117) Turtle -> . Left
    (118) Turtle -> . Circle
    (119) Turtle -> . Position
    (120) Turtle -> . IniciaTurtle
    (121) Turtle -> . TerminaTurtle
    (106) For -> . FOR LPAREN VAR_ID ASSIGN ExpI SEMICOLON ExpI SEMICOLON VAR_ID Exp_ciclo RPAREN LBRACKET reg_brack RBRACKET
    (101) While -> . WHILE guarda_numero_cuadruplo LPAREN ExpI RPAREN crea_GOTOF LBRACKET reg_brack RBRACKET regresa_inicio_while
    (104) DoWhile -> . DO guarda_numero_cuadruplo LBRACKET reg_brack RBRACKET WHILE LPAREN ExpI RPAREN SEMICOLON crea_GOTOV
    (122) Forward -> . TUR POINT FORWARD LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_forward
    (124) Right -> . TUR POINT RIGHT LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_right
    (126) Left -> . TUR POINT LEFT LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_left
    (128) Circle -> . TUR POINT CIRCLE LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_circle
    (130) Position -> . TUR POINT POS LPAREN ExpI COMMA ExpI RPAREN SEMICOLON crea_cuadruplo_pos
    (132) IniciaTurtle -> . TUR POINT TURTLE LPAREN RPAREN SEMICOLON crea_cuadruplo_inicia
    (134) TerminaTurtle -> . TUR POINT FINISH LPAREN RPAREN SEMICOLON crea_cuadruplo_termina

    RBRACKET        reduce using rule 78 (reg_brack -> .)
    IF              shift and go to state 59
    RETURN          shift and go to state 63
    VAR_ID          shift and go to state 64
    PRINT           shift and go to state 65
    FOR             shift and go to state 73
    WHILE           shift and go to state 74
    DO              shift and go to state 75
    TUR             shift and go to state 76

    reg_brack                      shift and go to state 215
    Estatutos                      shift and go to state 51
    Condicion                      shift and go to state 52
    Ciclo                          shift and go to state 53
    Return                         shift and go to state 54
    Asignacion                     shift and go to state 55
    Print                          shift and go to state 56
    Llamada_Func                   shift and go to state 57
    Turtle                         shift and go to state 58
    For                            shift and go to state 60
    While                          shift and go to state 61
    DoWhile                        shift and go to state 62
    Forward                        shift and go to state 66
    Right                          shift and go to state 67
    Left                           shift and go to state 68
    Circle                         shift and go to state 69
    Position                       shift and go to state 70
    IniciaTurtle                   shift and go to state 71
    TerminaTurtle                  shift and go to state 72

state 194

    (22) ExpI -> ExpK Operandos push_operador_PilaOperadores ExpK resuelve_operadores_relacionales .

    SEMICOLON       reduce using rule 22 (ExpI -> ExpK Operandos push_operador_PilaOperadores ExpK resuelve_operadores_relacionales .)
    RPAREN          reduce using rule 22 (ExpI -> ExpK Operandos push_operador_PilaOperadores ExpK resuelve_operadores_relacionales .)
    SRBRACKET       reduce using rule 22 (ExpI -> ExpK Operandos push_operador_PilaOperadores ExpK resuelve_operadores_relacionales .)
    COMMA           reduce using rule 22 (ExpI -> ExpK Operandos push_operador_PilaOperadores ExpK resuelve_operadores_relacionales .)


state 195

    (31) ExpK -> ExpT resuelve_termino pos_SUMRES push_operador_PilaOperadores ExpK .

    LT              reduce using rule 31 (ExpK -> ExpT resuelve_termino pos_SUMRES push_operador_PilaOperadores ExpK .)
    GT              reduce using rule 31 (ExpK -> ExpT resuelve_termino pos_SUMRES push_operador_PilaOperadores ExpK .)
    NE              reduce using rule 31 (ExpK -> ExpT resuelve_termino pos_SUMRES push_operador_PilaOperadores ExpK .)
    LE              reduce using rule 31 (ExpK -> ExpT resuelve_termino pos_SUMRES push_operador_PilaOperadores ExpK .)
    GE              reduce using rule 31 (ExpK -> ExpT resuelve_termino pos_SUMRES push_operador_PilaOperadores ExpK .)
    EQ              reduce using rule 31 (ExpK -> ExpT resuelve_termino pos_SUMRES push_operador_PilaOperadores ExpK .)
    SEMICOLON       reduce using rule 31 (ExpK -> ExpT resuelve_termino pos_SUMRES push_operador_PilaOperadores ExpK .)
    RPAREN          reduce using rule 31 (ExpK -> ExpT resuelve_termino pos_SUMRES push_operador_PilaOperadores ExpK .)
    SRBRACKET       reduce using rule 31 (ExpK -> ExpT resuelve_termino pos_SUMRES push_operador_PilaOperadores ExpK .)
    COMMA           reduce using rule 31 (ExpK -> ExpT resuelve_termino pos_SUMRES push_operador_PilaOperadores ExpK .)


state 196

    (36) ExpT -> ExpF resuelve_factor pos_MULTDIV push_operador_PilaOperadores ExpT .

    PLUS            reduce using rule 36 (ExpT -> ExpF resuelve_factor pos_MULTDIV push_operador_PilaOperadores ExpT .)
    MINUS           reduce using rule 36 (ExpT -> ExpF resuelve_factor pos_MULTDIV push_operador_PilaOperadores ExpT .)
    LT              reduce using rule 36 (ExpT -> ExpF resuelve_factor pos_MULTDIV push_operador_PilaOperadores ExpT .)
    GT              reduce using rule 36 (ExpT -> ExpF resuelve_factor pos_MULTDIV push_operador_PilaOperadores ExpT .)
    NE              reduce using rule 36 (ExpT -> ExpF resuelve_factor pos_MULTDIV push_operador_PilaOperadores ExpT .)
    LE              reduce using rule 36 (ExpT -> ExpF resuelve_factor pos_MULTDIV push_operador_PilaOperadores ExpT .)
    GE              reduce using rule 36 (ExpT -> ExpF resuelve_factor pos_MULTDIV push_operador_PilaOperadores ExpT .)
    EQ              reduce using rule 36 (ExpT -> ExpF resuelve_factor pos_MULTDIV push_operador_PilaOperadores ExpT .)
    SEMICOLON       reduce using rule 36 (ExpT -> ExpF resuelve_factor pos_MULTDIV push_operador_PilaOperadores ExpT .)
    RPAREN          reduce using rule 36 (ExpT -> ExpF resuelve_factor pos_MULTDIV push_operador_PilaOperadores ExpT .)
    SRBRACKET       reduce using rule 36 (ExpT -> ExpF resuelve_factor pos_MULTDIV push_operador_PilaOperadores ExpT .)
    COMMA           reduce using rule 36 (ExpT -> ExpF resuelve_factor pos_MULTDIV push_operador_PilaOperadores ExpT .)


state 197

    (41) ExpF -> LPAREN agrega_falso ExpI RPAREN quita_falso .

    MULT            reduce using rule 41 (ExpF -> LPAREN agrega_falso ExpI RPAREN quita_falso .)
    DIV             reduce using rule 41 (ExpF -> LPAREN agrega_falso ExpI RPAREN quita_falso .)
    PLUS            reduce using rule 41 (ExpF -> LPAREN agrega_falso ExpI RPAREN quita_falso .)
    MINUS           reduce using rule 41 (ExpF -> LPAREN agrega_falso ExpI RPAREN quita_falso .)
    LT              reduce using rule 41 (ExpF -> LPAREN agrega_falso ExpI RPAREN quita_falso .)
    GT              reduce using rule 41 (ExpF -> LPAREN agrega_falso ExpI RPAREN quita_falso .)
    NE              reduce using rule 41 (ExpF -> LPAREN agrega_falso ExpI RPAREN quita_falso .)
    LE              reduce using rule 41 (ExpF -> LPAREN agrega_falso ExpI RPAREN quita_falso .)
    GE              reduce using rule 41 (ExpF -> LPAREN agrega_falso ExpI RPAREN quita_falso .)
    EQ              reduce using rule 41 (ExpF -> LPAREN agrega_falso ExpI RPAREN quita_falso .)
    SEMICOLON       reduce using rule 41 (ExpF -> LPAREN agrega_falso ExpI RPAREN quita_falso .)
    RPAREN          reduce using rule 41 (ExpF -> LPAREN agrega_falso ExpI RPAREN quita_falso .)
    SRBRACKET       reduce using rule 41 (ExpF -> LPAREN agrega_falso ExpI RPAREN quita_falso .)
    COMMA           reduce using rule 41 (ExpF -> LPAREN agrega_falso ExpI RPAREN quita_falso .)


state 198

    (65) pos_arreglo -> SLBRACKET ExpI SRBRACKET .

    MULT            reduce using rule 65 (pos_arreglo -> SLBRACKET ExpI SRBRACKET .)
    DIV             reduce using rule 65 (pos_arreglo -> SLBRACKET ExpI SRBRACKET .)
    PLUS            reduce using rule 65 (pos_arreglo -> SLBRACKET ExpI SRBRACKET .)
    MINUS           reduce using rule 65 (pos_arreglo -> SLBRACKET ExpI SRBRACKET .)
    LT              reduce using rule 65 (pos_arreglo -> SLBRACKET ExpI SRBRACKET .)
    GT              reduce using rule 65 (pos_arreglo -> SLBRACKET ExpI SRBRACKET .)
    NE              reduce using rule 65 (pos_arreglo -> SLBRACKET ExpI SRBRACKET .)
    LE              reduce using rule 65 (pos_arreglo -> SLBRACKET ExpI SRBRACKET .)
    GE              reduce using rule 65 (pos_arreglo -> SLBRACKET ExpI SRBRACKET .)
    EQ              reduce using rule 65 (pos_arreglo -> SLBRACKET ExpI SRBRACKET .)
    SEMICOLON       reduce using rule 65 (pos_arreglo -> SLBRACKET ExpI SRBRACKET .)
    RPAREN          reduce using rule 65 (pos_arreglo -> SLBRACKET ExpI SRBRACKET .)
    SRBRACKET       reduce using rule 65 (pos_arreglo -> SLBRACKET ExpI SRBRACKET .)
    COMMA           reduce using rule 65 (pos_arreglo -> SLBRACKET ExpI SRBRACKET .)


state 199

    (56) llama_funcion -> VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos . RPAREN quita_falso resuelve_llamada_funcion guarda_resultado_funcion

    RPAREN          shift and go to state 216


state 200

    (17) Asignacion -> VAR_ID push_var_PilaOperandos ASSIGN push_operador_PilaOperadores ExpI SEMICOLON . resuelve_asignacion
    (20) resuelve_asignacion -> .

    IF              reduce using rule 20 (resuelve_asignacion -> .)
    RETURN          reduce using rule 20 (resuelve_asignacion -> .)
    VAR_ID          reduce using rule 20 (resuelve_asignacion -> .)
    PRINT           reduce using rule 20 (resuelve_asignacion -> .)
    FOR             reduce using rule 20 (resuelve_asignacion -> .)
    WHILE           reduce using rule 20 (resuelve_asignacion -> .)
    DO              reduce using rule 20 (resuelve_asignacion -> .)
    TUR             reduce using rule 20 (resuelve_asignacion -> .)
    RET             reduce using rule 20 (resuelve_asignacion -> .)
    RBRACKET        reduce using rule 20 (resuelve_asignacion -> .)

    resuelve_asignacion            shift and go to state 217

state 201

    (96) Llamada_Func -> VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN . quita_falso resuelve_llamada_funcion SEMICOLON checa_void
    (55) quita_falso -> .

    SEMICOLON       reduce using rule 55 (quita_falso -> .)

    quita_falso                    shift and go to state 218

state 202

    (58) argumentos -> ExpI resuelve_argumentos . mas_argumentos
    (60) mas_argumentos -> . COMMA ExpI resuelve_argumentos mas_argumentos
    (61) mas_argumentos -> .

    COMMA           shift and go to state 220
    RPAREN          reduce using rule 61 (mas_argumentos -> .)

    mas_argumentos                 shift and go to state 219

state 203

    (94) Print -> PRINT LPAREN ExpI RPAREN SEMICOLON crea_print .

    IF              reduce using rule 94 (Print -> PRINT LPAREN ExpI RPAREN SEMICOLON crea_print .)
    RETURN          reduce using rule 94 (Print -> PRINT LPAREN ExpI RPAREN SEMICOLON crea_print .)
    VAR_ID          reduce using rule 94 (Print -> PRINT LPAREN ExpI RPAREN SEMICOLON crea_print .)
    PRINT           reduce using rule 94 (Print -> PRINT LPAREN ExpI RPAREN SEMICOLON crea_print .)
    FOR             reduce using rule 94 (Print -> PRINT LPAREN ExpI RPAREN SEMICOLON crea_print .)
    WHILE           reduce using rule 94 (Print -> PRINT LPAREN ExpI RPAREN SEMICOLON crea_print .)
    DO              reduce using rule 94 (Print -> PRINT LPAREN ExpI RPAREN SEMICOLON crea_print .)
    TUR             reduce using rule 94 (Print -> PRINT LPAREN ExpI RPAREN SEMICOLON crea_print .)
    RET             reduce using rule 94 (Print -> PRINT LPAREN ExpI RPAREN SEMICOLON crea_print .)
    RBRACKET        reduce using rule 94 (Print -> PRINT LPAREN ExpI RPAREN SEMICOLON crea_print .)


state 204

    (106) For -> FOR LPAREN VAR_ID ASSIGN ExpI SEMICOLON . ExpI SEMICOLON VAR_ID Exp_ciclo RPAREN LBRACKET reg_brack RBRACKET
    (21) ExpI -> . ExpK resuelve_operadores_relacionales
    (22) ExpI -> . ExpK Operandos push_operador_PilaOperadores ExpK resuelve_operadores_relacionales
    (30) ExpK -> . ExpT resuelve_termino
    (31) ExpK -> . ExpT resuelve_termino pos_SUMRES push_operador_PilaOperadores ExpK
    (35) ExpT -> . ExpF resuelve_factor
    (36) ExpT -> . ExpF resuelve_factor pos_MULTDIV push_operador_PilaOperadores ExpT
    (40) ExpF -> . VAR_CTE
    (41) ExpF -> . LPAREN agrega_falso ExpI RPAREN quita_falso
    (42) ExpF -> . VAR_ID push_var_PilaOperandos pos_arreglo
    (43) ExpF -> . llama_funcion
    (44) VAR_CTE -> . VAR_INT push_int_PilaOperandos
    (45) VAR_CTE -> . VAR_DECIMAL push_decimal_PilaOperandos
    (46) VAR_CTE -> . VAR_STRING push_string_PilaOperandos
    (47) VAR_CTE -> . VAR_BOOL push_bool_PilaOperandos
    (56) llama_funcion -> . VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion guarda_resultado_funcion
    (48) VAR_BOOL -> . FALSE
    (49) VAR_BOOL -> . TRUE

    LPAREN          shift and go to state 88
    VAR_ID          shift and go to state 89
    VAR_INT         shift and go to state 91
    VAR_DECIMAL     shift and go to state 92
    VAR_STRING      shift and go to state 93
    FALSE           shift and go to state 95
    TRUE            shift and go to state 96

    ExpI                           shift and go to state 221
    ExpK                           shift and go to state 84
    ExpT                           shift and go to state 85
    ExpF                           shift and go to state 86
    VAR_CTE                        shift and go to state 87
    llama_funcion                  shift and go to state 90
    VAR_BOOL                       shift and go to state 94

state 205

    (101) While -> WHILE guarda_numero_cuadruplo LPAREN ExpI RPAREN crea_GOTOF . LBRACKET reg_brack RBRACKET regresa_inicio_while

    LBRACKET        shift and go to state 222


state 206

    (104) DoWhile -> DO guarda_numero_cuadruplo LBRACKET reg_brack RBRACKET WHILE . LPAREN ExpI RPAREN SEMICOLON crea_GOTOV

    LPAREN          shift and go to state 223


state 207

    (122) Forward -> TUR POINT FORWARD LPAREN ExpI RPAREN . SEMICOLON crea_cuadruplo_forward

    SEMICOLON       shift and go to state 224


state 208

    (124) Right -> TUR POINT RIGHT LPAREN ExpI RPAREN . SEMICOLON crea_cuadruplo_right

    SEMICOLON       shift and go to state 225


state 209

    (126) Left -> TUR POINT LEFT LPAREN ExpI RPAREN . SEMICOLON crea_cuadruplo_left

    SEMICOLON       shift and go to state 226


state 210

    (128) Circle -> TUR POINT CIRCLE LPAREN ExpI RPAREN . SEMICOLON crea_cuadruplo_circle

    SEMICOLON       shift and go to state 227


state 211

    (130) Position -> TUR POINT POS LPAREN ExpI COMMA . ExpI RPAREN SEMICOLON crea_cuadruplo_pos
    (21) ExpI -> . ExpK resuelve_operadores_relacionales
    (22) ExpI -> . ExpK Operandos push_operador_PilaOperadores ExpK resuelve_operadores_relacionales
    (30) ExpK -> . ExpT resuelve_termino
    (31) ExpK -> . ExpT resuelve_termino pos_SUMRES push_operador_PilaOperadores ExpK
    (35) ExpT -> . ExpF resuelve_factor
    (36) ExpT -> . ExpF resuelve_factor pos_MULTDIV push_operador_PilaOperadores ExpT
    (40) ExpF -> . VAR_CTE
    (41) ExpF -> . LPAREN agrega_falso ExpI RPAREN quita_falso
    (42) ExpF -> . VAR_ID push_var_PilaOperandos pos_arreglo
    (43) ExpF -> . llama_funcion
    (44) VAR_CTE -> . VAR_INT push_int_PilaOperandos
    (45) VAR_CTE -> . VAR_DECIMAL push_decimal_PilaOperandos
    (46) VAR_CTE -> . VAR_STRING push_string_PilaOperandos
    (47) VAR_CTE -> . VAR_BOOL push_bool_PilaOperandos
    (56) llama_funcion -> . VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion guarda_resultado_funcion
    (48) VAR_BOOL -> . FALSE
    (49) VAR_BOOL -> . TRUE

    LPAREN          shift and go to state 88
    VAR_ID          shift and go to state 89
    VAR_INT         shift and go to state 91
    VAR_DECIMAL     shift and go to state 92
    VAR_STRING      shift and go to state 93
    FALSE           shift and go to state 95
    TRUE            shift and go to state 96

    ExpI                           shift and go to state 228
    ExpK                           shift and go to state 84
    ExpT                           shift and go to state 85
    ExpF                           shift and go to state 86
    VAR_CTE                        shift and go to state 87
    llama_funcion                  shift and go to state 90
    VAR_BOOL                       shift and go to state 94

state 212

    (132) IniciaTurtle -> TUR POINT TURTLE LPAREN RPAREN SEMICOLON . crea_cuadruplo_inicia
    (133) crea_cuadruplo_inicia -> .

    IF              reduce using rule 133 (crea_cuadruplo_inicia -> .)
    RETURN          reduce using rule 133 (crea_cuadruplo_inicia -> .)
    VAR_ID          reduce using rule 133 (crea_cuadruplo_inicia -> .)
    PRINT           reduce using rule 133 (crea_cuadruplo_inicia -> .)
    FOR             reduce using rule 133 (crea_cuadruplo_inicia -> .)
    WHILE           reduce using rule 133 (crea_cuadruplo_inicia -> .)
    DO              reduce using rule 133 (crea_cuadruplo_inicia -> .)
    TUR             reduce using rule 133 (crea_cuadruplo_inicia -> .)
    RET             reduce using rule 133 (crea_cuadruplo_inicia -> .)
    RBRACKET        reduce using rule 133 (crea_cuadruplo_inicia -> .)

    crea_cuadruplo_inicia          shift and go to state 229

state 213

    (134) TerminaTurtle -> TUR POINT FINISH LPAREN RPAREN SEMICOLON . crea_cuadruplo_termina
    (135) crea_cuadruplo_termina -> .

    IF              reduce using rule 135 (crea_cuadruplo_termina -> .)
    RETURN          reduce using rule 135 (crea_cuadruplo_termina -> .)
    VAR_ID          reduce using rule 135 (crea_cuadruplo_termina -> .)
    PRINT           reduce using rule 135 (crea_cuadruplo_termina -> .)
    FOR             reduce using rule 135 (crea_cuadruplo_termina -> .)
    WHILE           reduce using rule 135 (crea_cuadruplo_termina -> .)
    DO              reduce using rule 135 (crea_cuadruplo_termina -> .)
    TUR             reduce using rule 135 (crea_cuadruplo_termina -> .)
    RET             reduce using rule 135 (crea_cuadruplo_termina -> .)
    RBRACKET        reduce using rule 135 (crea_cuadruplo_termina -> .)

    crea_cuadruplo_termina         shift and go to state 230

state 214

    (67) funciones -> FUNC tipo_funcion VAR_ID LPAREN param RPAREN agrega_funcion LBRACKET Vars reg_brack RBRACKET fin_func_cuad funciones .

    MAIN            reduce using rule 67 (funciones -> FUNC tipo_funcion VAR_ID LPAREN param RPAREN agrega_funcion LBRACKET Vars reg_brack RBRACKET fin_func_cuad funciones .)


state 215

    (86) Condicion -> IF LPAREN ExpI RPAREN crea_GOTOF LBRACKET reg_brack . RBRACKET pos_else llena_cuadruplo_if

    RBRACKET        shift and go to state 231


state 216

    (56) llama_funcion -> VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN . quita_falso resuelve_llamada_funcion guarda_resultado_funcion
    (55) quita_falso -> .

    MULT            reduce using rule 55 (quita_falso -> .)
    DIV             reduce using rule 55 (quita_falso -> .)
    PLUS            reduce using rule 55 (quita_falso -> .)
    MINUS           reduce using rule 55 (quita_falso -> .)
    LT              reduce using rule 55 (quita_falso -> .)
    GT              reduce using rule 55 (quita_falso -> .)
    NE              reduce using rule 55 (quita_falso -> .)
    LE              reduce using rule 55 (quita_falso -> .)
    GE              reduce using rule 55 (quita_falso -> .)
    EQ              reduce using rule 55 (quita_falso -> .)
    SEMICOLON       reduce using rule 55 (quita_falso -> .)
    RPAREN          reduce using rule 55 (quita_falso -> .)
    SRBRACKET       reduce using rule 55 (quita_falso -> .)
    COMMA           reduce using rule 55 (quita_falso -> .)

    quita_falso                    shift and go to state 232

state 217

    (17) Asignacion -> VAR_ID push_var_PilaOperandos ASSIGN push_operador_PilaOperadores ExpI SEMICOLON resuelve_asignacion .

    IF              reduce using rule 17 (Asignacion -> VAR_ID push_var_PilaOperandos ASSIGN push_operador_PilaOperadores ExpI SEMICOLON resuelve_asignacion .)
    RETURN          reduce using rule 17 (Asignacion -> VAR_ID push_var_PilaOperandos ASSIGN push_operador_PilaOperadores ExpI SEMICOLON resuelve_asignacion .)
    VAR_ID          reduce using rule 17 (Asignacion -> VAR_ID push_var_PilaOperandos ASSIGN push_operador_PilaOperadores ExpI SEMICOLON resuelve_asignacion .)
    PRINT           reduce using rule 17 (Asignacion -> VAR_ID push_var_PilaOperandos ASSIGN push_operador_PilaOperadores ExpI SEMICOLON resuelve_asignacion .)
    FOR             reduce using rule 17 (Asignacion -> VAR_ID push_var_PilaOperandos ASSIGN push_operador_PilaOperadores ExpI SEMICOLON resuelve_asignacion .)
    WHILE           reduce using rule 17 (Asignacion -> VAR_ID push_var_PilaOperandos ASSIGN push_operador_PilaOperadores ExpI SEMICOLON resuelve_asignacion .)
    DO              reduce using rule 17 (Asignacion -> VAR_ID push_var_PilaOperandos ASSIGN push_operador_PilaOperadores ExpI SEMICOLON resuelve_asignacion .)
    TUR             reduce using rule 17 (Asignacion -> VAR_ID push_var_PilaOperandos ASSIGN push_operador_PilaOperadores ExpI SEMICOLON resuelve_asignacion .)
    RET             reduce using rule 17 (Asignacion -> VAR_ID push_var_PilaOperandos ASSIGN push_operador_PilaOperadores ExpI SEMICOLON resuelve_asignacion .)
    RBRACKET        reduce using rule 17 (Asignacion -> VAR_ID push_var_PilaOperandos ASSIGN push_operador_PilaOperadores ExpI SEMICOLON resuelve_asignacion .)


state 218

    (96) Llamada_Func -> VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso . resuelve_llamada_funcion SEMICOLON checa_void
    (63) resuelve_llamada_funcion -> .

    SEMICOLON       reduce using rule 63 (resuelve_llamada_funcion -> .)

    resuelve_llamada_funcion       shift and go to state 233

state 219

    (58) argumentos -> ExpI resuelve_argumentos mas_argumentos .

    RPAREN          reduce using rule 58 (argumentos -> ExpI resuelve_argumentos mas_argumentos .)


state 220

    (60) mas_argumentos -> COMMA . ExpI resuelve_argumentos mas_argumentos
    (21) ExpI -> . ExpK resuelve_operadores_relacionales
    (22) ExpI -> . ExpK Operandos push_operador_PilaOperadores ExpK resuelve_operadores_relacionales
    (30) ExpK -> . ExpT resuelve_termino
    (31) ExpK -> . ExpT resuelve_termino pos_SUMRES push_operador_PilaOperadores ExpK
    (35) ExpT -> . ExpF resuelve_factor
    (36) ExpT -> . ExpF resuelve_factor pos_MULTDIV push_operador_PilaOperadores ExpT
    (40) ExpF -> . VAR_CTE
    (41) ExpF -> . LPAREN agrega_falso ExpI RPAREN quita_falso
    (42) ExpF -> . VAR_ID push_var_PilaOperandos pos_arreglo
    (43) ExpF -> . llama_funcion
    (44) VAR_CTE -> . VAR_INT push_int_PilaOperandos
    (45) VAR_CTE -> . VAR_DECIMAL push_decimal_PilaOperandos
    (46) VAR_CTE -> . VAR_STRING push_string_PilaOperandos
    (47) VAR_CTE -> . VAR_BOOL push_bool_PilaOperandos
    (56) llama_funcion -> . VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion guarda_resultado_funcion
    (48) VAR_BOOL -> . FALSE
    (49) VAR_BOOL -> . TRUE

    LPAREN          shift and go to state 88
    VAR_ID          shift and go to state 89
    VAR_INT         shift and go to state 91
    VAR_DECIMAL     shift and go to state 92
    VAR_STRING      shift and go to state 93
    FALSE           shift and go to state 95
    TRUE            shift and go to state 96

    ExpI                           shift and go to state 234
    ExpK                           shift and go to state 84
    ExpT                           shift and go to state 85
    ExpF                           shift and go to state 86
    VAR_CTE                        shift and go to state 87
    llama_funcion                  shift and go to state 90
    VAR_BOOL                       shift and go to state 94

state 221

    (106) For -> FOR LPAREN VAR_ID ASSIGN ExpI SEMICOLON ExpI . SEMICOLON VAR_ID Exp_ciclo RPAREN LBRACKET reg_brack RBRACKET

    SEMICOLON       shift and go to state 235


state 222

    (101) While -> WHILE guarda_numero_cuadruplo LPAREN ExpI RPAREN crea_GOTOF LBRACKET . reg_brack RBRACKET regresa_inicio_while
    (77) reg_brack -> . Estatutos reg_brack
    (78) reg_brack -> .
    (79) Estatutos -> . Condicion
    (80) Estatutos -> . Ciclo
    (81) Estatutos -> . Return
    (82) Estatutos -> . Asignacion
    (83) Estatutos -> . Print
    (84) Estatutos -> . Llamada_Func
    (85) Estatutos -> . Turtle
    (86) Condicion -> . IF LPAREN ExpI RPAREN crea_GOTOF LBRACKET reg_brack RBRACKET pos_else llena_cuadruplo_if
    (98) Ciclo -> . For
    (99) Ciclo -> . While
    (100) Ciclo -> . DoWhile
    (92) Return -> . RETURN ExpI SEMICOLON resuelve_return
    (17) Asignacion -> . VAR_ID push_var_PilaOperandos ASSIGN push_operador_PilaOperadores ExpI SEMICOLON resuelve_asignacion
    (94) Print -> . PRINT LPAREN ExpI RPAREN SEMICOLON crea_print
    (96) Llamada_Func -> . VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion SEMICOLON checa_void
    (115) Turtle -> . Forward
    (116) Turtle -> . Right
    (117) Turtle -> . Left
    (118) Turtle -> . Circle
    (119) Turtle -> . Position
    (120) Turtle -> . IniciaTurtle
    (121) Turtle -> . TerminaTurtle
    (106) For -> . FOR LPAREN VAR_ID ASSIGN ExpI SEMICOLON ExpI SEMICOLON VAR_ID Exp_ciclo RPAREN LBRACKET reg_brack RBRACKET
    (101) While -> . WHILE guarda_numero_cuadruplo LPAREN ExpI RPAREN crea_GOTOF LBRACKET reg_brack RBRACKET regresa_inicio_while
    (104) DoWhile -> . DO guarda_numero_cuadruplo LBRACKET reg_brack RBRACKET WHILE LPAREN ExpI RPAREN SEMICOLON crea_GOTOV
    (122) Forward -> . TUR POINT FORWARD LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_forward
    (124) Right -> . TUR POINT RIGHT LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_right
    (126) Left -> . TUR POINT LEFT LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_left
    (128) Circle -> . TUR POINT CIRCLE LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_circle
    (130) Position -> . TUR POINT POS LPAREN ExpI COMMA ExpI RPAREN SEMICOLON crea_cuadruplo_pos
    (132) IniciaTurtle -> . TUR POINT TURTLE LPAREN RPAREN SEMICOLON crea_cuadruplo_inicia
    (134) TerminaTurtle -> . TUR POINT FINISH LPAREN RPAREN SEMICOLON crea_cuadruplo_termina

    RBRACKET        reduce using rule 78 (reg_brack -> .)
    IF              shift and go to state 59
    RETURN          shift and go to state 63
    VAR_ID          shift and go to state 64
    PRINT           shift and go to state 65
    FOR             shift and go to state 73
    WHILE           shift and go to state 74
    DO              shift and go to state 75
    TUR             shift and go to state 76

    reg_brack                      shift and go to state 236
    Estatutos                      shift and go to state 51
    Condicion                      shift and go to state 52
    Ciclo                          shift and go to state 53
    Return                         shift and go to state 54
    Asignacion                     shift and go to state 55
    Print                          shift and go to state 56
    Llamada_Func                   shift and go to state 57
    Turtle                         shift and go to state 58
    For                            shift and go to state 60
    While                          shift and go to state 61
    DoWhile                        shift and go to state 62
    Forward                        shift and go to state 66
    Right                          shift and go to state 67
    Left                           shift and go to state 68
    Circle                         shift and go to state 69
    Position                       shift and go to state 70
    IniciaTurtle                   shift and go to state 71
    TerminaTurtle                  shift and go to state 72

state 223

    (104) DoWhile -> DO guarda_numero_cuadruplo LBRACKET reg_brack RBRACKET WHILE LPAREN . ExpI RPAREN SEMICOLON crea_GOTOV
    (21) ExpI -> . ExpK resuelve_operadores_relacionales
    (22) ExpI -> . ExpK Operandos push_operador_PilaOperadores ExpK resuelve_operadores_relacionales
    (30) ExpK -> . ExpT resuelve_termino
    (31) ExpK -> . ExpT resuelve_termino pos_SUMRES push_operador_PilaOperadores ExpK
    (35) ExpT -> . ExpF resuelve_factor
    (36) ExpT -> . ExpF resuelve_factor pos_MULTDIV push_operador_PilaOperadores ExpT
    (40) ExpF -> . VAR_CTE
    (41) ExpF -> . LPAREN agrega_falso ExpI RPAREN quita_falso
    (42) ExpF -> . VAR_ID push_var_PilaOperandos pos_arreglo
    (43) ExpF -> . llama_funcion
    (44) VAR_CTE -> . VAR_INT push_int_PilaOperandos
    (45) VAR_CTE -> . VAR_DECIMAL push_decimal_PilaOperandos
    (46) VAR_CTE -> . VAR_STRING push_string_PilaOperandos
    (47) VAR_CTE -> . VAR_BOOL push_bool_PilaOperandos
    (56) llama_funcion -> . VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion guarda_resultado_funcion
    (48) VAR_BOOL -> . FALSE
    (49) VAR_BOOL -> . TRUE

    LPAREN          shift and go to state 88
    VAR_ID          shift and go to state 89
    VAR_INT         shift and go to state 91
    VAR_DECIMAL     shift and go to state 92
    VAR_STRING      shift and go to state 93
    FALSE           shift and go to state 95
    TRUE            shift and go to state 96

    ExpI                           shift and go to state 237
    ExpK                           shift and go to state 84
    ExpT                           shift and go to state 85
    ExpF                           shift and go to state 86
    VAR_CTE                        shift and go to state 87
    llama_funcion                  shift and go to state 90
    VAR_BOOL                       shift and go to state 94

state 224

    (122) Forward -> TUR POINT FORWARD LPAREN ExpI RPAREN SEMICOLON . crea_cuadruplo_forward
    (123) crea_cuadruplo_forward -> .

    IF              reduce using rule 123 (crea_cuadruplo_forward -> .)
    RETURN          reduce using rule 123 (crea_cuadruplo_forward -> .)
    VAR_ID          reduce using rule 123 (crea_cuadruplo_forward -> .)
    PRINT           reduce using rule 123 (crea_cuadruplo_forward -> .)
    FOR             reduce using rule 123 (crea_cuadruplo_forward -> .)
    WHILE           reduce using rule 123 (crea_cuadruplo_forward -> .)
    DO              reduce using rule 123 (crea_cuadruplo_forward -> .)
    TUR             reduce using rule 123 (crea_cuadruplo_forward -> .)
    RET             reduce using rule 123 (crea_cuadruplo_forward -> .)
    RBRACKET        reduce using rule 123 (crea_cuadruplo_forward -> .)

    crea_cuadruplo_forward         shift and go to state 238

state 225

    (124) Right -> TUR POINT RIGHT LPAREN ExpI RPAREN SEMICOLON . crea_cuadruplo_right
    (125) crea_cuadruplo_right -> .

    IF              reduce using rule 125 (crea_cuadruplo_right -> .)
    RETURN          reduce using rule 125 (crea_cuadruplo_right -> .)
    VAR_ID          reduce using rule 125 (crea_cuadruplo_right -> .)
    PRINT           reduce using rule 125 (crea_cuadruplo_right -> .)
    FOR             reduce using rule 125 (crea_cuadruplo_right -> .)
    WHILE           reduce using rule 125 (crea_cuadruplo_right -> .)
    DO              reduce using rule 125 (crea_cuadruplo_right -> .)
    TUR             reduce using rule 125 (crea_cuadruplo_right -> .)
    RET             reduce using rule 125 (crea_cuadruplo_right -> .)
    RBRACKET        reduce using rule 125 (crea_cuadruplo_right -> .)

    crea_cuadruplo_right           shift and go to state 239

state 226

    (126) Left -> TUR POINT LEFT LPAREN ExpI RPAREN SEMICOLON . crea_cuadruplo_left
    (127) crea_cuadruplo_left -> .

    IF              reduce using rule 127 (crea_cuadruplo_left -> .)
    RETURN          reduce using rule 127 (crea_cuadruplo_left -> .)
    VAR_ID          reduce using rule 127 (crea_cuadruplo_left -> .)
    PRINT           reduce using rule 127 (crea_cuadruplo_left -> .)
    FOR             reduce using rule 127 (crea_cuadruplo_left -> .)
    WHILE           reduce using rule 127 (crea_cuadruplo_left -> .)
    DO              reduce using rule 127 (crea_cuadruplo_left -> .)
    TUR             reduce using rule 127 (crea_cuadruplo_left -> .)
    RET             reduce using rule 127 (crea_cuadruplo_left -> .)
    RBRACKET        reduce using rule 127 (crea_cuadruplo_left -> .)

    crea_cuadruplo_left            shift and go to state 240

state 227

    (128) Circle -> TUR POINT CIRCLE LPAREN ExpI RPAREN SEMICOLON . crea_cuadruplo_circle
    (129) crea_cuadruplo_circle -> .

    IF              reduce using rule 129 (crea_cuadruplo_circle -> .)
    RETURN          reduce using rule 129 (crea_cuadruplo_circle -> .)
    VAR_ID          reduce using rule 129 (crea_cuadruplo_circle -> .)
    PRINT           reduce using rule 129 (crea_cuadruplo_circle -> .)
    FOR             reduce using rule 129 (crea_cuadruplo_circle -> .)
    WHILE           reduce using rule 129 (crea_cuadruplo_circle -> .)
    DO              reduce using rule 129 (crea_cuadruplo_circle -> .)
    TUR             reduce using rule 129 (crea_cuadruplo_circle -> .)
    RET             reduce using rule 129 (crea_cuadruplo_circle -> .)
    RBRACKET        reduce using rule 129 (crea_cuadruplo_circle -> .)

    crea_cuadruplo_circle          shift and go to state 241

state 228

    (130) Position -> TUR POINT POS LPAREN ExpI COMMA ExpI . RPAREN SEMICOLON crea_cuadruplo_pos

    RPAREN          shift and go to state 242


state 229

    (132) IniciaTurtle -> TUR POINT TURTLE LPAREN RPAREN SEMICOLON crea_cuadruplo_inicia .

    IF              reduce using rule 132 (IniciaTurtle -> TUR POINT TURTLE LPAREN RPAREN SEMICOLON crea_cuadruplo_inicia .)
    RETURN          reduce using rule 132 (IniciaTurtle -> TUR POINT TURTLE LPAREN RPAREN SEMICOLON crea_cuadruplo_inicia .)
    VAR_ID          reduce using rule 132 (IniciaTurtle -> TUR POINT TURTLE LPAREN RPAREN SEMICOLON crea_cuadruplo_inicia .)
    PRINT           reduce using rule 132 (IniciaTurtle -> TUR POINT TURTLE LPAREN RPAREN SEMICOLON crea_cuadruplo_inicia .)
    FOR             reduce using rule 132 (IniciaTurtle -> TUR POINT TURTLE LPAREN RPAREN SEMICOLON crea_cuadruplo_inicia .)
    WHILE           reduce using rule 132 (IniciaTurtle -> TUR POINT TURTLE LPAREN RPAREN SEMICOLON crea_cuadruplo_inicia .)
    DO              reduce using rule 132 (IniciaTurtle -> TUR POINT TURTLE LPAREN RPAREN SEMICOLON crea_cuadruplo_inicia .)
    TUR             reduce using rule 132 (IniciaTurtle -> TUR POINT TURTLE LPAREN RPAREN SEMICOLON crea_cuadruplo_inicia .)
    RET             reduce using rule 132 (IniciaTurtle -> TUR POINT TURTLE LPAREN RPAREN SEMICOLON crea_cuadruplo_inicia .)
    RBRACKET        reduce using rule 132 (IniciaTurtle -> TUR POINT TURTLE LPAREN RPAREN SEMICOLON crea_cuadruplo_inicia .)


state 230

    (134) TerminaTurtle -> TUR POINT FINISH LPAREN RPAREN SEMICOLON crea_cuadruplo_termina .

    IF              reduce using rule 134 (TerminaTurtle -> TUR POINT FINISH LPAREN RPAREN SEMICOLON crea_cuadruplo_termina .)
    RETURN          reduce using rule 134 (TerminaTurtle -> TUR POINT FINISH LPAREN RPAREN SEMICOLON crea_cuadruplo_termina .)
    VAR_ID          reduce using rule 134 (TerminaTurtle -> TUR POINT FINISH LPAREN RPAREN SEMICOLON crea_cuadruplo_termina .)
    PRINT           reduce using rule 134 (TerminaTurtle -> TUR POINT FINISH LPAREN RPAREN SEMICOLON crea_cuadruplo_termina .)
    FOR             reduce using rule 134 (TerminaTurtle -> TUR POINT FINISH LPAREN RPAREN SEMICOLON crea_cuadruplo_termina .)
    WHILE           reduce using rule 134 (TerminaTurtle -> TUR POINT FINISH LPAREN RPAREN SEMICOLON crea_cuadruplo_termina .)
    DO              reduce using rule 134 (TerminaTurtle -> TUR POINT FINISH LPAREN RPAREN SEMICOLON crea_cuadruplo_termina .)
    TUR             reduce using rule 134 (TerminaTurtle -> TUR POINT FINISH LPAREN RPAREN SEMICOLON crea_cuadruplo_termina .)
    RET             reduce using rule 134 (TerminaTurtle -> TUR POINT FINISH LPAREN RPAREN SEMICOLON crea_cuadruplo_termina .)
    RBRACKET        reduce using rule 134 (TerminaTurtle -> TUR POINT FINISH LPAREN RPAREN SEMICOLON crea_cuadruplo_termina .)


state 231

    (86) Condicion -> IF LPAREN ExpI RPAREN crea_GOTOF LBRACKET reg_brack RBRACKET . pos_else llena_cuadruplo_if
    (89) pos_else -> . ELSE crea_else_cuadruplo LBRACKET reg_brack RBRACKET
    (90) pos_else -> .

    ELSE            shift and go to state 244
    IF              reduce using rule 90 (pos_else -> .)
    RETURN          reduce using rule 90 (pos_else -> .)
    VAR_ID          reduce using rule 90 (pos_else -> .)
    PRINT           reduce using rule 90 (pos_else -> .)
    FOR             reduce using rule 90 (pos_else -> .)
    WHILE           reduce using rule 90 (pos_else -> .)
    DO              reduce using rule 90 (pos_else -> .)
    TUR             reduce using rule 90 (pos_else -> .)
    RET             reduce using rule 90 (pos_else -> .)
    RBRACKET        reduce using rule 90 (pos_else -> .)

    pos_else                       shift and go to state 243

state 232

    (56) llama_funcion -> VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso . resuelve_llamada_funcion guarda_resultado_funcion
    (63) resuelve_llamada_funcion -> .

    MULT            reduce using rule 63 (resuelve_llamada_funcion -> .)
    DIV             reduce using rule 63 (resuelve_llamada_funcion -> .)
    PLUS            reduce using rule 63 (resuelve_llamada_funcion -> .)
    MINUS           reduce using rule 63 (resuelve_llamada_funcion -> .)
    LT              reduce using rule 63 (resuelve_llamada_funcion -> .)
    GT              reduce using rule 63 (resuelve_llamada_funcion -> .)
    NE              reduce using rule 63 (resuelve_llamada_funcion -> .)
    LE              reduce using rule 63 (resuelve_llamada_funcion -> .)
    GE              reduce using rule 63 (resuelve_llamada_funcion -> .)
    EQ              reduce using rule 63 (resuelve_llamada_funcion -> .)
    SEMICOLON       reduce using rule 63 (resuelve_llamada_funcion -> .)
    RPAREN          reduce using rule 63 (resuelve_llamada_funcion -> .)
    SRBRACKET       reduce using rule 63 (resuelve_llamada_funcion -> .)
    COMMA           reduce using rule 63 (resuelve_llamada_funcion -> .)

    resuelve_llamada_funcion       shift and go to state 245

state 233

    (96) Llamada_Func -> VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion . SEMICOLON checa_void

    SEMICOLON       shift and go to state 246


state 234

    (60) mas_argumentos -> COMMA ExpI . resuelve_argumentos mas_argumentos
    (62) resuelve_argumentos -> .

    COMMA           reduce using rule 62 (resuelve_argumentos -> .)
    RPAREN          reduce using rule 62 (resuelve_argumentos -> .)

    resuelve_argumentos            shift and go to state 247

state 235

    (106) For -> FOR LPAREN VAR_ID ASSIGN ExpI SEMICOLON ExpI SEMICOLON . VAR_ID Exp_ciclo RPAREN LBRACKET reg_brack RBRACKET

    VAR_ID          shift and go to state 248


state 236

    (101) While -> WHILE guarda_numero_cuadruplo LPAREN ExpI RPAREN crea_GOTOF LBRACKET reg_brack . RBRACKET regresa_inicio_while

    RBRACKET        shift and go to state 249


state 237

    (104) DoWhile -> DO guarda_numero_cuadruplo LBRACKET reg_brack RBRACKET WHILE LPAREN ExpI . RPAREN SEMICOLON crea_GOTOV

    RPAREN          shift and go to state 250


state 238

    (122) Forward -> TUR POINT FORWARD LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_forward .

    IF              reduce using rule 122 (Forward -> TUR POINT FORWARD LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_forward .)
    RETURN          reduce using rule 122 (Forward -> TUR POINT FORWARD LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_forward .)
    VAR_ID          reduce using rule 122 (Forward -> TUR POINT FORWARD LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_forward .)
    PRINT           reduce using rule 122 (Forward -> TUR POINT FORWARD LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_forward .)
    FOR             reduce using rule 122 (Forward -> TUR POINT FORWARD LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_forward .)
    WHILE           reduce using rule 122 (Forward -> TUR POINT FORWARD LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_forward .)
    DO              reduce using rule 122 (Forward -> TUR POINT FORWARD LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_forward .)
    TUR             reduce using rule 122 (Forward -> TUR POINT FORWARD LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_forward .)
    RET             reduce using rule 122 (Forward -> TUR POINT FORWARD LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_forward .)
    RBRACKET        reduce using rule 122 (Forward -> TUR POINT FORWARD LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_forward .)


state 239

    (124) Right -> TUR POINT RIGHT LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_right .

    IF              reduce using rule 124 (Right -> TUR POINT RIGHT LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_right .)
    RETURN          reduce using rule 124 (Right -> TUR POINT RIGHT LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_right .)
    VAR_ID          reduce using rule 124 (Right -> TUR POINT RIGHT LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_right .)
    PRINT           reduce using rule 124 (Right -> TUR POINT RIGHT LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_right .)
    FOR             reduce using rule 124 (Right -> TUR POINT RIGHT LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_right .)
    WHILE           reduce using rule 124 (Right -> TUR POINT RIGHT LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_right .)
    DO              reduce using rule 124 (Right -> TUR POINT RIGHT LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_right .)
    TUR             reduce using rule 124 (Right -> TUR POINT RIGHT LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_right .)
    RET             reduce using rule 124 (Right -> TUR POINT RIGHT LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_right .)
    RBRACKET        reduce using rule 124 (Right -> TUR POINT RIGHT LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_right .)


state 240

    (126) Left -> TUR POINT LEFT LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_left .

    IF              reduce using rule 126 (Left -> TUR POINT LEFT LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_left .)
    RETURN          reduce using rule 126 (Left -> TUR POINT LEFT LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_left .)
    VAR_ID          reduce using rule 126 (Left -> TUR POINT LEFT LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_left .)
    PRINT           reduce using rule 126 (Left -> TUR POINT LEFT LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_left .)
    FOR             reduce using rule 126 (Left -> TUR POINT LEFT LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_left .)
    WHILE           reduce using rule 126 (Left -> TUR POINT LEFT LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_left .)
    DO              reduce using rule 126 (Left -> TUR POINT LEFT LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_left .)
    TUR             reduce using rule 126 (Left -> TUR POINT LEFT LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_left .)
    RET             reduce using rule 126 (Left -> TUR POINT LEFT LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_left .)
    RBRACKET        reduce using rule 126 (Left -> TUR POINT LEFT LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_left .)


state 241

    (128) Circle -> TUR POINT CIRCLE LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_circle .

    IF              reduce using rule 128 (Circle -> TUR POINT CIRCLE LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_circle .)
    RETURN          reduce using rule 128 (Circle -> TUR POINT CIRCLE LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_circle .)
    VAR_ID          reduce using rule 128 (Circle -> TUR POINT CIRCLE LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_circle .)
    PRINT           reduce using rule 128 (Circle -> TUR POINT CIRCLE LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_circle .)
    FOR             reduce using rule 128 (Circle -> TUR POINT CIRCLE LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_circle .)
    WHILE           reduce using rule 128 (Circle -> TUR POINT CIRCLE LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_circle .)
    DO              reduce using rule 128 (Circle -> TUR POINT CIRCLE LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_circle .)
    TUR             reduce using rule 128 (Circle -> TUR POINT CIRCLE LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_circle .)
    RET             reduce using rule 128 (Circle -> TUR POINT CIRCLE LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_circle .)
    RBRACKET        reduce using rule 128 (Circle -> TUR POINT CIRCLE LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_circle .)


state 242

    (130) Position -> TUR POINT POS LPAREN ExpI COMMA ExpI RPAREN . SEMICOLON crea_cuadruplo_pos

    SEMICOLON       shift and go to state 251


state 243

    (86) Condicion -> IF LPAREN ExpI RPAREN crea_GOTOF LBRACKET reg_brack RBRACKET pos_else . llena_cuadruplo_if
    (88) llena_cuadruplo_if -> .

    IF              reduce using rule 88 (llena_cuadruplo_if -> .)
    RETURN          reduce using rule 88 (llena_cuadruplo_if -> .)
    VAR_ID          reduce using rule 88 (llena_cuadruplo_if -> .)
    PRINT           reduce using rule 88 (llena_cuadruplo_if -> .)
    FOR             reduce using rule 88 (llena_cuadruplo_if -> .)
    WHILE           reduce using rule 88 (llena_cuadruplo_if -> .)
    DO              reduce using rule 88 (llena_cuadruplo_if -> .)
    TUR             reduce using rule 88 (llena_cuadruplo_if -> .)
    RET             reduce using rule 88 (llena_cuadruplo_if -> .)
    RBRACKET        reduce using rule 88 (llena_cuadruplo_if -> .)

    llena_cuadruplo_if             shift and go to state 252

state 244

    (89) pos_else -> ELSE . crea_else_cuadruplo LBRACKET reg_brack RBRACKET
    (91) crea_else_cuadruplo -> .

    LBRACKET        reduce using rule 91 (crea_else_cuadruplo -> .)

    crea_else_cuadruplo            shift and go to state 253

state 245

    (56) llama_funcion -> VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion . guarda_resultado_funcion
    (64) guarda_resultado_funcion -> .

    MULT            reduce using rule 64 (guarda_resultado_funcion -> .)
    DIV             reduce using rule 64 (guarda_resultado_funcion -> .)
    PLUS            reduce using rule 64 (guarda_resultado_funcion -> .)
    MINUS           reduce using rule 64 (guarda_resultado_funcion -> .)
    LT              reduce using rule 64 (guarda_resultado_funcion -> .)
    GT              reduce using rule 64 (guarda_resultado_funcion -> .)
    NE              reduce using rule 64 (guarda_resultado_funcion -> .)
    LE              reduce using rule 64 (guarda_resultado_funcion -> .)
    GE              reduce using rule 64 (guarda_resultado_funcion -> .)
    EQ              reduce using rule 64 (guarda_resultado_funcion -> .)
    SEMICOLON       reduce using rule 64 (guarda_resultado_funcion -> .)
    RPAREN          reduce using rule 64 (guarda_resultado_funcion -> .)
    SRBRACKET       reduce using rule 64 (guarda_resultado_funcion -> .)
    COMMA           reduce using rule 64 (guarda_resultado_funcion -> .)

    guarda_resultado_funcion       shift and go to state 254

state 246

    (96) Llamada_Func -> VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion SEMICOLON . checa_void
    (97) checa_void -> .

    IF              reduce using rule 97 (checa_void -> .)
    RETURN          reduce using rule 97 (checa_void -> .)
    VAR_ID          reduce using rule 97 (checa_void -> .)
    PRINT           reduce using rule 97 (checa_void -> .)
    FOR             reduce using rule 97 (checa_void -> .)
    WHILE           reduce using rule 97 (checa_void -> .)
    DO              reduce using rule 97 (checa_void -> .)
    TUR             reduce using rule 97 (checa_void -> .)
    RET             reduce using rule 97 (checa_void -> .)
    RBRACKET        reduce using rule 97 (checa_void -> .)

    checa_void                     shift and go to state 255

state 247

    (60) mas_argumentos -> COMMA ExpI resuelve_argumentos . mas_argumentos
    (60) mas_argumentos -> . COMMA ExpI resuelve_argumentos mas_argumentos
    (61) mas_argumentos -> .

    COMMA           shift and go to state 220
    RPAREN          reduce using rule 61 (mas_argumentos -> .)

    mas_argumentos                 shift and go to state 256

state 248

    (106) For -> FOR LPAREN VAR_ID ASSIGN ExpI SEMICOLON ExpI SEMICOLON VAR_ID . Exp_ciclo RPAREN LBRACKET reg_brack RBRACKET
    (107) Exp_ciclo -> . PLUS VAR_INT
    (108) Exp_ciclo -> . MINUS VAR_INT
    (109) Exp_ciclo -> . MULT VAR_INT
    (110) Exp_ciclo -> . DIV VAR_INT
    (111) Exp_ciclo -> . PLUSPLUS
    (112) Exp_ciclo -> . MINUSMINUS

    PLUS            shift and go to state 258
    MINUS           shift and go to state 259
    MULT            shift and go to state 260
    DIV             shift and go to state 261
    PLUSPLUS        shift and go to state 262
    MINUSMINUS      shift and go to state 263

    Exp_ciclo                      shift and go to state 257

state 249

    (101) While -> WHILE guarda_numero_cuadruplo LPAREN ExpI RPAREN crea_GOTOF LBRACKET reg_brack RBRACKET . regresa_inicio_while
    (103) regresa_inicio_while -> .

    IF              reduce using rule 103 (regresa_inicio_while -> .)
    RETURN          reduce using rule 103 (regresa_inicio_while -> .)
    VAR_ID          reduce using rule 103 (regresa_inicio_while -> .)
    PRINT           reduce using rule 103 (regresa_inicio_while -> .)
    FOR             reduce using rule 103 (regresa_inicio_while -> .)
    WHILE           reduce using rule 103 (regresa_inicio_while -> .)
    DO              reduce using rule 103 (regresa_inicio_while -> .)
    TUR             reduce using rule 103 (regresa_inicio_while -> .)
    RET             reduce using rule 103 (regresa_inicio_while -> .)
    RBRACKET        reduce using rule 103 (regresa_inicio_while -> .)

    regresa_inicio_while           shift and go to state 264

state 250

    (104) DoWhile -> DO guarda_numero_cuadruplo LBRACKET reg_brack RBRACKET WHILE LPAREN ExpI RPAREN . SEMICOLON crea_GOTOV

    SEMICOLON       shift and go to state 265


state 251

    (130) Position -> TUR POINT POS LPAREN ExpI COMMA ExpI RPAREN SEMICOLON . crea_cuadruplo_pos
    (131) crea_cuadruplo_pos -> .

    IF              reduce using rule 131 (crea_cuadruplo_pos -> .)
    RETURN          reduce using rule 131 (crea_cuadruplo_pos -> .)
    VAR_ID          reduce using rule 131 (crea_cuadruplo_pos -> .)
    PRINT           reduce using rule 131 (crea_cuadruplo_pos -> .)
    FOR             reduce using rule 131 (crea_cuadruplo_pos -> .)
    WHILE           reduce using rule 131 (crea_cuadruplo_pos -> .)
    DO              reduce using rule 131 (crea_cuadruplo_pos -> .)
    TUR             reduce using rule 131 (crea_cuadruplo_pos -> .)
    RET             reduce using rule 131 (crea_cuadruplo_pos -> .)
    RBRACKET        reduce using rule 131 (crea_cuadruplo_pos -> .)

    crea_cuadruplo_pos             shift and go to state 266

state 252

    (86) Condicion -> IF LPAREN ExpI RPAREN crea_GOTOF LBRACKET reg_brack RBRACKET pos_else llena_cuadruplo_if .

    IF              reduce using rule 86 (Condicion -> IF LPAREN ExpI RPAREN crea_GOTOF LBRACKET reg_brack RBRACKET pos_else llena_cuadruplo_if .)
    RETURN          reduce using rule 86 (Condicion -> IF LPAREN ExpI RPAREN crea_GOTOF LBRACKET reg_brack RBRACKET pos_else llena_cuadruplo_if .)
    VAR_ID          reduce using rule 86 (Condicion -> IF LPAREN ExpI RPAREN crea_GOTOF LBRACKET reg_brack RBRACKET pos_else llena_cuadruplo_if .)
    PRINT           reduce using rule 86 (Condicion -> IF LPAREN ExpI RPAREN crea_GOTOF LBRACKET reg_brack RBRACKET pos_else llena_cuadruplo_if .)
    FOR             reduce using rule 86 (Condicion -> IF LPAREN ExpI RPAREN crea_GOTOF LBRACKET reg_brack RBRACKET pos_else llena_cuadruplo_if .)
    WHILE           reduce using rule 86 (Condicion -> IF LPAREN ExpI RPAREN crea_GOTOF LBRACKET reg_brack RBRACKET pos_else llena_cuadruplo_if .)
    DO              reduce using rule 86 (Condicion -> IF LPAREN ExpI RPAREN crea_GOTOF LBRACKET reg_brack RBRACKET pos_else llena_cuadruplo_if .)
    TUR             reduce using rule 86 (Condicion -> IF LPAREN ExpI RPAREN crea_GOTOF LBRACKET reg_brack RBRACKET pos_else llena_cuadruplo_if .)
    RET             reduce using rule 86 (Condicion -> IF LPAREN ExpI RPAREN crea_GOTOF LBRACKET reg_brack RBRACKET pos_else llena_cuadruplo_if .)
    RBRACKET        reduce using rule 86 (Condicion -> IF LPAREN ExpI RPAREN crea_GOTOF LBRACKET reg_brack RBRACKET pos_else llena_cuadruplo_if .)


state 253

    (89) pos_else -> ELSE crea_else_cuadruplo . LBRACKET reg_brack RBRACKET

    LBRACKET        shift and go to state 267


state 254

    (56) llama_funcion -> VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion guarda_resultado_funcion .

    MULT            reduce using rule 56 (llama_funcion -> VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion guarda_resultado_funcion .)
    DIV             reduce using rule 56 (llama_funcion -> VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion guarda_resultado_funcion .)
    PLUS            reduce using rule 56 (llama_funcion -> VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion guarda_resultado_funcion .)
    MINUS           reduce using rule 56 (llama_funcion -> VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion guarda_resultado_funcion .)
    LT              reduce using rule 56 (llama_funcion -> VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion guarda_resultado_funcion .)
    GT              reduce using rule 56 (llama_funcion -> VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion guarda_resultado_funcion .)
    NE              reduce using rule 56 (llama_funcion -> VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion guarda_resultado_funcion .)
    LE              reduce using rule 56 (llama_funcion -> VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion guarda_resultado_funcion .)
    GE              reduce using rule 56 (llama_funcion -> VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion guarda_resultado_funcion .)
    EQ              reduce using rule 56 (llama_funcion -> VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion guarda_resultado_funcion .)
    SEMICOLON       reduce using rule 56 (llama_funcion -> VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion guarda_resultado_funcion .)
    RPAREN          reduce using rule 56 (llama_funcion -> VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion guarda_resultado_funcion .)
    SRBRACKET       reduce using rule 56 (llama_funcion -> VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion guarda_resultado_funcion .)
    COMMA           reduce using rule 56 (llama_funcion -> VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion guarda_resultado_funcion .)


state 255

    (96) Llamada_Func -> VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion SEMICOLON checa_void .

    IF              reduce using rule 96 (Llamada_Func -> VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion SEMICOLON checa_void .)
    RETURN          reduce using rule 96 (Llamada_Func -> VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion SEMICOLON checa_void .)
    VAR_ID          reduce using rule 96 (Llamada_Func -> VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion SEMICOLON checa_void .)
    PRINT           reduce using rule 96 (Llamada_Func -> VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion SEMICOLON checa_void .)
    FOR             reduce using rule 96 (Llamada_Func -> VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion SEMICOLON checa_void .)
    WHILE           reduce using rule 96 (Llamada_Func -> VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion SEMICOLON checa_void .)
    DO              reduce using rule 96 (Llamada_Func -> VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion SEMICOLON checa_void .)
    TUR             reduce using rule 96 (Llamada_Func -> VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion SEMICOLON checa_void .)
    RET             reduce using rule 96 (Llamada_Func -> VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion SEMICOLON checa_void .)
    RBRACKET        reduce using rule 96 (Llamada_Func -> VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion SEMICOLON checa_void .)


state 256

    (60) mas_argumentos -> COMMA ExpI resuelve_argumentos mas_argumentos .

    RPAREN          reduce using rule 60 (mas_argumentos -> COMMA ExpI resuelve_argumentos mas_argumentos .)


state 257

    (106) For -> FOR LPAREN VAR_ID ASSIGN ExpI SEMICOLON ExpI SEMICOLON VAR_ID Exp_ciclo . RPAREN LBRACKET reg_brack RBRACKET

    RPAREN          shift and go to state 268


state 258

    (107) Exp_ciclo -> PLUS . VAR_INT

    VAR_INT         shift and go to state 269


state 259

    (108) Exp_ciclo -> MINUS . VAR_INT

    VAR_INT         shift and go to state 270


state 260

    (109) Exp_ciclo -> MULT . VAR_INT

    VAR_INT         shift and go to state 271


state 261

    (110) Exp_ciclo -> DIV . VAR_INT

    VAR_INT         shift and go to state 272


state 262

    (111) Exp_ciclo -> PLUSPLUS .

    RPAREN          reduce using rule 111 (Exp_ciclo -> PLUSPLUS .)


state 263

    (112) Exp_ciclo -> MINUSMINUS .

    RPAREN          reduce using rule 112 (Exp_ciclo -> MINUSMINUS .)


state 264

    (101) While -> WHILE guarda_numero_cuadruplo LPAREN ExpI RPAREN crea_GOTOF LBRACKET reg_brack RBRACKET regresa_inicio_while .

    IF              reduce using rule 101 (While -> WHILE guarda_numero_cuadruplo LPAREN ExpI RPAREN crea_GOTOF LBRACKET reg_brack RBRACKET regresa_inicio_while .)
    RETURN          reduce using rule 101 (While -> WHILE guarda_numero_cuadruplo LPAREN ExpI RPAREN crea_GOTOF LBRACKET reg_brack RBRACKET regresa_inicio_while .)
    VAR_ID          reduce using rule 101 (While -> WHILE guarda_numero_cuadruplo LPAREN ExpI RPAREN crea_GOTOF LBRACKET reg_brack RBRACKET regresa_inicio_while .)
    PRINT           reduce using rule 101 (While -> WHILE guarda_numero_cuadruplo LPAREN ExpI RPAREN crea_GOTOF LBRACKET reg_brack RBRACKET regresa_inicio_while .)
    FOR             reduce using rule 101 (While -> WHILE guarda_numero_cuadruplo LPAREN ExpI RPAREN crea_GOTOF LBRACKET reg_brack RBRACKET regresa_inicio_while .)
    WHILE           reduce using rule 101 (While -> WHILE guarda_numero_cuadruplo LPAREN ExpI RPAREN crea_GOTOF LBRACKET reg_brack RBRACKET regresa_inicio_while .)
    DO              reduce using rule 101 (While -> WHILE guarda_numero_cuadruplo LPAREN ExpI RPAREN crea_GOTOF LBRACKET reg_brack RBRACKET regresa_inicio_while .)
    TUR             reduce using rule 101 (While -> WHILE guarda_numero_cuadruplo LPAREN ExpI RPAREN crea_GOTOF LBRACKET reg_brack RBRACKET regresa_inicio_while .)
    RET             reduce using rule 101 (While -> WHILE guarda_numero_cuadruplo LPAREN ExpI RPAREN crea_GOTOF LBRACKET reg_brack RBRACKET regresa_inicio_while .)
    RBRACKET        reduce using rule 101 (While -> WHILE guarda_numero_cuadruplo LPAREN ExpI RPAREN crea_GOTOF LBRACKET reg_brack RBRACKET regresa_inicio_while .)


state 265

    (104) DoWhile -> DO guarda_numero_cuadruplo LBRACKET reg_brack RBRACKET WHILE LPAREN ExpI RPAREN SEMICOLON . crea_GOTOV
    (105) crea_GOTOV -> .

    IF              reduce using rule 105 (crea_GOTOV -> .)
    RETURN          reduce using rule 105 (crea_GOTOV -> .)
    VAR_ID          reduce using rule 105 (crea_GOTOV -> .)
    PRINT           reduce using rule 105 (crea_GOTOV -> .)
    FOR             reduce using rule 105 (crea_GOTOV -> .)
    WHILE           reduce using rule 105 (crea_GOTOV -> .)
    DO              reduce using rule 105 (crea_GOTOV -> .)
    TUR             reduce using rule 105 (crea_GOTOV -> .)
    RET             reduce using rule 105 (crea_GOTOV -> .)
    RBRACKET        reduce using rule 105 (crea_GOTOV -> .)

    crea_GOTOV                     shift and go to state 273

state 266

    (130) Position -> TUR POINT POS LPAREN ExpI COMMA ExpI RPAREN SEMICOLON crea_cuadruplo_pos .

    IF              reduce using rule 130 (Position -> TUR POINT POS LPAREN ExpI COMMA ExpI RPAREN SEMICOLON crea_cuadruplo_pos .)
    RETURN          reduce using rule 130 (Position -> TUR POINT POS LPAREN ExpI COMMA ExpI RPAREN SEMICOLON crea_cuadruplo_pos .)
    VAR_ID          reduce using rule 130 (Position -> TUR POINT POS LPAREN ExpI COMMA ExpI RPAREN SEMICOLON crea_cuadruplo_pos .)
    PRINT           reduce using rule 130 (Position -> TUR POINT POS LPAREN ExpI COMMA ExpI RPAREN SEMICOLON crea_cuadruplo_pos .)
    FOR             reduce using rule 130 (Position -> TUR POINT POS LPAREN ExpI COMMA ExpI RPAREN SEMICOLON crea_cuadruplo_pos .)
    WHILE           reduce using rule 130 (Position -> TUR POINT POS LPAREN ExpI COMMA ExpI RPAREN SEMICOLON crea_cuadruplo_pos .)
    DO              reduce using rule 130 (Position -> TUR POINT POS LPAREN ExpI COMMA ExpI RPAREN SEMICOLON crea_cuadruplo_pos .)
    TUR             reduce using rule 130 (Position -> TUR POINT POS LPAREN ExpI COMMA ExpI RPAREN SEMICOLON crea_cuadruplo_pos .)
    RET             reduce using rule 130 (Position -> TUR POINT POS LPAREN ExpI COMMA ExpI RPAREN SEMICOLON crea_cuadruplo_pos .)
    RBRACKET        reduce using rule 130 (Position -> TUR POINT POS LPAREN ExpI COMMA ExpI RPAREN SEMICOLON crea_cuadruplo_pos .)


state 267

    (89) pos_else -> ELSE crea_else_cuadruplo LBRACKET . reg_brack RBRACKET
    (77) reg_brack -> . Estatutos reg_brack
    (78) reg_brack -> .
    (79) Estatutos -> . Condicion
    (80) Estatutos -> . Ciclo
    (81) Estatutos -> . Return
    (82) Estatutos -> . Asignacion
    (83) Estatutos -> . Print
    (84) Estatutos -> . Llamada_Func
    (85) Estatutos -> . Turtle
    (86) Condicion -> . IF LPAREN ExpI RPAREN crea_GOTOF LBRACKET reg_brack RBRACKET pos_else llena_cuadruplo_if
    (98) Ciclo -> . For
    (99) Ciclo -> . While
    (100) Ciclo -> . DoWhile
    (92) Return -> . RETURN ExpI SEMICOLON resuelve_return
    (17) Asignacion -> . VAR_ID push_var_PilaOperandos ASSIGN push_operador_PilaOperadores ExpI SEMICOLON resuelve_asignacion
    (94) Print -> . PRINT LPAREN ExpI RPAREN SEMICOLON crea_print
    (96) Llamada_Func -> . VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion SEMICOLON checa_void
    (115) Turtle -> . Forward
    (116) Turtle -> . Right
    (117) Turtle -> . Left
    (118) Turtle -> . Circle
    (119) Turtle -> . Position
    (120) Turtle -> . IniciaTurtle
    (121) Turtle -> . TerminaTurtle
    (106) For -> . FOR LPAREN VAR_ID ASSIGN ExpI SEMICOLON ExpI SEMICOLON VAR_ID Exp_ciclo RPAREN LBRACKET reg_brack RBRACKET
    (101) While -> . WHILE guarda_numero_cuadruplo LPAREN ExpI RPAREN crea_GOTOF LBRACKET reg_brack RBRACKET regresa_inicio_while
    (104) DoWhile -> . DO guarda_numero_cuadruplo LBRACKET reg_brack RBRACKET WHILE LPAREN ExpI RPAREN SEMICOLON crea_GOTOV
    (122) Forward -> . TUR POINT FORWARD LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_forward
    (124) Right -> . TUR POINT RIGHT LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_right
    (126) Left -> . TUR POINT LEFT LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_left
    (128) Circle -> . TUR POINT CIRCLE LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_circle
    (130) Position -> . TUR POINT POS LPAREN ExpI COMMA ExpI RPAREN SEMICOLON crea_cuadruplo_pos
    (132) IniciaTurtle -> . TUR POINT TURTLE LPAREN RPAREN SEMICOLON crea_cuadruplo_inicia
    (134) TerminaTurtle -> . TUR POINT FINISH LPAREN RPAREN SEMICOLON crea_cuadruplo_termina

    RBRACKET        reduce using rule 78 (reg_brack -> .)
    IF              shift and go to state 59
    RETURN          shift and go to state 63
    VAR_ID          shift and go to state 64
    PRINT           shift and go to state 65
    FOR             shift and go to state 73
    WHILE           shift and go to state 74
    DO              shift and go to state 75
    TUR             shift and go to state 76

    reg_brack                      shift and go to state 274
    Estatutos                      shift and go to state 51
    Condicion                      shift and go to state 52
    Ciclo                          shift and go to state 53
    Return                         shift and go to state 54
    Asignacion                     shift and go to state 55
    Print                          shift and go to state 56
    Llamada_Func                   shift and go to state 57
    Turtle                         shift and go to state 58
    For                            shift and go to state 60
    While                          shift and go to state 61
    DoWhile                        shift and go to state 62
    Forward                        shift and go to state 66
    Right                          shift and go to state 67
    Left                           shift and go to state 68
    Circle                         shift and go to state 69
    Position                       shift and go to state 70
    IniciaTurtle                   shift and go to state 71
    TerminaTurtle                  shift and go to state 72

state 268

    (106) For -> FOR LPAREN VAR_ID ASSIGN ExpI SEMICOLON ExpI SEMICOLON VAR_ID Exp_ciclo RPAREN . LBRACKET reg_brack RBRACKET

    LBRACKET        shift and go to state 275


state 269

    (107) Exp_ciclo -> PLUS VAR_INT .

    RPAREN          reduce using rule 107 (Exp_ciclo -> PLUS VAR_INT .)


state 270

    (108) Exp_ciclo -> MINUS VAR_INT .

    RPAREN          reduce using rule 108 (Exp_ciclo -> MINUS VAR_INT .)


state 271

    (109) Exp_ciclo -> MULT VAR_INT .

    RPAREN          reduce using rule 109 (Exp_ciclo -> MULT VAR_INT .)


state 272

    (110) Exp_ciclo -> DIV VAR_INT .

    RPAREN          reduce using rule 110 (Exp_ciclo -> DIV VAR_INT .)


state 273

    (104) DoWhile -> DO guarda_numero_cuadruplo LBRACKET reg_brack RBRACKET WHILE LPAREN ExpI RPAREN SEMICOLON crea_GOTOV .

    IF              reduce using rule 104 (DoWhile -> DO guarda_numero_cuadruplo LBRACKET reg_brack RBRACKET WHILE LPAREN ExpI RPAREN SEMICOLON crea_GOTOV .)
    RETURN          reduce using rule 104 (DoWhile -> DO guarda_numero_cuadruplo LBRACKET reg_brack RBRACKET WHILE LPAREN ExpI RPAREN SEMICOLON crea_GOTOV .)
    VAR_ID          reduce using rule 104 (DoWhile -> DO guarda_numero_cuadruplo LBRACKET reg_brack RBRACKET WHILE LPAREN ExpI RPAREN SEMICOLON crea_GOTOV .)
    PRINT           reduce using rule 104 (DoWhile -> DO guarda_numero_cuadruplo LBRACKET reg_brack RBRACKET WHILE LPAREN ExpI RPAREN SEMICOLON crea_GOTOV .)
    FOR             reduce using rule 104 (DoWhile -> DO guarda_numero_cuadruplo LBRACKET reg_brack RBRACKET WHILE LPAREN ExpI RPAREN SEMICOLON crea_GOTOV .)
    WHILE           reduce using rule 104 (DoWhile -> DO guarda_numero_cuadruplo LBRACKET reg_brack RBRACKET WHILE LPAREN ExpI RPAREN SEMICOLON crea_GOTOV .)
    DO              reduce using rule 104 (DoWhile -> DO guarda_numero_cuadruplo LBRACKET reg_brack RBRACKET WHILE LPAREN ExpI RPAREN SEMICOLON crea_GOTOV .)
    TUR             reduce using rule 104 (DoWhile -> DO guarda_numero_cuadruplo LBRACKET reg_brack RBRACKET WHILE LPAREN ExpI RPAREN SEMICOLON crea_GOTOV .)
    RET             reduce using rule 104 (DoWhile -> DO guarda_numero_cuadruplo LBRACKET reg_brack RBRACKET WHILE LPAREN ExpI RPAREN SEMICOLON crea_GOTOV .)
    RBRACKET        reduce using rule 104 (DoWhile -> DO guarda_numero_cuadruplo LBRACKET reg_brack RBRACKET WHILE LPAREN ExpI RPAREN SEMICOLON crea_GOTOV .)


state 274

    (89) pos_else -> ELSE crea_else_cuadruplo LBRACKET reg_brack . RBRACKET

    RBRACKET        shift and go to state 276


state 275

    (106) For -> FOR LPAREN VAR_ID ASSIGN ExpI SEMICOLON ExpI SEMICOLON VAR_ID Exp_ciclo RPAREN LBRACKET . reg_brack RBRACKET
    (77) reg_brack -> . Estatutos reg_brack
    (78) reg_brack -> .
    (79) Estatutos -> . Condicion
    (80) Estatutos -> . Ciclo
    (81) Estatutos -> . Return
    (82) Estatutos -> . Asignacion
    (83) Estatutos -> . Print
    (84) Estatutos -> . Llamada_Func
    (85) Estatutos -> . Turtle
    (86) Condicion -> . IF LPAREN ExpI RPAREN crea_GOTOF LBRACKET reg_brack RBRACKET pos_else llena_cuadruplo_if
    (98) Ciclo -> . For
    (99) Ciclo -> . While
    (100) Ciclo -> . DoWhile
    (92) Return -> . RETURN ExpI SEMICOLON resuelve_return
    (17) Asignacion -> . VAR_ID push_var_PilaOperandos ASSIGN push_operador_PilaOperadores ExpI SEMICOLON resuelve_asignacion
    (94) Print -> . PRINT LPAREN ExpI RPAREN SEMICOLON crea_print
    (96) Llamada_Func -> . VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion SEMICOLON checa_void
    (115) Turtle -> . Forward
    (116) Turtle -> . Right
    (117) Turtle -> . Left
    (118) Turtle -> . Circle
    (119) Turtle -> . Position
    (120) Turtle -> . IniciaTurtle
    (121) Turtle -> . TerminaTurtle
    (106) For -> . FOR LPAREN VAR_ID ASSIGN ExpI SEMICOLON ExpI SEMICOLON VAR_ID Exp_ciclo RPAREN LBRACKET reg_brack RBRACKET
    (101) While -> . WHILE guarda_numero_cuadruplo LPAREN ExpI RPAREN crea_GOTOF LBRACKET reg_brack RBRACKET regresa_inicio_while
    (104) DoWhile -> . DO guarda_numero_cuadruplo LBRACKET reg_brack RBRACKET WHILE LPAREN ExpI RPAREN SEMICOLON crea_GOTOV
    (122) Forward -> . TUR POINT FORWARD LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_forward
    (124) Right -> . TUR POINT RIGHT LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_right
    (126) Left -> . TUR POINT LEFT LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_left
    (128) Circle -> . TUR POINT CIRCLE LPAREN ExpI RPAREN SEMICOLON crea_cuadruplo_circle
    (130) Position -> . TUR POINT POS LPAREN ExpI COMMA ExpI RPAREN SEMICOLON crea_cuadruplo_pos
    (132) IniciaTurtle -> . TUR POINT TURTLE LPAREN RPAREN SEMICOLON crea_cuadruplo_inicia
    (134) TerminaTurtle -> . TUR POINT FINISH LPAREN RPAREN SEMICOLON crea_cuadruplo_termina

    RBRACKET        reduce using rule 78 (reg_brack -> .)
    IF              shift and go to state 59
    RETURN          shift and go to state 63
    VAR_ID          shift and go to state 64
    PRINT           shift and go to state 65
    FOR             shift and go to state 73
    WHILE           shift and go to state 74
    DO              shift and go to state 75
    TUR             shift and go to state 76

    reg_brack                      shift and go to state 277
    Estatutos                      shift and go to state 51
    Condicion                      shift and go to state 52
    Ciclo                          shift and go to state 53
    Return                         shift and go to state 54
    Asignacion                     shift and go to state 55
    Print                          shift and go to state 56
    Llamada_Func                   shift and go to state 57
    Turtle                         shift and go to state 58
    For                            shift and go to state 60
    While                          shift and go to state 61
    DoWhile                        shift and go to state 62
    Forward                        shift and go to state 66
    Right                          shift and go to state 67
    Left                           shift and go to state 68
    Circle                         shift and go to state 69
    Position                       shift and go to state 70
    IniciaTurtle                   shift and go to state 71
    TerminaTurtle                  shift and go to state 72

state 276

    (89) pos_else -> ELSE crea_else_cuadruplo LBRACKET reg_brack RBRACKET .

    IF              reduce using rule 89 (pos_else -> ELSE crea_else_cuadruplo LBRACKET reg_brack RBRACKET .)
    RETURN          reduce using rule 89 (pos_else -> ELSE crea_else_cuadruplo LBRACKET reg_brack RBRACKET .)
    VAR_ID          reduce using rule 89 (pos_else -> ELSE crea_else_cuadruplo LBRACKET reg_brack RBRACKET .)
    PRINT           reduce using rule 89 (pos_else -> ELSE crea_else_cuadruplo LBRACKET reg_brack RBRACKET .)
    FOR             reduce using rule 89 (pos_else -> ELSE crea_else_cuadruplo LBRACKET reg_brack RBRACKET .)
    WHILE           reduce using rule 89 (pos_else -> ELSE crea_else_cuadruplo LBRACKET reg_brack RBRACKET .)
    DO              reduce using rule 89 (pos_else -> ELSE crea_else_cuadruplo LBRACKET reg_brack RBRACKET .)
    TUR             reduce using rule 89 (pos_else -> ELSE crea_else_cuadruplo LBRACKET reg_brack RBRACKET .)
    RET             reduce using rule 89 (pos_else -> ELSE crea_else_cuadruplo LBRACKET reg_brack RBRACKET .)
    RBRACKET        reduce using rule 89 (pos_else -> ELSE crea_else_cuadruplo LBRACKET reg_brack RBRACKET .)


state 277

    (106) For -> FOR LPAREN VAR_ID ASSIGN ExpI SEMICOLON ExpI SEMICOLON VAR_ID Exp_ciclo RPAREN LBRACKET reg_brack . RBRACKET

    RBRACKET        shift and go to state 278


state 278

    (106) For -> FOR LPAREN VAR_ID ASSIGN ExpI SEMICOLON ExpI SEMICOLON VAR_ID Exp_ciclo RPAREN LBRACKET reg_brack RBRACKET .

    IF              reduce using rule 106 (For -> FOR LPAREN VAR_ID ASSIGN ExpI SEMICOLON ExpI SEMICOLON VAR_ID Exp_ciclo RPAREN LBRACKET reg_brack RBRACKET .)
    RETURN          reduce using rule 106 (For -> FOR LPAREN VAR_ID ASSIGN ExpI SEMICOLON ExpI SEMICOLON VAR_ID Exp_ciclo RPAREN LBRACKET reg_brack RBRACKET .)
    VAR_ID          reduce using rule 106 (For -> FOR LPAREN VAR_ID ASSIGN ExpI SEMICOLON ExpI SEMICOLON VAR_ID Exp_ciclo RPAREN LBRACKET reg_brack RBRACKET .)
    PRINT           reduce using rule 106 (For -> FOR LPAREN VAR_ID ASSIGN ExpI SEMICOLON ExpI SEMICOLON VAR_ID Exp_ciclo RPAREN LBRACKET reg_brack RBRACKET .)
    FOR             reduce using rule 106 (For -> FOR LPAREN VAR_ID ASSIGN ExpI SEMICOLON ExpI SEMICOLON VAR_ID Exp_ciclo RPAREN LBRACKET reg_brack RBRACKET .)
    WHILE           reduce using rule 106 (For -> FOR LPAREN VAR_ID ASSIGN ExpI SEMICOLON ExpI SEMICOLON VAR_ID Exp_ciclo RPAREN LBRACKET reg_brack RBRACKET .)
    DO              reduce using rule 106 (For -> FOR LPAREN VAR_ID ASSIGN ExpI SEMICOLON ExpI SEMICOLON VAR_ID Exp_ciclo RPAREN LBRACKET reg_brack RBRACKET .)
    TUR             reduce using rule 106 (For -> FOR LPAREN VAR_ID ASSIGN ExpI SEMICOLON ExpI SEMICOLON VAR_ID Exp_ciclo RPAREN LBRACKET reg_brack RBRACKET .)
    RET             reduce using rule 106 (For -> FOR LPAREN VAR_ID ASSIGN ExpI SEMICOLON ExpI SEMICOLON VAR_ID Exp_ciclo RPAREN LBRACKET reg_brack RBRACKET .)
    RBRACKET        reduce using rule 106 (For -> FOR LPAREN VAR_ID ASSIGN ExpI SEMICOLON ExpI SEMICOLON VAR_ID Exp_ciclo RPAREN LBRACKET reg_brack RBRACKET .)

